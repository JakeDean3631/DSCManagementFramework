<?xml version="1.0" encoding="utf-8"?>
<CHECKLIST>
	<ASSET>
		<ROLE>None</ROLE>
		<ASSET_TYPE>Computing</ASSET_TYPE>
		<HOST_NAME></HOST_NAME>
		<HOST_IP></HOST_IP>
		<HOST_MAC></HOST_MAC>
		<HOST_GUID></HOST_GUID>
		<HOST_FQDN></HOST_FQDN>
		<TECH_AREA></TECH_AREA>
		<TARGET_KEY>2350</TARGET_KEY>
		<WEB_OR_DATABASE>false</WEB_OR_DATABASE>
		<WEB_DB_SITE></WEB_DB_SITE>
		<WEB_DB_INSTANCE></WEB_DB_INSTANCE>
	</ASSET>
	<STIGS>
		<iSTIG>
			<STIG_INFO>
				<SI_DATA>
					<SID_NAME>version</SID_NAME>
					<SID_DATA>1</SID_DATA>
				</SI_DATA>
				<SI_DATA>
					<SID_NAME>classification</SID_NAME>
					<SID_DATA>UNCLASSIFIED</SID_DATA>
				</SI_DATA>
				<SI_DATA>
					<SID_NAME>customname</SID_NAME>
					<SID_DATA></SID_DATA>
				</SI_DATA>
				<SI_DATA>
					<SID_NAME>stigid</SID_NAME>
					<SID_DATA>Microsoft_SQL_Server_2012_Database_Instance_Security_Technical_Implementation_Guide</SID_DATA>
				</SI_DATA>
				<SI_DATA>
					<SID_NAME>description</SID_NAME>
					<SID_DATA>The Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide (STIG) is published as a tool to improve the security of Department of Defense (DoD) information systems. Comments or proposed revisions to this document should be sent via e-mail to the following address: disa.stig_spt@mail.mil.</SID_DATA>
				</SI_DATA>
				<SI_DATA>
					<SID_NAME>filename</SID_NAME>
					<SID_DATA>U_SQL_Server_2012_Instance_STIG_V1R17_Manual-xccdf.xml</SID_DATA>
				</SI_DATA>
				<SI_DATA>
					<SID_NAME>releaseinfo</SID_NAME>
					<SID_DATA>Release: 17 Benchmark Date: 27 Apr 2018</SID_DATA>
				</SI_DATA>
				<SI_DATA>
					<SID_NAME>title</SID_NAME>
					<SID_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide</SID_DATA>
				</SI_DATA>
				<SI_DATA>
					<SID_NAME>uuid</SID_NAME>
					<SID_DATA>2d899ddf-19fc-4324-a1d2-3143b6032c5e</SID_DATA>
				</SI_DATA>
				<SI_DATA>
					<SID_NAME>notice</SID_NAME>
					<SID_DATA></SID_DATA>
				</SI_DATA>
				<SI_DATA>
					<SID_NAME>source</SID_NAME>
					<SID_DATA>STIG.DOD.MIL</SID_DATA>
				</SI_DATA>
			</STIG_INFO>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40905</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000268-DB-000164</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53259r5_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-023000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The system must activate an alarm and/or automatically shut SQL Server down if a failure is detected in its software components. </ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Predictable failure prevention requires organizational planning to address system failure issues. If components key to maintaining system security fail to function, then SQL Server could continue operating in an unsecure state. The organization must be prepared, and the system must be configured, to send an alarm for such conditions and/or automatically shut SQL Server down.

If appropriate actions are not taken when component failures occur, a denial of service condition may occur. Appropriate actions can include conducting a graceful application shutdown to avoid losing information.

For the purposes of this requirement, "component" may be interpreted as meaning any of the Windows services that comprise a SQL Server instance.  "The system" encompasses SQL Server itself, the Windows operating system, and any monitoring/management tools used to control the server.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check the configuration of SQL Server, the operating system and any monitoring/management tools to verify the system activates an alarm and/or triggers a shutdown of SQL Server when a component failure is detected.

If system does not take either or both actions, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Configure the system to activate an alarm and/or trigger a SQL Server shutdown when a component failure is detected.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001328</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40906</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000265-DB-000161</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53260r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-022700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must identify potential security-relevant error conditions.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The structure and content of SQL Server error messages need to be carefully considered by the organization and development team. The extent to which the application is able to identify and handle error conditions is guided by organizational policy and operational requirements.

Database logs can be monitored for specific security-related errors. Any error that can have a negative effect on database security should be quickly identified and forwarded to the appropriate personnel. If security-relevant error conditions are not identified by SQL Server they may be overlooked by the personnel responsible for addressing them.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Security-related errors must be identified and monitored. In most cases, these items would appear in the SQL Server log file.  

If security-related error conditions are not being monitored to meet this requirement, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Monitor SQL Server log files to determine when a security-related error occurs.

Add/Update list of appropriate personnel that are to be alerted when a security related error condition occurs to system documentation. Consider an automated job for both the monitor and the alerting.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40907</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>high</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000264-DB-000136</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53261r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-022600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must employ cryptographic mechanisms preventing the unauthorized disclosure of information during transmission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Preventing the disclosure of transmitted information requires that applications take measures to employ some form of cryptographic mechanism in order to protect the information during transmission. This is usually achieved through the use of Transport Layer Security (TLS), VPN, or IPSEC tunnel. 

Information in transmission is particularly vulnerable to attack. If the DBMS does not employ cryptographic mechanisms preventing unauthorized disclosure of information during transit, the information may be compromised.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If the DBMS exists in the unclassified environment, and data transmission does not cross the boundary between the NIPRNet and the wider Internet, and the application owner and authorizing official have determined that encryption is not required, this is not a finding.

Check SQL Server and network settings to determine whether cryptographic mechanisms are used to prevent the unauthorized disclosure of information during transmission. If not, this is a finding.

Review system documentation to determine whether the system handles classified information. If the system does not handle classified information, the severity of this check should be downgraded to Category II.

From Command Prompt, open SQL Server Configuration Manager by typing sqlservermanager11.msc, and pressing [ENTER].

Navigate to SQL Server Configuration Manager &gt;&gt; SQL Server Network Configuration. Right click on Protocols for [NAME OF INSTANCE], where [NAME OF INSTANCE] is a placeholder for the SQL Server instance name, and click on Properties.

On the Flags tab, if Force Encryption is set to "YES", examine the certificate used on the Certificate tab.

If Force Encryption is set, a DoD Certificate is not utilized, and a physical encryption measure is utilized, examine the physical encryption devices to determine the following:

1. The plaintext connection to the database server is afforded the highest protections, allowing no access to unauthorized or non-cleared personnel.
2. The encryption device is configured to pass traffic to only the specific IP addresses as identified by the database documentation.
3. The encryption keys utilized are current and valid keys.
4. The keys utilized meet approved organizationally defined compliant algorithms.

If any of the preceding requirements is not met, this is a finding.

If Force Encryption is set to "NO" or a DoD Certificate is not utilized, and physical encryption measures are not utilized, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Deploy organization-approved encryption to the SQL Server network connections.

Where physical network devices are used for encryption, set them up such that:

1. The plaintext connection to the database server is afforded the highest protections, allowing no access to unauthorized or non-cleared personnel.
2. The encryption device is configured to pass traffic to only the specific IP addresses as identified by the database documentation.
3. The encryption keys utilized are current and valid keys.
4. The keys utilized meet approved organizationally defined compliant algorithms.

Where SQL Server network encryption is used, open SQL Server Configuration Manager.  Navigate to SQL Server Configuration Manager &gt;&gt; SQL Server Network Configuration. Right click on Protocols for [NAME OF INSTANCE], where [NAME OF INSTANCE] is a placeholder for the SQL Server instance name, and click on Properties.  On the Flags tab, set Force Encryption to YES, provide a DoD certificate on the Certificate tab.   </ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002421</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40908</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000248-DB-000135</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53262r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-022400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must ensure, if Database Availability Groups are being used and there is a server failure, that none of the potential failover servers would suffer from resource exhaustion.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server has a feature called 'Availability Group' which provides automatic failover from a primary SQL Server to a secondary server. This concept is not new, but because SQL Server does warn that if the secondary SQL Server is not dedicated 100% to being a backup server, that "resource exhaustion" may be an issue if there is some load balancing going on.

If the primary SQL Server has a backup/secondary server that is dedicated 100% to the primary server's process, this is not a finding. If, however, the processing of the primary SQL Server is loaded to a secondary server that is already partly resourced to process something other than that of the primary SQL Server responsibility, then there can be load balancing issues.

Load balancing for the purpose of sharing a secondary/backup SQL Server is often done to share and save on resources.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If Database Availability Groups are not being used, this is not applicable (NA).

Check the system documentation and check with the administrator regarding processing resources of the backup/secondary SQL Server. 

If the primary SQL Server has a backup/secondary server that is dedicated 100% to the primary server's processing, this is not a finding.

If the secondary/backup SQL Server is already partly resourced to process something other than that of the primary SQL Server processing, then determine what resources would be required for the secondary/backup SQL Server.

If the secondary/backup SQL Server is determined to not have enough processing resources to fulfill the function of the primary server's SQL Server process, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Allocate replacement server(s) to provide failover support to the Primary SQL Server. 

If a single solution cannot be employed, split the processing of a secondary SQL Server amongst two or more secondary servers.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002394</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40909</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>low</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000248-DB-000135</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53263r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-022300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must limit the use of resources by priority and not impede the host from servicing processes designated as a higher priority.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Priority protection helps prevent a lower-priority process from delaying or interfering with the information system servicing any higher-priority process. This control does not apply to components in the information system for which there is only a single user/role. The application must limit the use of resources by priority.

SQL Server often runs queries for multiple users at the same time. If lower priority processes are utilizing a disproportionately high amount of database resources, this can severely impact higher priority processes.

Even if SQL Server's utilization is very small and there may seem to be no need to priority protection, often resources grow exponentially and must be implemented as part of an initial deployment.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review system documentation and determine if one type or more of SQL Server users has a business need for priority usage over other types of users. The need for prioritization most frequently occurs when SQL Server resources are shared between two or more applications or systems where the number of users on more than one system is small or non-existent. This needs to be the case, because SQL Server limits resource based on user accounts and not what process is running.

If SQL Server has users that are determined to run significantly high priority processes than other users and the SQL Server "Resource Governor" is not being implemented, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server utilizes the "Resource Governor" to determine who is allowed high processing resources. There are several configurations regarding the "Resource Governor" that mostly comes down to users or groups of users having a "MAX_CPU_PERCENT", "MIN_CPU_PERCENT", "MIN_MEMORY_PERCENT", and/or "MAX_MEMORY_PERCENT" settings.

Users are assigned to Workgroups and the Workgroups are configured processing resources via the "Resource Governor".</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002394</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40910</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000233-DB-000124</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53264r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-021500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must isolate security functions from nonsecurity functions by means of separate security domains.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Security functions are defined as "the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based".

Developers and implementers can increase the assurance in security functions by employing well-defined security policy models; structured, disciplined, and rigorous hardware and software development techniques; and sound system/security engineering principles.

Database Management Systems typically separate security functionality from nonsecurity functionality via separate databases or schemas. Database objects or code implementing security functionality should not be commingled with objects or code implementing application logic. When security and nonsecurity functionality is commingled, users who have access to nonsecurity functionality may be able to access security functionality.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Determine elements of security functionality (lists of permissions, additional authentication information, stored procedures, application specific auditing, etc.) which are being housed inside SQL server.

For any elements found, check SQL Server to determine if these objects or code implementing security functionality are located in a separate security domain, such as a separate database or schema created specifically for security functionality.

Run the following queryto list all the user-defined databases:
SELECT Name 
FROM sys.databases 
WHERE database_id &gt; 4 
ORDER BY 1;

If security-related database objects or code are not kept separate, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Locate security-related database objects and code in a separate database, schema, or other separate security domain from database objects and code implementing application logic.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001084</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40912</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>low</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000203-DB-000146</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53266r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-020400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must associate and maintain security labels when exchanging information between systems.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>When data is exchanged between information systems, the security attributes associated with said data need to be maintained.  

Security attributes are an abstraction representing the basic properties or characteristics of an entity with respect to safeguarding information, typically associated with internal data structures (e.g., records, buffers, files) within the information system and used to enable the implementation of access control and flow control policies, reflect special dissemination, handling or distribution instructions, or support other aspects of the information security policy. 

Security attributes may be explicitly or implicitly associated with the information contained within the information system. 

If database security labels are not maintained as information moves between systems, handling instructions can be lost and data can be accidentally distributed to unauthorized individuals.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review system documentation to determine if the labeling of sensitive data is required under organization-defined guidelines.

If the labeling of sensitive data is not required, this is NA.

Obtain system configuration setting to determine how data labeling is being performed. This can be through triggers or some other SQL developed means or via a third-party tool. Check to ensure that labels are being associated to data when information is being exchanged between systems.   

If the labeling is not being associated to data when exchanging data between systems, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Develop SQL code or acquire a third party tool to perform data labeling. SQL Server Label Security Toolkit can be downloaded from http://www.codeplex.com. This tool can satisfy all data labeling and security data labeling requirements.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001157</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40913</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000201-DB-000145</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53267r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-020300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must protect the integrity of publicly available information and SQL Servers configuration from unauthorized Server Roles access.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The purpose of this control is to ensure organizations explicitly address the protection needs for public information and applications, with such protection likely being implemented as part of other security controls. If SQL Server contains publicly available information, though not concerned with confidentiality, SQL Server must maintain the integrity of the data. If data available to the public is not protected from unauthorized modification or deletion, then the data cannot be trusted by those accessing it.

The user account associated with public access must not have access to the OS or SQL Server configuration information, include read access to schema information.

This requirement is not intended to prevent the establishment of public-facing systems for the purpose of collecting data from the public.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If SQL Server is not housing or distributing publicly available information, this finding is NA.

Obtain from the DBA or system documentation the list of publicly available data within SQL Server and the role names that assign read-only access to that public data.

Obtain the publicly available user account name being used to access SQL Server.

Navigate to Start &gt;&gt; Administrative Tools &gt;&gt; Server Manager &gt;&gt; Server Manager (&lt;'server name'&gt;) &gt;&gt; Configuration &gt;&gt; Local Users and Groups &gt;&gt; Groups &gt;&gt; right click 'Guests' &gt;&gt; Properties &gt;&gt; 'Members:'
The publicly available user account will likely be in the OS 'Guests' group.

Determine if SQL Server is granting more than read access to the publicly available information through SQL Server 'Server Roles'.

Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; right click &lt;'user account'&gt; &gt;&gt; Properties &gt;&gt; Server Roles.

If any 'Server Roles' are marked that grant more than read access to the publicly available information, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; right click &lt;'user account'&gt; &gt;&gt; Properties &gt;&gt; Server Roles.

Uncheck the 'Server Roles' that are checked and grant more than read-only access to the publicly available information.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40914</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000201-DB-000145</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53268r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-020200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must protect the integrity of publicly available information and SQL Servers configuration from unauthorized User Mapping access.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The purpose of this control is to ensure organizations explicitly address the protection needs for public information and applications, with such protection likely being implemented as part of other security controls. If SQL Server contains publicly available information, though not concerned with confidentiality, SQL Server must maintain the integrity of the data. If data available to the public is not protected from unauthorized modification or deletion, then the data cannot be trusted by those accessing it.

The user account  associated with public access must not have access to the OS or SQL Server configuration information, include read access to schema information. This access includes, but is not limited to, SQL Server 'User Mapping' assignments.

SQL Server access to any of the three system databases (master, model, or msdb) is restricted from the publicly available user account, because this would grant more than read-only access to public information. Of the existing user-defined databases, privileges must be checked to allow only read access to publically available data.

This requirement is not intended to prevent the establishment of public-facing systems for the purpose of collecting data from the public.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If SQL Server is not housing or distributing publicly available information, this finding is NA.

Obtain from the DBA or system documentation the list of publicly available data within SQL Server.

Obtain the publicly available user account name being used to access SQL Server.

Navigate to Start &gt;&gt; Administrative Tools &gt;&gt; Server Manager &gt;&gt; Server Manager (&lt;'server name'&gt;) &gt;&gt; Configuration &gt;&gt; Local Users and Groups &gt;&gt; Groups &gt;&gt; right click 'Guests' &gt;&gt; Properties &gt;&gt; 'Members:'
The publicly available user account will likely be in the OS 'Guests' group.

Determine if SQL Server is granting more than read access to the publicly available information through SQL Server 'User Mapping'.

Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; right click &lt;'user account'&gt; &gt;&gt; Properties &gt;&gt; User Mapping.

If any of the three system databases are checked (indicating a granted privilege): master, model, or msdb, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; right click &lt;'user account'&gt; &gt;&gt; Properties &gt;&gt; User Mapping &gt;&gt; highlight checked database.

Uncheck the 'Database role membership' that is checked and grants more than read-only access to the publicly available information.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40915</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000201-DB-000145</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53269r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-020100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must protect the integrity of publicly available information and applications.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The purpose of this control is to ensure organizations explicitly address the protection needs for public information and applications, with such protection likely being implemented as part of other security controls. If SQL Server contains publicly available information, though not concerned with confidentiality, SQL Server OS must maintain the integrity of the data. If data available to the public is not protected from unauthorized modification or deletion, then the data cannot be trusted by those accessing it.

The user account associated with public access must not have access to the OS configuration information. Determine what publicly available user account is being used to access SQL Server and validate that the publicly available user account only has read access to the public data and nothing else.

The OS level 'Guests' role grants connection access to the server without granting any other privileges. SQL Server configuration settings are used to grant access to the publicly available information, but this control ensures that the OS only is granted connection access to the server.

This requirement is not intended to prevent the establishment of public-facing systems for the purpose of collecting data from the public.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If SQL Server is not housing or distributing publicly available information, this finding is NA.

If SQL Server supports an application collecting information from the public, this is NA.

Obtain the publicly available user account name being used to access SQL Server.

Using an account with System Administrator privileges, from a command prompt, type lusrmgr.msc, and press [ENTER].
Navigate to Groups &gt;&gt; right click 'Guests' &gt;&gt; Properties &gt;&gt; 'Members:'
The publicly available user account will be in the OS 'Guests' group, or another explicitly defined group.

Determine if the obtained publicly available user account is located in any other groups.

In lusrmgr.msc, navigate to Users. Right click publicly available account name. Click Properties, then click the 'Member of' tab.

If the publicly available user account is found in any group 'Members' listing other than 'Guests', this is a finding.

In SQL, for the account that is used for public access, ensure that read-only access is the only access granted. If any other access is granted, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Using an account with System Administrator privileges, from a command prompt, type lusrmgr.msc, and press [ENTER].
Navigate to Groups.

Locate the additional group(s) from which the publicly available user account must be removed.

Right click &lt;'the group to modify' &gt;&gt; Properties &gt;&gt; 'Members:'

Remove the publicly available user account from the group by clicking/highlighting the account and then clicking the 'Remove' button.

Revoke any update permissions for a guest being used in the context of a guest account.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40916</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000201-DB-000145</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53270r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-020000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must protect the integrity of publicly available information and SQL Servers configuration from unauthorized Securables access.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The purpose of this control is to ensure organizations explicitly address the protection needs for public information and applications, with such protection likely being implemented as part of other security controls.

SQL Server must be configured to contain publicly available information. Though not concerned with confidentiality, SQL Server must maintain the integrity of the data. If data available to the public is not protected from unauthorized modification or deletion, then the data cannot be trusted by those accessing it. A publicly available user account must not have access to the OS or SQL Server configuration information, including read access to schema information. Determine what publicly available user account is being used to access SQL Server and validate that the publicly available user account only has read access to the public data and nothing else. This read-only access does not include SQL Server 'Securables' assignments.

SQL Server 'Securables' assignments grant the assignee privileges that are beyond read access to data. No public user account must have SQL Server 'Securables' privileges. Any assigned 'Securables' privileges to the public user account must be removed.

Likely the only 'Server roles' assignment for the publicly available user account would be 'public'. The only other 'Server roles' that could be authorized as read-only is a user-defined 'Server role'. It is more likely that read-only access is set up at the user database instance in role(s) specifically set up for this purpose. Assignment to the user database instances are made in the 'User Mapping' highlight within a user's properties.

This requirement is not intended to prevent the establishment of public-facing systems for the purpose of collecting data from the public.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If SQL Server is not housing or distributing publicly available information, this finding is NA.

If SQL Server supports an application collecting information from the public, this is NA.

Obtain from the DBA or system documentation the list of publicly available data within SQL Server.
Obtain the publicly available user account(s) being used to access SQL Server. 

Determine if SQL Server is granting more than read access to the publicly available information through SQL Server 'Securables'.

Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; right click &lt;'user account'&gt; &gt;&gt; Properties &gt;&gt; Securables.

If any 'Securables' are listed, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; right click &lt;'user account'&gt; &gt;&gt; Properties &gt;&gt; Securables &gt;&gt; highlight 'Securable Name'.

Uncheck all 'Grant', 'With Grant', and 'Deny' for the highlighted 'Securable'.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40917</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>high</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000196-DB-000141</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53271r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-019600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server databases in the classified environment, containing classified or sensitive information, must be encrypted using approved cryptography.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Cryptography is only as strong as the encryption modules/algorithms employed to encrypt the data.

Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data.

Data files that are not encrypted are vulnerable to theft. When data files are not encrypted, they can be copied and opened on a separate system. The data can be compromised without the information owner's knowledge that the theft has even taken place.

NSA has developed Type 1 algorithms for protecting classified information. The Committee on National Security Systems (CNSS) National Information Assurance Glossary (CNSS Instruction No. 4009) defines Type 1 products as:
“Cryptographic equipment, assembly or component classified or certified by NSA for encrypting and decrypting classified and sensitive national security information when appropriately keyed.
Developed using established NSA business processes and containing NSA approved algorithms are used to protect systems requiring the most stringent protection mechanisms.”

NSA-approved cryptography is required to be used for classified information system processing.

See FIPS Publication 140-2 and related documents for guidance on approved encryption techniques and certified encryption modules.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If the system exists in the non-classified environment, this is NA.

For each database under the SQL Server instance, review the system documentation to determine whether the database holds classified or sensitive information. If it does not, this is not a finding.

If it does handle classified or sensitive information, review the system documentation and configuration to determine whether the classified information is protected by NSA- and NIST-approved cryptography.  If not, this is a finding.

If DBMS data encryption is required, ensure the status of encryption by executing:

SELECT
      d.name AS [Database Name],
      CASE e.encryption_state
            WHEN 0 THEN 'No database encryption key present, no encryption'
            WHEN 1 THEN 'Unencrypted'
            WHEN 2 THEN 'Encryption in progress'
            WHEN 3 THEN 'Encrypted'
            WHEN 4 THEN 'Key change in progress'
            WHEN 5 THEN 'Decryption in progress'
            WHEN 6 THEN 'Protection change in progress'
      END AS [Encryption State]
FROM sys.dm_database_encryption_keys e
RIGHT JOIN sys.databases d ON DB_NAME(e.database_id) = d.name
WHERE d.name NOT IN ('master','model','msdb')
ORDER BY 1
;
For each user database where encryption is required, verify that encryption is in effect. If not, this is a finding.
</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Configure SQL Server to encrypt sensitive or classified data stored in each database. Use only NIST-certified or NSA-approved cryptography to provide encryption.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002450</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40918</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000198-DB-000143</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53272r6_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-019800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must employ NSA-approved cryptography to protect classified information.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Cryptography is only as strong as the encryption modules/algorithms employed to encrypt the data. Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data.

NSA has developed Type 1 algorithms for protecting classified information. The Committee on National Security Systems (CNSS) National Information Assurance Glossary (CNSS Instruction No. 4009) defines Type 1 products as:
“Cryptographic equipment, assembly or component classified or certified by NSA for encrypting and decrypting classified and sensitive national security information when appropriately keyed.
Developed using established NSA business processes and containing NSA approved algorithms are used to protect systems requiring the most stringent protection mechanisms.”

NSA-approved cryptography is required to be used for classified information system processing.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review system documentation to determine whether cryptography for classified or sensitive information is required by the information owner.

If the system documentation does not specify the type of information hosted on SQL Server: classified, sensitive and/or unclassified, this is a finding.

If neither classified nor sensitive information exists within SQL Server databases or configuration, this requirement is NA.
Note:  If the SQL Server is compliant, nothing is displayed.

If cryptography is being used by SQL Server, examine evidence that an audit record is created whenever the asymmetric key is accessed by other than authorized users. In particular, view evidence that access by a SYSADMIN or other system privileged account results in the generation of an audit record. This is required because system privileges allow access to encryption keys and can be used to access sensitive data where there is not a need-to-know.

Note:  The list of acceptable algorithms: "AES 128", "AES 192", "AES 256" and "Triple DES".

If cryptography is being used by SQL Server, verify that the cryptography is NIST FIPS 140-2 certified by running the following SQL query:
EXEC sp_MSforeachdb
'
DECLARE @nCount integer;

SELECT @nCount = Count(*)
  FROM [?].sys.symmetric_keys
 WHERE key_algorithm NOT IN (''D3'',''A1'',''A2'',''A3'');

IF @nCount &gt; 0
   SELECT ''?'' AS ''database ?''
        , name
        , algorithm_desc
     FROM [?].sys.symmetric_keys
    WHERE key_algorithm NOT IN (''D3'',''A1'',''A2'',''A3'')
    ORDER BY name, algorithm_desc;
'
;

If any items list showing an uncertified NIST FIPS 140-2 algorithm type, this is a finding.
If an audit record is not generated for unauthorized access to the asymmetric key, this is a finding.

Detailed information on the NIST Cryptographic Module Validation Program (CMVP) is available at the following website:  http://csrc.nist.gov/groups/STM/cmvp/index.html.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Document within the system documentation the type of information hosted on SQL Server: classified, sensitive, and/or unclassified.

Obtain and utilize native or third-party NIST-validated FIPS 140-2 compliant cryptography solution on SQL Server.

Configure cryptographic functions to use FIPS 140-2 compliant algorithms functions.

Use DoD certificates to create asymmetric keys stored in the database and used to encrypt sensitive data stored in the database.

Run the following SQL script to create a certificate:
USE &lt;database name&gt;
CREATE CERTIFICATE &lt;certificate name&gt;
   ENCRYPTION BY PASSWORD = '&lt;password&gt;'
   FROM FILE = '&lt;path/file_name&gt;'
   WITH SUBJECT = '&lt;name of person creating key&gt;',
   EXPIRY_DATE = '&lt;expiration date: yyyymmdd&gt;'

Run the following SQL script to create a symmetric key and assign an existing certificate:
USE &lt;database name&gt;
CREATE SYMMETRIC KEY &lt;'key name'&gt;
   WITH ALGORITHM = AES_256 
   ENCRYPTION BY CERTIFICATE &lt;certificate name&gt;

Assign the application object owner account as the owner of asymmetric and symmetric keys, and certificates.  (Ownership is assigned via the AUTHORIZATION clause of the CREATE statement, or the ALTER AUTHORIZATION statement.)

Create audit events for access to the key by other than the application owner account or approved application objects.  (If using a server-level SQL Server Audit specification, DATABASE_OBJECT_PERMISSION_CHANGE_GROUP accomplishes this.)

Revoke any privileges on encryption keys assigned to principals other than the application object owner account and authorized users.

Protect the private key by encrypting it with the database or service master key.

For whole-database encryption (Transparent Data Encryption - TDE):
USE master;
CREATE MASTER KEY ENCRYPTION BY PASSWORD = '&lt;password&gt;';
CREATE CERTIFICATE &lt;certificate name&gt; . . .;
USE &lt;database name&gt;;
CREATE DATABASE ENCRYPTION KEY
WITH ALGORITHM = AES_256
ENCRYPTION BY SERVER CERTIFICATE &lt;certificate name&gt;;
ALTER DATABASE &lt;database name&gt;
SET ENCRYPTION ON;
</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002450</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40919</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000180-DB-000115</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53273r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-018900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must uniquely identify and authenticate non-organizational users (or processes acting on behalf of non-organizational users).</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Non-organizational users include all information system users other than organizational users, which include organizational employees or individuals the organization deems to have equivalent status of employees (e.g., contractors, guest researchers, individuals from allied nations).

Non-organizational users shall be uniquely identified and authenticated for all accesses other than those accesses explicitly identified and documented by the organization when related to the use of anonymous access, such as accessing a web server.

This may be accomplished by a code embedded within the userid, or via a flag or code columns in a table of users, or by some other means. In any case, the user must be individually identified to, and within, SQL Server via a mapping to an individual account and not mapping to a shared account. 

Accordingly, a risk assessment is used in determining the authentication needs of the organization.

Scalability, practicality, and security are simultaneously considered in balancing the need to ensure ease of use for access to federal information and information systems with the need to protect and adequately mitigate risk to organizational operations, organizational assets, individuals, and other organizations.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review documentation, SQL Server settings and authentication system settings to determine if non-organizational users are individually identified and authenticated when logging onto the system.

If non-organizational users are not uniquely identified and authenticated, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Configure SQL Server to uniquely identify and authenticate all non-organizational users who log onto the system. This likely would be done via a combination of the operating system with unique accounts and the SQL Server by ensuring mapping to individual accounts.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000804</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40922</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000171-DB-000074</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53276r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-018600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce password encryption for storage.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce password encryption when storing passwords. Passwords need to be protected at all times, and encryption is the standard method for protecting passwords. If passwords are not encrypted, they can be plainly read and easily compromised.

Passwords stored in clear text are vulnerable to unauthorized disclosure. Database passwords should always be encoded or encrypted when stored internally or externally to SQL Server.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Since Windows security is being leveraged, this check applies to database configuration files, associated scripts, and applications external to SQL Server that access the database.  

Ask the DBA and/or IAO to determine if any SQL Server database objects, database configuration files, associated scripts, or applications defined as external to SQL Server that access the database/user environment files/settings contain database passwords. If any do, confirm that SQL Server passwords stored externally to the SQL Server are encoded or encrypted. If any passwords are stored in clear text, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Develop, document, and maintain a list of SQL Server database objects, database configuration files, associated scripts, and applications defined within or external to SQL Server that access the database/user environment files/settings in the System Security Plan.

Record whether they do or do not contain SQL Server passwords. If passwords are present, ensure they are encrypted.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000196</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40923</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000153-DB-000108</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53277r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-018500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must ensure users are authenticated with an individual authenticator prior to using a shared authenticator.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>To ensure individual accountability and prevent unauthorized access, application users (and any processes acting on behalf of users) must be individually identified and authenticated.

A shared authenticator is a generic account used by multiple individuals. Use of a shared authenticator alone does not uniquely identify individual users. An example of a shared authenticator is the UNIX OS 'root' user account, a Windows 'administrator' account, an 'sa' account, or a 'helpdesk' account.

Legitimate use of shared accounts includes, for example, connection pooling.  Since this is insufficient to ensure non-repudiation, such shared accounts should be kept "under the covers," be inaccessible directly to end users, be invoked only after successful individual authentication, be communicated to the DBMS by the application, and be recorded in all relevant audit contexts.

(Shared accounts should not be confused with Windows groups, which are used in role-based access control.)</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review SQL Server users to determine whether shared accounts exist.

If accounts are determined to be shared, determine if individuals are first individually authenticated. If individuals are not individually authenticated before using the shared account (e.g., by the operating system or possibly by an application making calls to the database), this is a finding.

If accounts are determined to be shared, determine if they are directly accessible to end users.  If so, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove user-accessible shared accounts and use individual userids.

Build/configure applications to ensure successful individual authentication prior to shared account access.

Ensure each user's identity is received and used in audit data in all relevant circumstances.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000770</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40924</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000148-DB-000103</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53278r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-018400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users).</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>To ensure accountability and prevent unauthorized SQL Server access, organizational users shall be identified and authenticated.

Organizational users include organizational employees or individuals the organization deems to have equivalent status of employees (e.g., contractors, guest researchers, individuals from allied nations).

Users (and any processes acting on behalf of users) are uniquely identified and authenticated for all accesses other than those accesses explicitly identified and documented by the organization, which outlines specific user actions that can be performed on SQL Server without identification or authentication.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review SQL Server users to determine whether shared accounts exist. (This does not include when SQL Server has a guest or public account that is providing access to publicly available information.)

If accounts are determined to be shared, determine if individuals are first individually authenticated. If individuals are not individually authenticated before using the shared account (e.g., by the operating system or possibly by an application making calls to the database), this is a finding.

If accounts are determined to be shared, determine if they are directly accessible to end users.  If so, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove user-accessible shared accounts and use individual userids.

Build/configure applications to ensure successful individual authentication prior to shared account access.

Ensure each user's identity is received and used in audit data in all relevant circumstances.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000764</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40925</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000146-DB-000100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53279r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-018300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server software libraries must be periodically backed up.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server backups are a critical step in maintaining data assurance and availability.

System-level information includes system-state information, operating system and application software, and licenses.

Backups shall be consistent with organization-defined recovery time and recovery point objectives.

SQL Server depends upon the availability and integrity of its software libraries. Without backups, compromise or loss of the software libraries can prevent a successful recovery of SQL Server operations.

A mixture of full and incremental server-level backups by a third-party tool that backs up those software library directories would satisfy this requirement.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review evidence of inclusion of SQL Server software libraries in current backup records.
If the backup tool does not include SQL Server, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Ensure inclusion of all SQL Server software libraries into the backup process.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000537</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40926</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000146-DB-000099</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53280r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-018200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server backups of system-level information per organization-defined frequency must be performed that is consistent with recovery time and recovery point objectives.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server backups are a critical step in maintaining data assurance and availability.

System-level information includes:  system-state information, operating system and application software, and licenses.

Backups shall be consistent with organizationally defined recovery time and recovery point objectives.

SQL Server depends upon the availability and integrity of its system-level information. Without backups, compromise or loss of system-level information can prevent a successful recovery of SQL Server operations. If SQL Server system-level information is not backed up regularly this risks the loss of SQL Server data in the event of a system failure.

A mixture of full and incrementally server level backups that backup the system-level information would satisfy this requirement.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Windows Server Backup, or a 3rd Party Backup Tool, can be utilized to perform this function. Determine how SQL Server is being backed up. If there is no scheduled backup or if organizationally defined backup policy and procedures does not exist, this is finding.

Check evidence of inclusion of system-level information into current backup records, if the organizationally defined backup policy, procedures, and backup configurations is not including system-level information backups, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Deploy a backup solution to perform backups as per organizationally defined Backup Policy.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000537</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40927</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000145-DB-000098</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53281r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-018100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server backup and restoration files must be protected from unauthorized access.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server backups are a critical step in maintaining data assurance and availability.

User-level information is data generated by information system and/or application users. In order to assure availability of this data in the event of a system failure, DoD organizations are required to ensure user generated data is backed up at a defined frequency. This includes data stored on file systems, within databases or within any other storage media.

Applications performing backups must be capable of backing up user-level information per the DoD-defined frequency.

Lost or compromised SQL Server backup or restoration files may lead to not only the loss of data, but also the unauthorized access to sensitive data.

SQL Server can maintain local copies of critical control files to provide transparent or easy recovery from hard disk loss or other interruptions to database operation.

Backup files, both local to the SQL Server machine and not local to the machine, need the same protections against unauthorized access when stored on backup media as when online and actively in use by the database system. In addition, the backup media needs to be protected against physical loss.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain authorized access list for backup and restoration procedures from system documentation.

If documented procedures are insufficient to show or describe authorized personnel, this is a finding.

Review file protections assigned to online backup and restoration files.

Review access protections and procedures for offline backup and restoration files.

If backup or restoration files are subject to unauthorized access, this is a finding.

It may be necessary to review backup and restoration procedures to determine ownership and access during all phases of backup and recovery. In addition to physical and host system protections, consider other methods including encryption protection of the files.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Develop, document, and implement protection against unauthorized access of backup and restoration files.

Document personnel and the level of access authorized for each to the backup and restoration files in the system documentation.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000535</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40928</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000145-DB-000097</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53282r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-017900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server recovery procedures that are documented must be implemented and periodically tested.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server backups are a critical step in maintaining data assurance and availability.

User-level information is data generated by the information system and/or application users. In order to assure availability of this data in the event of a system failure, DoD organizations are required to ensure user-generated data is backed up at a defined frequency. This includes data stored on file systems, within SQL Server or within any other storage media.

Applications performing backups must be capable of backing up user-level information per the DoD-defined frequency.

Problems with backup procedures or backup media may not be discovered until after a recovery is needed. Testing and verification of procedures provides the opportunity to discover oversights, conflicts, or other issues in the backup procedures or use of media designed to be used.

Part of an overall backup and recovery methodology includes regular recovery testing. This is very important and helps to expose any issue in the recovery process (e.g., hardware, procedures, etc.).</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review SQL Server's documented testing and recovery procedures that exist in the system documentation.

If the testing or recovery procedures are not documented in the system documentation, this is a finding.

If the documented testing or recovery procedures are not sufficient to test or recover SQL Server configuration and databases, this is a finding.

Review evidence of implementation of testing and verification procedures by reviewing logs from backup and recovery implementation. Logs may be in electronic form or hardcopy, and may include email or other notification.

If the system recovery testing has not been implemented and documented, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Develop or update recovery procedures and add the new recovery procedures to the system documentation.

Plan for and test system recovery procedures and document the test.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000535</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40929</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000145-DB-000096</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53283r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-017800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server backup procedures must be defined, documented, and implemented.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server backup is a critical step in maintaining data assurance and availability.

User-level information is data generated by the information system and/or application users. In order to assure availability of this data in the event of a system failure, DoD organizations are required to ensure user-generated data is backed up at a defined frequency. This includes data stored on file systems, within SQL Server or within any other storage media.

Applications performing backups must be configured to back up user-level information per the DoD-defined frequency.

SQL Server Database backups provide the required means to restore databases after compromise or loss. Backups help reduce the vulnerability to unauthorized access or hardware loss.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review the database backup procedures and implementation evidence.

Evidence of implementation includes records of backup events and physical review of backup media.

Evidence should match the backup plan as recorded in the system documentation.

If backup procedures do not exist or are not implemented in accordance with the procedures, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Develop, document, and implement database backup procedures.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000535</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40930</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000145-DB-000095</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53284r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-017700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server user-level information must be backed up based on a defined frequency.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server backups are a critical step in maintaining data assurance and availability.

User-level information is data generated by information system and/or application users. In order to assure availability of this data in the event of a system failure, DoD organizations are required to ensure user generated data is backed up at a defined frequency. This includes data stored on file systems, within SQL Server or within any other storage media.

Applications performing backups must be capable of backing up user-level information per the DoD defined frequency.

Databases that do not backup information regularly risk the loss of that information in the event of a system failure.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Windows Server Backup, or a 3rd Party Backup Tool, can be utilized to perform this function. Determine how SQL Server is being backed up. If there is no scheduled backup or if organizationally defined backup policy and procedures does not exist, this is finding.

Check evidence of inclusion user-level information into current backup records, if the organizationally defined backup policy, procedures, and backup configurations is not including user-level information backups, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Deploy a backup solution to perform backups as per organizationally defined Backup Policy.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000535</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40932</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>high</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000144-DB-000101</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53286r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-017500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must recover to a known state that is verifiable.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Application recovery and reconstitution constitutes executing an information system contingency plan comprising activities that restore essential missions and business functions.

SQL Server utilizes transaction-based processing and is a good example of information systems that are transaction-based. Transaction rollback and transaction journaling are examples of mechanisms supporting transaction recovery.

SQL Server may be vulnerable to use of compromised data or other critical files during recovery. Use of compromised files could introduce maliciously altered application code, relaxed security settings, or loss of data integrity. SQL Server mechanisms must be configured to protect all files that could compromise the system or its data during a SQL Server recovery.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the SQL Server recovery procedures and technical system features to determine if mechanisms exist and are in place to specify use of trusted files during SQL Server recovery.

If recovery procedures do not exist or are not sufficient to ensure recovery is done in a secure and verifiable manner, this is a finding.

Check the configurations of all transaction log files that are enabled by running the following SQL Server query:

EXEC sp_MSforeachdb
'
SELECT ''?'' AS ''database name''
       , name AS ''log file name''
       , physical_name AS ''log file location and name''
       , state_desc
       , size
       , max_size
       , growth
       , is_percent_growth
  FROM [?].sys.database_files
 WHERE type_desc = ''LOG''
   AND state = 0;
'
; 

If any transaction log files are not configured correctly for size, max_size, and growth to log sufficient transaction information, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Implement SQL Server recovery procedures to ensure the use of trusted files during SQL Server recovery.

Modify the parameters for the transaction log file(s) for the system databases:

Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;SQL Server instance name&gt; &gt;&gt; Databases &gt;&gt; System Databases &gt;&gt; right-click on &lt;system database name&gt; &gt;&gt; Properties &gt;&gt; Files.

OR

Modify the parameters for the transaction log file(s) for application databases:

Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;SQL Server instance name&gt; &gt;&gt; Databases &gt;&gt; right-click on &lt;user-defined database name&gt; &gt;&gt; Properties &gt;&gt; Files.

THEN

Define additional space for the transaction log file, or extra transaction log files, as necessary.

To modify Initial Size (MB), click in the "Initial Size (MB)" field for the log file in question, then edit the value.

To modify Autogrowth, click on the "Autogrowth/Maxsize" button for the log file in question, choose "In Percent" or "In Megabytes", enter value, and then click OK.

To modify Maximum File Size, click on the "Autogrowth/Maxsize" button for the log file in question, choose "Limited to (MB)", enter value, and then click OK. Do not select "Unlimited".</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000553</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40933</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000142-DB-000094</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53287r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-017400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must support the organizational requirements to specifically prohibit or restrict the use of unauthorized functions, ports, protocols, and/or services.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions). 

Additionally, it is sometimes convenient to provide multiple services from a single component of an information system (e.g., email and web services) but doing so increases risk over limiting the services provided by any one component.  

To support the requirements and principles of least functionality, the application must support the organizational requirements providing only essential capabilities and limiting the use of ports, protocols, and/or services to only those required, authorized, and approved to conduct official business or to address authorized quality of life issues.

Database Management Systems using ports, protocols, and services deemed unsafe are open to attack through those ports, protocols, and services. This can allow unauthorized access to the database and, through the database, to other components of the information system.

For detailed guidance on Ports, Protocols, and Services Management (PPSM), refer to the PPSM section of the Information Assurance Support Environment (IASE) web site, at http://iase.disa.mil/ppsm/Pages/index.aspx.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review the SQL Server configuration and settings for functions, ports, protocols, and services that are not approved or are not used, but are available.

To determine the protocol(s) enabled for SQL Server, open SQL Server Configuration Manager.  In the left-hand pane, expand SQL Server Network Configuration.  Click on the entry for the SQL Server instance under review:  "Protocols for &lt;instance name&gt;".  The right-hand pane displays the protocols enabled for the instance.

To determine whether SQL Server is configured to use a fixed port or dynamic ports, in the right-hand pane double-click on the TCP/IP entry, to open the Properties dialog.  (The default fixed port is 1433.)

To see which ports are open on the server, run netstat-a from a Windows command prompt.

If any ports, protocols, and/or services that are not approved or are not used, are available, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Disable functions, ports, protocols, and services that are not approved or are not used, but are enabled.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000382</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40934</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000142-DB-000094</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53288r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-017300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must specifically prohibit or restrict the use of unauthorized functions and services in each instance.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server is capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

Additionally, it is sometimes convenient to provide multiple services from a single component of an information system (e.g., email and web services), but doing so increases risk over limiting the services provided by any one component.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review the list of user-defined Stored Procedures and Functions by running the following SQL query:
EXEC sp_MSforeachdb
'
DECLARE @nCount integer;

SELECT @nCount = Count(*)
  FROM [?].sys.objects
 WHERE type in (''FN'', ''P'')
   AND is_ms_shipped &lt;&gt; 1;

IF @nCount &gt; 0
SELECT ''?'' AS ''Table Name'', *
  FROM [?].sys.objects
 WHERE type in (''FN'', ''P'')
   AND is_ms_shipped &lt;&gt; 1;
'
;

If any user-defined Stored Procedures and Functions are unauthorized and therefore should be prohibited or restricted and are not, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>To remove a function from SQL Server, run the following SQL Script:
DROP FUNCTION &lt;'function name'&gt;

To remove a Stored Procedure from SQL Server, run the following SQL Script:
DROP PROCEDURE &lt;'stored procedure name'&gt;

If the user-defined Stored Procedures and Functions need to remain available, but access needs to be more restricted, then the user-defined Stored Procedures and Functions should be moved to a separate schema or database that has more restrictive access.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000382</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40935</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000141-DB-000093</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53289r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-017200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Access to xp_cmdshell must be disabled.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).  

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plug-ins not related to requirements; or providing a wide array of functionality not required for every mission, but which cannot be disabled. 

Applications must adhere to the principles of least functionality by providing only essential capabilities.

DBMSs may spawn additional external processes to execute procedures that are defined in the DBMS, but stored in external host files (external procedures). The spawned process used to execute the external procedure may operate within a different OS security context than the DBMS and provide unauthorized access to the host system.

The xp_cmdshell extended stored procedure allows execution of host executables outside the controls of database access permissions. This access may be exploited by malicious users who have compromised the integrity of the SQL Server database process to control the host operating system to perpetrate additional malicious activity.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>To determine if xp_cmdshell is enabled, execute the following commands:

EXEC SP_CONFIGURE 'show advanced option', '1';
RECONFIGURE WITH OVERRIDE;
EXEC SP_CONFIGURE 'xp_cmdshell';

If the value of config_value is 1, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>To disable the use of xp_cmdshell, from the query prompt:
EXEC sp_configure 'show advanced options', 1
GO

RECONFIGURE
GO

EXEC sp_configure 'xp_cmdshell', 0
GO

RECONFIGURE
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000381</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40936</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000141-DB-000092</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53290r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-017100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server default account sa must be disabled.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server's 'sa' account has special privileges required to administer the database. The 'sa' account is a well-known SQL Server account and is likely to be targeted by attackers and thus more prone to providing unauthorized access to the database.

This 'sa' default account is administrative and could lead to catastrophic consequences, including the complete loss of control over SQL Server.

If the 'sa' default account is not disabled, an attacker might be able to gain access through the account. SQL Server by default, at installation, disables the 'sa' account.

Some applications that run on SQL Server require the 'sa' account to be enabled in order for the application to function properly. These applications that require the 'sa' account to be enabled are usually legacy systems.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check SQL Server settings to determine if the 'sa' (sysadmin) account has been disabled by executing the following query:

USE MASTER
GO
SELECT name, is_disabled 
FROM sys.sql_logins 
WHERE principal_id = 1;

Verify that the "name" column contains the current name of the sa database server account (see note).

If the "is_disabled" column is not set to 1, this is a finding.

Note:  If the 'sa' account name has been changed per SQL2-00-010200, its new name should appear in the query results.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Modify the enabled flag of SQL Server's "sa" (sysadmin) account by running the following script.  If the account name has been changed per SQL2-00-010200, replace the letters "sa" in the query with the new name.

USE master;
GO
ALTER LOGIN [sa] DISABLE;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000381</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40937</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000141-DB-000092</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53291r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-017000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unused database components that are integrated in SQL Server and cannot be uninstalled must be disabled.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server is capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software demonstrations, or browser plug-ins not related to requirements or providing a wide array of functionality not required for every mission, but which cannot be disabled.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Unused and unnecessary SQL Server components increase the number of available attack vectors to SQL Server by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review the components and features included in SQL Server and capable of being disabled (by configuration settings, permissions and privileges, etc.).  Take note of those which are enabled.

Review the system documentation to verify that the enabled components or features are documented and authorized.  If any enabled components or features are not authorized, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If any components or features of SQL Server are required for operation of applications that will be accessing SQL Server data or configuration, include them in the system documentation.

If any unused components or features of SQL Server are installed and cannot be uninstalled or removed, then disable those components or features.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000381</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40938</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000141-DB-000091</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53292r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-016800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must have the SQL Server Analysis Service (SSAS) software component removed from SQL Server if SSAS is unused.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software demonstrations or browser plug-ins not related to requirements or providing a wide array of functionality not required for every mission, yet cannot be disabled. 

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Unused and unnecessary SQL Server components increase the number of available attack vectors to SQL Server by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced.

SQL Server must have the SQL Server Analysis Service (SSAS) software component removed from SQL Server if SSAS is unused.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If the SQL Server service "SQL Server Analysis Services (MSSQLSERVER)" is used and the service satisfies functional organizational requirement, this is not a finding.

If there is no functional organizational requirement for the "SQL Server Analysis Services (MSSQLSERVER)" service make sure that the service is not installed or is disabled.

From command prompt, using an account with System Administrator Privilege, open dcomcnfg. Navigate to Console Root &gt;&gt; Services (Local) &gt;&gt; [sort by name] &gt;&gt; locate: "SQL Server Analysis Services (MSSQLSERVER)".

If the "SQL Server Analysis Services (MSSQLSERVER)" service does not exist, this is not a finding.

If the "SQL Server Analysis Services (MSSQLSERVER)" status is "Started" or the "Startup Type" is not "Disabled", this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the SQL Server Analysis Service (SSAS) software component.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000381</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40939</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000141-DB-000091</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53293r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-016700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must have the SQL Server Integrated Services (SSIS) software component removed from SQL Server if SSIS is unused.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software demonstrations or browser plug-ins not related to requirements or providing a wide array of functionality not required for every mission, yet cannot be disabled.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Unused and unnecessary SQL Server components increase the number of available attack vectors to SQL Server by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced.

SQL Server must have the SQL Server Integrated Services (SSIS) software component removed from SQL Server if SSIS is unused.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If the SQL Server service "SQL Server Integration Services 11.0" is used and the service satisfies functional organizational requirement, this is not a finding.

If there is no functional organizational requirement for the "SQL Server Integration Services 11.0" service make sure that the service is not installed or is disabled.

From command prompt, using an account with System Administrator Privilege, open dcomcnfg. Navigate to Console Root &gt;&gt; Services (Local) &gt;&gt; [sort by name] &gt;&gt; locate: "SQL Server Integration Services 11.0".

If the "SQL Server Integration Services 11.0" service does not exist, this is not a finding.

If the "SQL Server Integration Services 11.0" status is "Started" or the "Startup Type" is not "Disabled", this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the SQL Server Integrated Services (SSIS) software component.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000381</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40940</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000141-DB-000091</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53294r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-016600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must have the SQL Server Reporting Service (SSRS) software component removed from SQL Server if SSRS is unused.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software demonstrations or browser plug-ins not related to requirements or providing a wide array of functionality not required for every mission, yet cannot be disabled.

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Unused and unnecessary SQL Server components increase the number of available attack vectors to SQL Server by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced.

SQL Server must have the SQL Server Reporting Service (SSRS) software component removed from SQL Server if SSRS is unused.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If there is no functional organizational requirement for the "SQL Server Reporting Services (MSSQLSERVER)" service, make sure that the service is not installed or that the service is disabled.

If the SQL Server service "SQL Server Reporting Services (MSSQLSERVER)" is used and the service satisfies functional organizational requirement, this is not a finding.


From command prompt, using an account with System Administrator Privilege, open dcomcnfg. Navigate to Console Root &gt;&gt; Services (Local) &gt;&gt; [sort by name] &gt;&gt; locate: "SQL Server Reporting Services (MSSQLSERVER)".

If the "SQL Server Reporting Services (MSSQLSERVER)" service does not exist, this is not a finding.

If the "SQL Server Reporting Services (MSSQLSERVER)" status is "Started" or the "Startup Type" is not set to "Disabled", this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the SSRS from SQL Server.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000381</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40941</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>high</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000141-DB-000091</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53295r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-016500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must have the SQL Server Data Tools (SSDT) software component removed from SQL Server if SSDT is unused.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).  

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plug-ins not related to requirements or providing a wide array of functionality not required for every mission, yet cannot be disabled. 

Applications must adhere to the principles of least functionality by providing only essential capabilities.

Unused and unnecessary DBMS components increase the attack vector for the DBMS by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced.


SQL Server must have the SQL Server Data Tools (SSDT) software component removed from SQL Server if SSDT is unused.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review the list of components and features installed with the database. Using an account with System Administrator privileges, from Command Prompt, open control.exe.

Navigate to Programs and Features. Check for the following entries in the 'Uninstall or change a program' window.

Microsoft SQL Server Data Tools - Database Projects - Web installer entry point
Prerequisites for SSDT

If SQL Server Data Tools is not documented as a server requirement, and these entries exist, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Document the requirement for SQL Server Data Tools to reside on this server.

If it is not required, using an account with System Administrator privileges, from Command Prompt, open control.exe.

Navigate to Programs and Features. Remove the following entries in the 'Uninstall or change a program' window.

Microsoft SQL Server Data Tools - Database Projects - Web installer entry point
Prerequisites for SSDT</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000381</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40942</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000141-DB-000090</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53296r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-016300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must have the publicly available AdventureWorks sample database removed.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plug-ins not related to requirements and providing a wide array of functionality not required for every mission, but which cannot be disabled.

Applications must adhere to the principles of least functionality by providing only essential capabilities. Even though the very popular "AdventureWorks" database is no longer available by default, it introduces a vulnerability to SQL Server and must be removed.

Demonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the SQL Server and the OS.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check SQL Server for the existence of the publicly available "AdventureWorks" database by performing the following query:

SELECT name from sysdatabases where name like 'AdventureWorks%';

If the "AdventureWorks" database is present, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the publicly available "AdventureWorks" database from SQL Server by running the following query:

DROP DATABASE AdventureWorks</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000381</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40943</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000141-DB-000090</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53297r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-016200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must have the publicly available NorthWind sample database removed.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plug-ins not related to requirements and providing a wide array of functionality not required for every mission, but which cannot be disabled.

Applications must adhere to the principles of least functionality by providing only essential capabilities. Even though the very popular "NorthWind" database is no longer available by default, it introduces a vulnerability to SQL Server and must be removed.

Demonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the SQL Server and the OS.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check SQL Server for the existence of the publicly available "NorthWind" database by performing the following query:

SELECT name from sysdatabases where name like 'Northwind%';

If the "Northwind" database is present, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the publicly available "Northwind" database from SQL Server by running the following query:


DROP DATABASE Northwind</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000381</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40944</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000133-DB-000207</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53298r8_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-015800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The OS must limit privileges to change SQL Server software resident within software libraries (including privileged programs).</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>When dealing with change control issues, it should be noted, any changes to the hardware, software, and/or firmware components of the information system can potentially have significant effects on the overall security of the system.

If any user were allowed to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.  The DBMS software libraries contain the executables used by the DBMS to operate. Unauthorized access to the libraries can result in compromised installations. This may in turn jeopardize data stored in the DBMS and/or operation of the host system.

Accordingly, only qualified and authorized individuals shall be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications.

Of particular note in this context is that any software installed for auditing and/or audit file management must be protected and monitored.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the SQL Server software directory location: from a command prompt, open the registry editor by typing regedit.exe and pressing [ENTER]. Navigate to the following registry location:
HKEY_LOCAL_MACHINE
&gt;&gt; SOFTWARE
&gt;&gt; Microsoft
&gt;&gt; Microsoft SQL Server
&gt;&gt; [INSTANCE NAME]
&gt;&gt; Setup
&gt;&gt; SQLBinRoot

In the registry tree, the [INSTANCE NAME] for a SQL Server 2012 database engine instance is normally shown as "MSSQL11" followed by a period and the name that was specified for the SQL Server service at installation time. If multiple SQL Server instances are installed, each will have its own [INSTANCE NAME] node and subtree in the registry.

The value in the Data column for the SQLBinRoot registry entry is the file system path for the SQL Server 2012 binaries. Navigate to that folder location using a command prompt or Windows Explorer. The following instructions assume that Windows Explorer is used.

Verify that files and folders that are part of the SQL Server 2012 instance have only authorized privileges. Right-click the binaries (\binn) folder, click Properties. On the Security tab, verify that at most the following permissions are present:
Trusted Installer (Full Control)
CREATOR OWNER (Full Control)
SYSTEM (Full Control)
Administrators (Full Control) [See Note 3]
Users (Read, List Folder Contents, Read &amp; Execute)
Creator Owner (Special Permissions - Full control - Subfolders and files only)
All Application Packages (Read &amp; Execute) [Only as needed - see Note 4]
SQL Server Service SID OR Service Account (Read &amp; Execute) [Notes 1, 2]
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Full Control) [Notes 1, 2]
SQL Server FD Launcher Service SID OR Service Account, if full-text indexing is in use. (Read &amp; Execute) [Notes 1, 2]
System Administrators (Full Control) [Note 3]

If any less restrictive permissions are present (and not specifically justified and approved), this is a finding.

Right-click each folder under the binaries folder; click Properties. On the Security tab, verify that at most the permissions listed in the preceding paragraph are present.
If any less restrictive permissions are present (and not specifically justified and approved), this is a finding.

Right-click the \Install folder, which is a peer of \binn, under ...\MSSQL. On the Security tab, verify that at most the permissions listed in the preceding paragraphs are present. If any less restrictive permissions are present (and not specifically justified and approved), this is a finding.


Locate the ...\Microsoft SQL Server\110\Shared folder, either by stepping up the tree in Windows Explorer or by finding the file path in the registry at:
HKEY_LOCAL_MACHINE
&gt;&gt; SOFTWARE
&gt;&gt; Microsoft
&gt;&gt; Microsoft SQL Server
&gt;&gt; 110
&gt;&gt; SharedCode

Right-click on the ...\110\Shared folder; click Properties. On the Security tab, verify that at most the following permissions are present:
Trusted Installer (Full Control)
CREATOR OWNER (Full Control)
System (Full Control)
SQL Server Service SID OR Service Account (Read &amp; Execute) [Notes 1, 2]
System Administrators (Full Control) [Note 3]
Local Administrators (Read)
SQL Server Analysis Services (SSAS) Service SID or Service Account, if SSAS is in use (Read &amp; Execute) [Notes 1, 2]
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write) [Notes 1, 2]
SQL Server FD Launcher Service SID OR Service Account, if full-text indexing is in use. (Read, Write) [Notes 1, 2]
Users (Read, List Folder Contents, Read &amp; Execute)
[MsDtsServer110 (Read &amp; Execute) is also permitted, if SSIS/DTS is in use.]
[NT AUTHORITY\NETWORK SERVICE (Read &amp; Execute) may also be required for SQL Server Configuration Manager to operate.]

If any less restrictive permissions are present (and not specifically justified and approved), this is a finding.

Right-click each folder under the ...\110\Shared folder; click Properties. On the Security tab, verify that at most the permissions listed in the preceding paragraph are present. If any less restrictive permissions are present (and not specifically justified and approved), this is a finding.

-----

Note 1: It is highly advisable to use a separate account for each service. When installing SQL Server in single-server mode, you can opt to have these provisioned for you. These automatically generated accounts are referred to as virtual accounts. Each virtual account has an equivalent Service SID, with the same name. The installer also creates an equivalent SQL Server login, also with the same name. Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control because these permissions are available only to the specific service when it is running and not in any other context. (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.) For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.110).aspx.

Note 2: Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names". (What you have just typed in is the first 16 characters of the name. At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches. If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click "OK"
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click "OK"
8) Click "OK"
9) Permission like a normal user from here

Note 3: In the interest of separation of responsibilities with least privilege, consider granting Full Control only to SQL Database Administrators (create a custom group for these) and providing the local Administrators group with Read access only. 

Note 4: Some files also require 'ALL APPLICATION PACKAGES (READ, EXECUTE)' permissions for certain functionality to work appropriately, and this is considered acceptable where those permissions are required. (All SQL Server files that require this access reside by default in the ..\Microsoft SQL Server\110\ directory.)
</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Navigate to the SQL Server software directory (\binn) location. Right-click the folder, click Properties. On the Security tab, modify the security permissions, so that files and folders that are part of the SQL Server 2012 installation have at most the following privileges. Right-click each folder under the installation folder, click Properties. On the Security tab, modify the security permissions, so that at most the following permissions are present:
Trusted Installer (Full Control)
CREATOR OWNER (Full Control)
SYSTEM (Full Control)
Administrators (Full Control) [See Note 3]
Users (Read, List Folder Contents, Read &amp; Execute)
Creator Owner (Special Permissions - Full control - Subfolders and files only)
All Application Packages (Read &amp; Execute) [Only as needed - see Note 4]
SQL Server Service SID OR Service Account (Read &amp; Execute) [Notes 1, 2]
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Full Control) [Notes 1, 2]
SQL Server FD Launcher Service SID OR Service Account, if full-text indexing is in use. (Read &amp; Execute) [Notes 1, 2]
System Administrators (Full Control) [Note 3]
Repeat the above for the \Install folder.

Navigate to the ...\Microsoft SQL Server\110\Shared folder. On the Security tab, modify the security permissions, so that at most the following permissions are present:
Trusted Installer (Full Control)
CREATOR OWNER (Full Control)
System (Full Control)
SQL Server Service SID OR Service Account (Read &amp; Execute) [Notes 1, 2]
System Administrators (Full Control) [Note 3]
Local Administrators (Read)
SQL Server Analysis Services (SSAS) Service SID or Service Account, if SSAS is in use (Read &amp; Execute) [Notes 1, 2]
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write) [Notes 1, 2]
SQL Server FD Launcher Service SID OR Service Account, if full-text indexing is in use. (Read, Write) [Notes 1, 2]
Users (Read, List Folder Contents, Read &amp; Execute)
[MsDtsServer110 (Read &amp; Execute) is also permitted, if SSIS/DTS is in use.]
[NT AUTHORITY\NETWORK SERVICE (Read &amp; Execute) may also be required for SQL Server Configuration Manager to operate.]

-----

Note 1: It is highly advisable to use a separate account for each service. When installing SQL Server in single-server mode, you can opt to have these provisioned for you. These automatically generated accounts are referred to as virtual accounts. Each virtual account has an equivalent Service SID, with the same name. The installer also creates an equivalent SQL Server login, also with the same name. Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control because these permissions are available only to the specific service when it is running and not in any other context. (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.) For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.110).aspx.

Note 2: Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names". (What you have just typed in is the first 16 characters of the name. At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches. If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click "OK"
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click "OK"
8) Click "OK"
9) Permission like a normal user from here

Note 3: In the interest of separation of responsibilities with least privilege, consider granting Full Control only to SQL Database Administrators (create a custom group for these) and providing the local Administrators group with Read access only. 

Note 4: Some files also require 'ALL APPLICATION PACKAGES (READ, EXECUTE)' permissions for certain functionality to work appropriately, and this is considered acceptable where those permissions are required. (All SQL Server files that require this access reside by default in the ..\Microsoft SQL Server\110\ directory.)</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001493</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001494</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001495</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001499</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40945</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>high</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000133-DB-000205</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53299r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-015700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Vendor-supported software and patches must be evaluated and patched against newly found vulnerabilities.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Security faults with software applications and operating systems are discovered daily. Vendors are constantly updating and patching their products to address newly discovered security vulnerabilities. Organizations (including any contractor to the organization) are required to promptly install security-relevant software updates (e.g., patches, service packs, and hot fixes). Flaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling must also be addressed expeditiously.

Any time new software code is introduced to a system there is the potential for unintended consequences. There have been documented instances where the application of a patch has caused problems with system integrity or availability. Due to information system integrity and availability concerns, organizations must give careful consideration to the methodology used to carry out automatic updates.

If SQL Server were no longer supported, no patches from Microsoft would address newly discovered security vulnerabilities. Unpatched software is vulnerable to attack.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check Microsoft's list of supported SQL Server versions.  To locate the correct web page, perform a web search for "Microsoft SQL Server end of support."

To be considered supported, Microsoft must report that the version is supported by security patches to known vulnerabilities.

Check SQL Server version by running the following command:
print @@version

If the security patch support for SQL Server cannot be determined or SQL Server version is not shown as supported, this is a finding.

If SQL Server does not contain the latest security patches, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Upgrade SQL Server to the Microsoft-supported version.

Apply the latest SQL Server patches after evaluation of impact.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001499</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40946</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>low</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000133-DB-000199</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53300r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-015500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Database software directories, including SQL Server configuration files, must be stored in dedicated directories, separate from the host OS and other applications.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>When dealing with change control issues, it should be noted any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system. 

Multiple applications can provide a cumulative negative effect. A vulnerability and subsequent exploit of one application can lead to an exploit of other applications sharing the same security context. For example, an exploit of a web server process that leads to unauthorized administrative access to host system directories can most likely lead to a compromise of all applications hosted by the same system. Database software not installed using dedicated directories both threatens and is threatened by other hosted applications. Access controls defined for one application may by default provide access to other applications’ database objects or directories. Any method that provides any level of separation of security context assists in the protection between applications.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Verify the SQL Server installations present on the server.

From a Command Prompt, type regedit.exe, and press [ENTER].

Navigate to HKEY_LOCAL_MACHINE &gt;&gt; SOFTWARE &gt;&gt; Microsoft &gt;&gt; Microsoft SQL Server &gt;&gt; Instance Names. Each instance installed on the server possesses a key inside a folder under this registry entry.

Analysis Services Instances are registered in the OLAP subfolder.
Reporting Services Instances are registered in the RS subfolder.
Standard SQL Server Instances are registered in the SQL subfolder.

Inside each of these folders, a single key is used to reference an Instance's specific Windows Registry tree. Each key will have its own registry tree at the following registry location: 

HKEY_LOCAL_MACHINE &gt;&gt; SOFTWARE &gt;&gt; Microsoft &gt;&gt; Microsoft SQL Server &gt;&gt; [INSTANCE NAME].

An [INSTANCE NAME] is listed as the Data component of a key found in one of the above OLAP, RS, or SQL folders.  

To find the installation location of a particular instance, navigate to the following location in the Windows Registry:

HKEY_LOCAL_MACHINE &gt;&gt; SOFTWARE &gt;&gt; Microsoft &gt;&gt; Microsoft SQL Server &gt;&gt; [INSTANCE NAME] &gt;&gt; Setup.  

Examine the value of the 'SqlProgramDir' key. The value of the 'SqlProgramDir' key is the SQL Server installation directory for that SQL Server Instance.

Navigate to that folder location using a Command Prompt or Windows Explorer. Only applications that are required for the functioning and administration, not use, of the SQL Server should be located on the same directory node as the SQL Server software libraries.

If any files or subfolders that are not part of the SQL Server installation are in the folder, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Separate database files (software, data) into dedicated directories.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001499</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40947</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000133-DB-000198</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53301r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-015400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server software installation account(s) must be restricted to authorized users.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>When dealing with change control issues, it should be noted, any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system.

If the application were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

This requirement is contingent upon the language in which the application is programmed, as many application architectures in use today incorporate their software libraries into, and make them inseparable from, their compiled distributions, rendering them static and version dependant. However, this requirement does apply to applications with software libraries accessible and configurable, as in the case of interpreted languages.

Accordingly, only qualified and authorized individuals shall be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications.

DBA and other privileged administrative or application owner accounts are granted privileges that allow actions that can have a greater impact on SQL Server security and operation. It is especially important to grant access to privileged accounts to only those persons who are qualified and authorized to use them.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check system documentation for policy and procedures to restrict use of the SQL Server software installation account.


Check OS settings to determine whether users are restricted from accessing SQL Server objects and data they are not authorized to access by checking the local OS user accounts.
From a Command Prompt, open lusrmgr.msc. Navigate to Users &gt;&gt; right click individual user &gt;&gt; Properties &gt;&gt; Member Of.


If appropriate access controls for all users are not implemented to restrict access to only authorized users and to restrict the access of those users to objects and data they are authorized, this is a finding.


Review procedures for controlling and granting access to use of the SQL Server software installation account.

If access or use of this account is not restricted to the minimum number of personnel required, or unauthorized access to this account has been granted, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>From a Command Prompt, open lusrmgr.msc.  Navigate to Users &gt;&gt; right click individual user &gt;&gt; Properties &gt;&gt; Member Of.


Configure SQL Server &amp; OS settings and access controls, to restrict user access to objects and data that the user is authorized to view or interact with.

Develop, document, and implement procedures to restrict use of the DBMS software installation account.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001499</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40948</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>high</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000133-DB-000179</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53302r5_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-015350</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Software, applications, and configuration files that are part of, or related to, the SQL Server 2012 installation must be monitored to discover unauthorized changes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>When dealing with change control issues, it should be noted, any changes to the hardware, software, and/or firmware components of applications and tools related to SQL Server can potentially have significant effects on the overall security of the system. Only qualified and authorized individuals shall be allowed to obtain access to components related to SQL Server for purposes of initiating changes, including upgrades and modifications.

Unmanaged changes that occur to the software libraries or configuration can lead to unauthorized or compromised installations.

Of particular note in this context is that any software installed for auditing and/or audit file management must be protected and monitored.
</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If a security and data integrity tool is not used for monitoring and alerting files and folders based on cryptographic hashes, this is a finding.

If the tool does not verify files/folder locations as listed in the documentation, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Include locations of all files, libraries, scripts, and executables that are part of, or related to, the SQL Server 2012 installation in the documentation.

Deploy a security and data integrity tool for monitoring and alerting files and folders based on cryptographic hashes, to verify files/folder locations as listed in the documentation.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001493</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001494</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001495</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002716</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002718</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40949</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000133-DB-000179</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53303r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-015300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must monitor for security-relevant configuration settings to discover unauthorized changes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>When dealing with change control issues, it should be noted, any changes to security-relevant configuration settings of SQL Server can potentially have significant effects on the overall security of the system.

If SQL Server were to allow any user to make changes to configuration settings, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process. This requirement is contingent upon the configuration of SQL Server's hosted application and the security-relevant configuration settings of SQL Server.

Accordingly, only qualified and authorized individuals shall be allowed to obtain access to these security-relevant configuration settings for purposes of initiating changes, including upgrades and modifications.

Unmanaged changes that occur to SQL Server software libraries or configuration can lead to unauthorized or compromised installations.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Verify within the system documentation that SQL Server is monitoring for security-relevant configuration settings to discover unauthorized changes.

This can be done by a third-party tool or a SQL script that does baselining and then comparisons. 

If the monitoring of security-relevant configuration settings to discover unauthorized changes is not implemented on SQL Server, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Document the monitoring of security-relevant configuration settings to discover unauthorized changes within the system documentation.

Document the specific users or types of security personnel that are able to monitor security-relevant configuration settings to discover unauthorized changes.

Deploy and implement a third-party tool or some other SQL Server method of monitoring security-relevant configuration settings to discover unauthorized changes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001499</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40950</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000130-DB-000088</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53304r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-014700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must support the employment of automated mechanisms supporting the auditing of the enforcement actions.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system. 

Accordingly, only qualified and authorized individuals are allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications. 

Access restrictions for change also include software libraries. 

Examples of access restrictions include: physical access controls (such as locks and access cards), logical access controls (such as ACLs), automated auditing (logging) of logical access, workflow automation, media libraries, abstract layers (e.g., changes are implemented into a third-party interface rather than directly into the information system component), and change windows (e.g., changes occur only during specified times, making unauthorized changes outside the window easy to discover).  

This requirement focuses on the auditing aspect of the protections.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Verify that Files and Folders that are part of the SQL Server 2012 Installation have auditing enabled.

Right click the root folder of the SQL Server installation.  Typically, this is at &lt;drive&gt;:\Program Files\Microsoft SQL Server\.  Select Properties. 

Click on the Security tab

Click on the Advanced button

Click on the Auditing tab

If "Everyone" is not listed in the "Name" column, this is a finding.

If "This folder, subfolders and files" is not listed in the "Apply To" column, this is a finding.

When "Everyone" ... " is listed, select the "Everyone" row and click on the Edit button.

If either the Successful or Failed checkbox is not selected for any of the following access types, this is a finding:
    Traverse folder/execute file 
    List folder/read data
    Read attributes
    Read extended attributes
    Create files/write data
    Create folders/append data
    Write attributes
    Write extended attributes
    Delete
    Read permissions</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Navigate to Advanced Security Settings by selecting Properties &gt; Security &gt; Advanced &gt; Auditing &gt; Continue.

Where "Everyone" is missing from the "Name" column, click the Add button; type "Everyone" in the object names box; click the OK button.  The Auditing Entry dialog opens.

Where "Everyone" is in the "Name" column, select that row and click on the Edit button.  The Auditing Entry dialog opens.

In the Auditing Entry dialog, set "Apply onto" to "This folder, subfolders and files".

In the Auditing Entry dialog, select both the Successful and the Failed checkbox for each of the following access types, where not already selected:
    Traverse folder/execute file 
    List folder/read data
    Read attributes
    Read extended attributes
    Create files/write data
    Create folders/append data
    Write attributes
    Write extended attributes
    Delete
    Read permissions

Click OK, OK, OK, OK to save the new settings and exit the dialog boxes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001814</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40951</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000129-DB-000087</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53305r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-014600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must support the organizational requirement to employ automated mechanisms for enforcing access restrictions.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>When dealing with access restrictions pertaining to change control, it should be noted, any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system.

Only qualified and authorized individuals are allowed to obtain access to information system components for the purposes of initiating changes, upgrades, and modifications.

Access restrictions for change also include application software libraries.

Examples of access restrictions include: physical and logical access controls, workflow automation, media libraries, abstract layers (i.e., changes are implemented into a third-party interface rather than directly into the information system component), and change windows (i.e., changes occur only during specified times, making unauthorized changes outside the window easy to discover).

Multiple applications can provide a cumulative negative effect. A vulnerability and subsequent exploit of one application can lead to an exploit of other applications sharing the same security context. For example, an exploit of a web server process that leads to unauthorized administrative access to host system directories can most likely lead to a compromise of all applications hosted by the same system. Database software not installed using dedicated directories both threatens, and is threatened by, other hosted applications. Access controls defined for one application may, by default, provide access to other applications’ database objects or directories. Any method that provides any level of separation of security context assists in the protection between applications.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the SQL Server software library installation directory location.

From a command prompt, type regedit.exe, and press [ENTER].

Navigate to HKEY_LOCAL_MACHINE &gt;&gt; SOFTWARE &gt;&gt; Microsoft &gt;&gt; Microsoft SQL Server &gt;&gt; Instance Names. Each instance installed on the server possesses a key inside a folder under this registry entry.

Analysis Services Instances are registered in the OLAP subfolder.
Reporting Services Instances are registered in the RS subfolder.
Standard SQL Server Instances are registered in the SQL subfolder.

Inside each one of these folders, a single key is used to reference an instance's specific Windows Registry tree. Each key will have its own registry tree at the following registry location: HKEY_LOCAL_MACHINE &gt;&gt; SOFTWARE &gt;&gt; Microsoft &gt;&gt; Microsoft SQL Server &gt;&gt; [INSTANCE NAME].

An [INSTANCE NAME] is listed as the data component of a key found in one of the above OLAP, RS, or SQL folders.  

To find the installation location of a particular instance, navigate to the following location in the Windows Registry:
 HKEY_LOCAL_MACHINE &gt;&gt; SOFTWARE &gt;&gt; Microsoft &gt;&gt; Microsoft SQL Server &gt;&gt; [INSTANCE NAME] &gt;&gt; Setup.  Examine the value of the 'SqlProgramDir' key. The value of the 'SqlProgramDir' key is the SQL Server installation directory for that SQL Server Instance.

Navigate to that folder location using a command prompt or Windows Explorer. Note any custom subdirectories within the SQL Server software library directory. Only applications that are required for the functioning and administration of SQL Server should be located in the same disk directory as the SQL Server software libraries.

If any directories or files not installed with the SQL Server software exist within the SQL Server software library directory, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Install SQL Server software using directories separate from the OS and other application software library directories.

Relocate any directories or reinstall other application software that currently shares the DBMS software library directory to separate directories.

Recommend dedicating a separate partition for the SQL software libraries.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001813</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40952</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>low</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000120-DB-000061</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53306r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-013800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must protect audit information from unauthorized deletion.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If audit data were to become compromised, competent forensic analysis and discovery of the true source of potentially malicious system activity would be impossible to achieve.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized deletion. This requirement can be achieved through multiple methods, which will depend upon system architecture and design.

Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections, restricting access, and backing up log data to ensure log data is retained.

Applications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights the user enjoys in order to make decisions regarding the deletion of audit data.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Deletion of database audit data could mask the theft or unauthorized modification of sensitive data stored in the database.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the SQL Server audit file location(s) by running the following SQL script:
SELECT DISTINCT 
LEFT(path, (LEN(path) - CHARINDEX('\',REVERSE(path)) + 1)) AS "Audit Path"
FROM sys.traces
UNION
SELECT log_file_path AS "Audit Path"
FROM sys.server_file_audits

For each audit, the path column will give the location of the file.

Verify that all audit files have the correct permissions by doing the following for each audit file: Navigate to audit folder location(s) using a command prompt or Windows Explorer.

Right-click the file/folder, click Properties.  On the Security tab, verify that at most the following permissions are applied:
Administrator(read)
Users (none)
Audit Administrator (Full Control)
Auditors group (Read)
SQL Server Service SID OR Service Account (Full Control)  [Notes 1, 2]  
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write)  [Notes 1, 2]

If any less restrictive permissions are present and not specifically justified and approved in the system security plan, this is a finding. 

If less restrictive permissions are present and specifically justified and approved in the system security plan, this is not a finding
-----

Note 1: It is highly advisable to use a separate account for each service. When installing SQL Server in single-server mode, you can opt to have these provisioned for you. These automatically-generated accounts are referred to as virtual accounts. Each virtual account has an equivalent Service SID, with the same name. The installer also creates an equivalent SQL Server login, also with the same name. Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control, because these permissions are available only to the specific service when it is running, and not in any other context. (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.) For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.120).aspx.

Note 2: Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names". (What you have just typed in is the first 16 characters of the name. At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches. If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click OK
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click OK
8) Click OK
9) Permission like a normal user from here</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Modify audit file permissions to meet the requirement to protect against unauthorized deletion.

Navigate to audit folder location(s) using a command prompt or Windows Explorer.  Right-click on the file, click Properties.
On the Security tab, modify the security permissions to: 
Administrator(read)
Users (none)
Audit Administrator(Full Control)
Auditors group (Read)
SQL Server Service SID OR Service Account (Full Control)  [Notes 1, 2]  
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write)  [Notes 1, 2]  

-----

Note 1:  It is highly advisable to use a separate account for each service.  When installing SQL Server in single-server mode, you can opt to have these provisioned for you.  These automatically-generated accounts are referred to as virtual accounts.  Each virtual account has an equivalent Service SID, with the same name.  The installer also creates an equivalent SQL Server login, also with the same name.  Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control, because these permissions are available only to the specific service when it is running, and not in any other context.  (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.)  For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.110).aspx.


Note 2:  Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names".  (What you have just typed in is the first 16 characters of the name.  At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches.  If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click OK
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click OK
8) Click OK
9) Permission like a normal user from here</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000164</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-40953</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>low</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000119-DB-000060</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53307r5_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-013700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must protect audit information from unauthorized modification.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If audit data were to become compromised, competent forensic analysis and discovery of the true source of potentially malicious system activity would be impossible to achieve.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized modification.

This requirement can be achieved through multiple methods, which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions, and limiting log data locations.

Applications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights that the user enjoys in order to make decisions regarding the modification of audit data.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Modification of database audit data could mask the theft or unauthorized modification of sensitive data stored in the database.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the SQL Server audit file location(s) by running the following SQL script:
SELECT DISTINCT 
LEFT(path, (LEN(path) - CHARINDEX('\',REVERSE(path)) + 1)) AS "Audit Path"
FROM sys.traces
UNION
SELECT log_file_path AS "Audit Path"
FROM sys.server_file_audits

For each audit, the Audit Path column will give the location of the file.

Verify that all audit files have the correct permissions by doing the following for each audit file: Navigate to audit folder location(s) using a command prompt or Windows Explorer.  The following instructions assume Windows Explorer is used.

Right-click the file/folder, click Properties.  On the Security tab, verify that at most the following permissions are applied:
Administrator(read)
Users (none)
Audit Administrator (Full Control)
Auditors group (Read)
SQL Server Service SID OR Service Account (Full Control)  [Notes 1, 2]  
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write)  [Notes 1, 2]

If any less restrictive permissions are present and not specifically justified and approved in the system security plan, this is a finding. 

If less restrictive permissions are present and specifically justified and approved in the system security plan, this is not a finding.

If Trace is in use, SQL Server creates each trace file with a standard set of permissions, overriding the folder permissions.  It grants full control to OWNER RIGHTS, Administrators and &lt;SQL Server Instance name&gt;.  Since this is not configurable, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Edit the system security plan to include justification and authorization for any less restrictive permissions that are present and needed.  (An example might be where Auditors need "Read &amp; Execute" rather than "Read" alone.)

Modify audit file permissions to meet the requirement to protect against unauthorized modification.

Navigate to audit folder location(s) using a command prompt or Windows Explorer.  Right-click on the file, click Properties. On the Security tab, modify the security permissions to: 
Administrator(read)
Users (none)
Audit Administrator(Full Control)
Auditors group (Read)
SQL Server Service SID OR Service Account (Full Control)  [Notes 1, 2]  
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write)  [Notes 1, 2]  

-----

Note 1:  It is highly advisable to use a separate account for each service.  When installing SQL Server in single-server mode, you can opt to have these provisioned for you.  These automatically-generated accounts are referred to as virtual accounts.  Each virtual account has an equivalent Service SID, with the same name.  The installer also creates an equivalent SQL Server login, also with the same name.  Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control, because these permissions are available only to the specific service when it is running, and not in any other context.  (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.)  For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.110).aspx.


Note 2:  Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names".  (What you have just typed in is the first 16 characters of the name.  At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches.  If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click OK
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click OK
8) Click OK
9) Permission like a normal user from here</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000163</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41016</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000118-DB-000059</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53390r5_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-013600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must protect audit information from any type of unauthorized access.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If audit data were to become compromised, competent forensic analysis and discovery of the true source of potentially malicious system activity would be difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.

SQL Server and third-party tools are examples of applications that are easily able to view and manipulate audit file data. Additionally, applications with user interfaces to audit records should not allow unfettered manipulation of, or access to, those records via any application. If an application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.

This requirement can be achieved through multiple methods, which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections, and limiting log data location.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the SQL Server audit file location(s) by running the following SQL script:
SELECT DISTINCT 
LEFT(path, (LEN(path) - CHARINDEX('\',REVERSE(path)) + 1)) AS "Audit Path"
FROM sys.traces
UNION
SELECT log_file_path AS "Audit Path"
FROM sys.server_file_audits

For each audit, the path column will give the location of the file.

Verify that all audit files have the correct permissions by doing the following for each audit file: Navigate to audit folder location(s) using a command prompt or Windows Explorer.

Right-click the file/folder, click Properties.  On the Security tab, verify that at most the following permissions are applied:
Administrator(read)
Users (none)
Audit Administrator (Full Control)
Auditors group (Read)
SQL Server Service SID OR Service Account (Full Control)  [Notes 1, 2]  
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write) [Notes 1, 2]


If any less restrictive permissions are present and not specifically justified and approved in the system security plan, this is a finding. 

If less restrictive permissions are present and specifically justified and approved in the system security plan, this is not a finding.

-----

Note 1: It is highly advisable to use a separate account for each service. When installing SQL Server in single-server mode, you can opt to have these provisioned for you. These automatically-generated accounts are referred to as virtual accounts. Each virtual account has an equivalent Service SID, with the same name. The installer also creates an equivalent SQL Server login, also with the same name. Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control, because these permissions are available only to the specific service when it is running, and not in any other context. (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.) For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.120).aspx.

Note 2: Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names". (What you have just typed in is the first 16 characters of the name. At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches. If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click OK
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click OK
8) Click OK
9) Permission like a normal user from here</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Edit the system security plan to include justification and authorization for any less restrictive permissions that are present and needed.  (An example might be where Auditors need "Read &amp; Execute" rather than "Read" alone.)

Modify audit file permissions to meet the requirement to protect against unauthorized access.

Navigate to audit folder location(s) using a command prompt or Windows Explorer.  Right-click on the file, click Properties.
On the Security tab, modify the security permissions to: 
Administrator(read)
Users (none)
Audit Administrator(Full Control)
Auditors group (Read)
SQL Server Service SID OR Service Account (Full Control)  [Notes 1, 2]
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write) [Notes 1, 2]


-----

Note 1:  It is highly advisable to use a separate account for each service.  When installing SQL Server in single-server mode, you can opt to have these provisioned for you.  These automatically-generated accounts are referred to as virtual accounts.  Each virtual account has an equivalent Service SID, with the same name.  The installer also creates an equivalent SQL Server login, also with the same name.  Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control, because these permissions are available only to the specific service when it is running, and not in any other context.  (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.)  For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.110).aspx.


Note 2:  Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names".  (What you have just typed in is the first 16 characters of the name.  At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches.  If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click OK
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click OK
8) Click OK
9) Permission like a normal user from here</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000162</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41017</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000127-DB-000172</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53391r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-014400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must protect the audit records generated as a result of remote access to privileged accounts and by the execution of privileged functions.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Protection of audit records and audit data is of critical importance. Care must be taken to ensure privileged users cannot circumvent audit protections put in place.

Auditing might not be reliable when performed by an information system that the user being audited has privileged access to.

The privileged user could inhibit auditing or directly modify audit records. To prevent this from occurring, privileged access shall be further defined between audit-related privileges and other privileges, thus limiting the users with audit-related privileges.

Reducing the risk of audit compromises by privileged users can also be achieved, for example, by performing audit activity on a separate information system where the user in question has limited access, or by using storage media that cannot be modified (e.g., write-once recording devices).

If an attacker were to gain access to audit tools, they could analyze audit logs for system weaknesses or weaknesses in the auditing itself. An attacker could also manipulate logs to hide evidence of malicious activity.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the SQL Server audit file location(s) by running the following SQL script:
SELECT DISTINCT 
LEFT(path, (LEN(path) - CHARINDEX('\',REVERSE(path)) + 1)) AS "Audit Path"
FROM sys.traces
UNION
SELECT log_file_path AS "Audit Path"
FROM sys.server_file_audits

For each audit, the path column will give the location of the file.

Verify that all audit files have the correct permissions by doing the following for each audit file: Navigate to audit folder location(s) using a command prompt or Windows Explorer.

Right-click the file/folder, click Properties.  On the Security tab, verify that at most the following permissions are applied:
Administrator(read)
Users (none)
Audit Administrator (Full Control)
Auditors group (Read)
SQL Server Service SID OR Service Account (Full Control)  [Notes 1, 2]
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write) [Notes 1, 2]
If any less restrictive permissions are present (and not specifically justified and approved), this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Modify audit file permissions to meet the requirement to protect against unauthorized access.

Navigate to the audit folder location(s) using a command prompt or Windows Explorer.  Right-click on the file, click Properties.
On the Security tab, modify the security permissions to: 
Administrator(read)
Users (none)
Audit Administrator(Full Control)
Auditors group (Read)
SQL Server Service SID OR Service Account (Full Control)  [Notes 1, 2]
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write) [Notes 1, 2]

-----

Note 1:  It is highly advisable to use a separate account for each service.  When installing SQL Server in single-server mode, you can opt to have these provisioned for you.  These automatically-generated accounts are referred to as virtual accounts.  Each virtual account has an equivalent Service SID, with the same name.  The installer also creates an equivalent SQL Server login, also with the same name.  Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control, because these permissions are available only to the specific service when it is running, and not in any other context.  (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.)  For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.110).aspx.


Note 2:  Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names".  (What you have just typed in is the first 16 characters of the name.  At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches.  If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click OK
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click OK
8) Click OK
9) Permission like a normal user from here</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001351</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41021</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000115-DB-000056</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53396r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-013400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must audit attempts to bypass access controls.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information system auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.

Detection of suspicious activity, including access attempts and successful access from unexpected places, during unexpected times, or other unusual indicators, can support decisions to apply countermeasures to deter an attack. Without detection, malicious activity may proceed without hindrance. In SQL Server's case, this is a combination of the standard audit trace, as well as the operating system logs. Only the SQL Server logs are validated for this check, as the other part is dependent upon the operating system.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:
     SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);
All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement. 
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:
     SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
     14, 15, 18, 20, 
     102, 103, 104, 105, 106, 107, 108, 109, 110, 
     111, 112, 113, 115, 116, 117, 118, 
     128, 129, 130, 
     131, 132, 133, 134, 135, 
     152, 153, 
     170, 171, 172, 173, 175, 176, 177, 178.
If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces.  However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)  
Use the following query to obtain a list of all event IDs, and their meaning:
     SELECT * FROM sys.trace_events; 
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements.  However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated.  They will be removed at some point after SQL Server 2014.  The replacement feature is Extended Events.  If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000158</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41022</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000107-DB-000169</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53397r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-012800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must shutdown immediately in the event of an audit failure, unless an alternative audit capability exists.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>It is critical that, when SQL Server is at risk of failing to process audit logs as required, it takes action to mitigate the failure. If the system were to continue processing without auditing enabled, actions could be taken on the system that could not be tracked and recorded for later forensic analysis.

In many system configurations, the disk space allocated to the auditing system is separate from the disks allocated for the operating system; therefore, this may not result in a system outage. This places the onus on the DBMS to detect and take actions.

A failure of SQL Server auditing will result in either the database continuing to function without auditing, or the halting of SQL Server operations. In this case, the database must cease processing immediately in order to not allow unlogged transaction to occur.

Note that trace file rollover does not count as an audit failure, provided that the system is also configured to shut down when it runs out of space.  Trace file rollover can be a useful technique for breaking the log into manageable pieces, for archiving, or for transfer to a log management system.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>From the query prompt:

SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);

All currently defined traces for the SQL Server instance will be listed. If no traces are returned, this is a finding.

Determine the trace being used for the auditing requirement. Replace # in the following code with a traceid being used for the auditing requirements.

From the query prompt, determine whether the trace options include the value 4, which means SHUTDOWN_ON_ERROR:
SELECT CAST(value AS INT) 
FROM sys.fn_trace_getinfo(#)
where property = 1;

If the query does not return a value, this is a finding.
If a value is returned but is not 4 or 6, this is a finding.
(6 represents the combination of values 2 and 4.  2 means TRACE_FILE_ROLLOVER.)


NOTE:  Microsoft has flagged the trace techniques and tools used in this STIG as deprecated. They will be removed at some point after SQL Server 2014. The replacement feature is Extended Events. If Extended Events are in use and configured to satisfy this requirement, this is not a finding.  The following code can be used to check Extended Events settings.
/********************************** 
Check to verify shutdown on failure is set.
The following settings are what should be returned: 
name = &lt;name of audit&gt; 
on_failure = 1 
on_failure_desc = SHUTDOWN SERVER INSTANCE 
**********************************/ 
SELECT name, on_failure, on_failure_desc 
FROM sys.server_audits 
</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If a trace does not exist, create a trace specification that complies with requirements.

If a trace exists, but is not set to SHUTDOWN_ON_ERROR, modify the SQL Server audit setting to immediately shutdown the database in the event of an audit failure by setting property 1 to a value of 4 or 6 for the audit.

(See the SQL Server Help page for sys.sp_trace_create for implementation details.)</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001861</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41023</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>low</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000103-DB-000050</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53398r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-012600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server itself, or the logging or alerting mechanism the application utilizes, must provide a warning when allocated audit record storage volume reaches an organization-defined percentage of maximum audit record storage capacity.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>It is critical for the appropriate personnel to be aware if a system is at risk of failing to process audit logs as required. Audit processing failures include:  software/hardware errors, failures in the audit capturing mechanisms, and audit storage capacity being reached or exceeded.

If audit log capacity were to be exceeded, then events subsequently occurring will not be recorded. Organizations shall define a maximum allowable percentage of storage capacity serving as an alarming threshold (e.g., application has exceeded 80% of log storage capacity allocated) at which time the application or the logging mechanism the application utilizes will provide a warning to the appropriate personnel.

A failure of database auditing will result in either the database continuing to function without auditing, or in a complete halt to database operations. When audit processing fails, appropriate personnel must be alerted immediately to avoid further downtime or unaudited transactions. This can be an alert provided by a log repository or the OS when a designated log directory is nearing capacity.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Since SQL Server does not support the monitoring of the available audit log file space, utilize Windows File Server Resource Manager or a third-party application to perform this activity.

From a Command Prompt, open fsrm.msc.
If fsrm.msc is not installed, the File Server Resource Manager is not installed, File and Folder Quota Management is not enabled. If File Server Resource Manager or a third-party tool capable of sending alert notifications based on audit log store requirements is not installed, this is a finding.

If fsrm.msc is installed, expand File Server Resource Manager in the left pane.
Expand Quota Management.
Select Quotas.
If Quotas have not been created for defined Audit Log storage locations that meet organizationally defined requirements, this is a finding.

In the center pane, select each quota to determine its Path, Limit, Type, and Description. 

Right click the appropriate quota or quotas, and click Edit Quota Properties.
Examine the Notification thresholds panel. If there are no Notification thresholds applied to this Quota, this is a finding.
If a Notification Threshold is applied, and it does not send an email alert, or provide an Event Log entry which is handled by an automated Log Alert reporting application, this is a finding.

If a third-party application is utilized to fulfill this requirement, and it is not configured to provide a notification, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>From File Server Resource Manager:  Choose the From Server Selection, Select a server from the server pool, and select the server from the lower menu. Expand the File and Storage Services Role. Then Expand the File and iSCSI Services subtree. Select File Server Resource Manager. Click Add Features. Return to Add Roles and Features Wizard. Click Next. On the Features Tab, Click Next. Click Install to install and enable the FSRM.msc Microsoft Management Console Snap-in tool.
From a Command Prompt, open fsrm.msc. Enable File and Folder Quota Management. 
Create Quotas for previously identified Audit storage locations based on organizationally defined requirements.

Right click the appropriate quota or quotas, and click Edit Quota Properties. From the Notification thresholds pane, create a Notification threshold for this Quota utilizing a generate email alert, or a generated Event Log entry.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001855</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41024</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000071-DB-000047</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53399r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-010500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server auditing configuration maximum number of files must be configured to reduce the likelihood of storage capacity being exceeded, while meeting organization-defined auditing requirements.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Configure SQL Server during the installation and/or configuration process to determine if adequate storage capacity has been allocated for audit logs.

If SQL Server audit logs that are being generated exceed the amount of space reserved for those logs, the system may shutdown or take other measures to stop processing in order to protect transactions from continuing unlogged.

After the initial setup of SQL Server audit log configuration, it is best to check the available space frequently until the maximum number of files has been reached. Checking the available space can help determine the balance of online audit data with space required.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check the SQL Server audit setting on the maximum number of files of the trace used for the auditing requirement. 

Select * from sys.traces. Determine the audit being used to fulfill the overall auditing requirement. Examine the max_files and max_size parameters. SQL will overwrite the oldest files when the max_files parameter has been exceeded. Care must be taken to ensure that this does not happen, or data will be lost. 


The amount of space determined for logging by SQL Server is calculated by multiplying the maximum number of files by the maximum file size.   
If auditing will outgrow the space reserved for logging before being overwritten, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Configure the maximum number of audit log files that are to be generated, staying within the number of logs the system was sized to support.

Update the max_files parameter of the audits to ensure the correct number of files is defined.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001849</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41025</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000071-DB-000047</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53400r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-010400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server auditing configuration maximum file size must be configured to reduce the likelihood of storage capacity being exceeded, while meeting organization-defined auditing requirements.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Configure SQL Server during the installation and/or configuration process to determine if adequate storage capacity has been allocated for audit logs.

If SQL Server audit logs that are being generated exceed the amount of space reserved for those logs, the system may shutdown or take other measures to stop processing in order to protect transactions from continuing unlogged.

After the initial setup of SQL Server audit log configuration, it is best to check the available space until the maximum number of files has been reached. SQL will overwrite the oldest files when the max_files parameter has been exceeded. Care must be taken to ensure that this does not happen, or data will be lost. Therefore, the combination of max_size and max_files must be monitored to ensure that overwriting does not occur. This must also coincide with the backup process of off-loading the files.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check the SQL Server audit setting on the maximum file size of the trace used for the auditing requirement. 

Select * from sys.traces. Determine the audit being used to fulfill the overall auditing requirement. Examine the max_files and max_size parameters. SQL will overwrite the oldest files when the max_files parameter has been exceeded. Care must be taken to ensure that this does not happen, or data will be lost. 


The amount of space determined for logging by SQL Server is calculated by multiplying the maximum number of files by the maximum file size.   
If auditing will outgrow the space reserved for logging before being overwritten, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Configure the maximum file size of each audit log file that is to be generated, staying within the file size the system was sized to support. Modify the audit in question to be placed on drives with adequate space or reconfigure to ensure the audit will not fill the space allocated.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001849</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41026</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000072-DB-000046</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53401r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-010600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must have allocated audit record storage capacity to meet the organization-defined requirements for saving audit record information.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server does not have the ability to be cognizant of potential audit log storage capacity issues. During the installation and/or configuration process, SQL Server should detect and determine if adequate storage capacity has been allocated for audit logs.

During the installation process, a notification may be provided to the installer indicating, based on the auditing configuration chosen and the amount of storage space allocated for audit logs, the amount of storage capacity available is not sufficient to meet storage requirements. SQL Server is not able to send out notice based on adequate storage capacity allocated for the audit logs.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>From a Command Prompt, open fsrm.msc.
If fsrm.msc is not installed, the File Server Resource Manager is not installed; File and Folder Quota Management is not enabled. If File Server Resource Manager or a third-party tool capable of sending alert notifications based on audit log store requirements is not installed, this is a finding.

If fsrm.msc is installed, expand File Server Resource Manager in the left pane.
Expand Quota Management.
Expand Quotas.
If Quotas have not been created for defined Audit Log storage locations, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Use File Server Resource Manager (FSRM.msc) to enable File and Folder Quota Management and create quotas for identified Audit storage locations.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001849</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41027</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000101-DB-000044</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53402r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-012400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must include organization-defined additional, more detailed information in the audit records for audit events identified by type, location, or subject.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked.

SQL Server does have a means available to add organizationally defined additional, more detailed information in the audit event records. These events may be identified by type, location, or subject. An example of more detailed information the organization may require in audit records could be the name of the application where the request is coming from.

Some organizations may determine that more detailed information is required for specific database event types. If this information is not available, it could negatively impact forensic investigations into user actions or other malicious events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:
     SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);
All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement. 
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:
     SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
     14, 15, 18, 20, 
     102, 103, 104, 105, 106, 107, 108, 109, 110, 
     111, 112, 113, 115, 116, 117, 118, 
     128, 129, 130, 
     131, 132, 133, 134, 135, 
     152, 153, 
     170, 171, 172, 173, 175, 176, 177, 178.
If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces.  However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)  
Use the following query to obtain a list of all event IDs, and their meaning:
     SELECT * FROM sys.trace_events; 
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements.  However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated.  They will be removed at some point after SQL Server 2014.  The replacement feature is Extended Events.  If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000135</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41028</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000100-DB-000201</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53403r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-012300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must produce audit records containing sufficient information to establish the identity of any user/subject associated with the event.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information system auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked. 

Database software is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly who performed a given action. If user identification information is not recorded and stored with the audit record, the record itself is of very limited use.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:
     SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);
All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement. 
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:
     SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
     14, 15, 18, 20, 
     102, 103, 104, 105, 106, 107, 108, 109, 110, 
     111, 112, 113, 115, 116, 117, 118, 
     128, 129, 130, 
     131, 132, 133, 134, 135, 
     152, 153, 
     170, 171, 172, 173, 175, 176, 177, 178.
If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces.  However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)  
Use the following query to obtain a list of all event IDs, and their meaning:
     SELECT * FROM sys.trace_events; 
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements.  However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated.  They will be removed at some point after SQL Server 2014.  The replacement feature is Extended Events.  If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001487</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41029</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000099-DB-000043</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53404r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-012200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must produce audit records containing sufficient information to establish the outcome (success or failure) of the events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information system auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes, but is not limited to:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked. 

SQL Server is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know the outcome of attempted actions. This requires specific information regarding the outcome of the action or event that the audit record is referring to. If outcome status information is not recorded and stored with the audit record, the record itself is of very limited use.

Success and failure indicators ascertain the outcome of a particular event. As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response. Without knowing the outcome of audit events, it is very difficult to accurately recreate the series of events during forensic analysis.

If auditing is enabled, SQL Server does capture the outcome status-specific information in all audit records.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:
     SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);
All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement. 
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:
     SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
     14, 15, 18, 20, 
     102, 103, 104, 105, 106, 107, 108, 109, 110, 
     111, 112, 113, 115, 116, 117, 118, 
     128, 129, 130, 
     131, 132, 133, 134, 135, 
     152, 153, 
     170, 171, 172, 173, 175, 176, 177, 178.
If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces.  However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)  
Use the following query to obtain a list of all event IDs, and their meaning:
     SELECT * FROM sys.trace_events; 
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements.  However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated.  They will be removed at some point after SQL Server 2014.  The replacement feature is Extended Events.  If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000134</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41030</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000098-DB-000042</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53405r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-012100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must produce audit records containing sufficient information to establish the sources (origins) of the events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information system auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes, but is not limited to:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked. 

SQL Server is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly who performed what actions. This requires specific information regarding the source of the event an audit record is referring to. If the source of the event information is not recorded and stored with the audit record, the record itself is of very limited use.

The source of the event can be a user account and sometimes a system account when timed jobs are run. Without information establishing the source of activity, the value of audit records from a forensics perspective is questionable. If auditing is enabled, SQL Server does capture the source of the event-specific information in all audit records.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:
     SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);
All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement. 
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:
     SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
     14, 15, 18, 20, 
     102, 103, 104, 105, 106, 107, 108, 109, 110, 
     111, 112, 113, 115, 116, 117, 118, 
     128, 129, 130, 
     131, 132, 133, 134, 135, 
     152, 153, 
     170, 171, 172, 173, 175, 176, 177, 178.
If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces.  However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)  
Use the following query to obtain a list of all event IDs, and their meaning:
     SELECT * FROM sys.trace_events; 
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements.  However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated.  They will be removed at some point after SQL Server 2014.  The replacement feature is Extended Events.  If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000133</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41031</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000097-DB-000041</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53406r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-012000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must produce audit records containing sufficient information to establish where the events occurred.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information system auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes, but is not limited to:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked. 

SQL Server is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly where actions were performed. This requires specific information regarding the event location an audit record is referring to. If event location information is not recorded and stored with the audit record, the record itself is of very limited use.

An event location can be a database instance, table, column, row, etc. Without sufficient information establishing where the audit events occurred, investigation into the cause of events is severely hindered. If auditing is enabled, SQL Server does capture the event location-specific information in all audit records.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:
     SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);
All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement. 
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:
     SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
     14, 15, 18, 20, 
     102, 103, 104, 105, 106, 107, 108, 109, 110, 
     111, 112, 113, 115, 116, 117, 118, 
     128, 129, 130, 
     131, 132, 133, 134, 135, 
     152, 153, 
     170, 171, 172, 173, 175, 176, 177, 178.
If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces.  However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)  
Use the following query to obtain a list of all event IDs, and their meaning:
     SELECT * FROM sys.trace_events; 
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements.  However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated.  They will be removed at some point after SQL Server 2014.  The replacement feature is Extended Events.  If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000132</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41032</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000096-DB-000040</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53407r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-011900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must produce audit records containing sufficient information to establish when (date and time) the events occurred.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information system auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes, but is not limited to:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked. 

SQL Server is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly when actions were performed. This requires specific information regarding the date and time an audit record is referring to. If date and time information is not recorded and stored with the audit record, the record itself is of very limited use.

If auditing is enabled, SQL Server does capture the date and time-specific information in all audit records.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:
     SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);
All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement. 
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:
     SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
     14, 15, 18, 20, 
     102, 103, 104, 105, 106, 107, 108, 109, 110, 
     111, 112, 113, 115, 116, 117, 118, 
     128, 129, 130, 
     131, 132, 133, 134, 135, 
     152, 153, 
     170, 171, 172, 173, 175, 176, 177, 178.
If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces.  However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)  
Use the following query to obtain a list of all event IDs, and their meaning:
     SELECT * FROM sys.trace_events; 
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements.  However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated.  They will be removed at some point after SQL Server 2014.  The replacement feature is Extended Events.  If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000131</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41033</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000095-DB-000039</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53408r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-011800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must produce audit records containing sufficient information to establish what type of events occurred.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Information system auditing capability is critical for accurate forensic analysis. Audit record content which may be necessary to satisfy the requirement of this control includes, but is not limited to:  time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked. 

SQL Server is capable of a range of actions on data stored within the database. It is important, for accurate forensic analysis, to know exactly what actions were performed. This requires specific information regarding the event type an audit record is referring to. If event type information is not recorded and stored with the audit record, the record itself is of very limited use.

If auditing is enabled, SQL Server does capture the event type-specific information in all audit records.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:
     SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);
All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement. 
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:
     SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
     14, 15, 18, 20, 
     102, 103, 104, 105, 106, 107, 108, 109, 110, 
     111, 112, 113, 115, 116, 117, 118, 
     128, 129, 130, 
     131, 132, 133, 134, 135, 
     152, 153, 
     170, 171, 172, 173, 175, 176, 177, 178.
If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces.  However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)  
Use the following query to obtain a list of all event IDs, and their meaning:
     SELECT * FROM sys.trace_events; 
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements.  However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated.  They will be removed at some point after SQL Server 2014.  The replacement feature is Extended Events.  If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000130</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41034</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>low</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000080-DB-000063</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53409r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-023700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must protect against an individual using a shared account from falsely denying having performed a particular action.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Non-repudiation of actions taken is required in order to maintain application integrity. Examples of particular actions taken by individuals include creating information, sending a message, approving information (e.g., indicating concurrence or signing a contract), and receiving a message.

Non-repudiation protects individuals against later claims by an author of not having authored a particular document, a sender of not having transmitted a message, a receiver of not having received a message, or a signatory of not having signed a document.

Use of shared accounts does not provide individual accountability for actions taken on the DBMS or data. Whenever a single database account is used to connect to the database, a secondary authentication method that provides individual accountability is required. This scenario most frequently occurs when an externally hosted application authenticates individual users to the application and the application uses a single account to retrieve or update database information on behalf of the individual users (as in connection pooling).

When shared accounts are utilized without another means of identifying individual users, users may deny having performed a particular action.

(Shared accounts should not be confused with Windows groups, which are used in role-based access control.)</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of authorized SQL Server accounts in the system documentation.

If accounts are determined to be shared, determine if individuals are first individually authenticated. If individuals are not individually authenticated before using the shared account (e.g., by the operating system or possibly by an application making calls to the database), this is a finding. (The key is individual accountability. If this can be traced, this is not a finding.) 

If accounts are determined to be shared, determine if they are directly accessible to end users.  If so, this is a finding. 

Review contents of audit logs, traces and data tables to confirm that the identity of the individual user performing the action is captured.  If shared identifiers are found, and not accompanied by individual identifiers, this is a finding.

Note:  Privileged installation accounts may be required to be accessed by the DBA or other administrators for system maintenance. In these cases, each use of the account must be logged in some manner to assign accountability for any actions taken during the use of the account.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove user-accessible shared accounts and use individual userids.

Build/configure applications to ensure successful individual authentication prior to shared account access.

Ensure each user's identity is received and used in audit data in all relevant circumstances.

Design, develop, and implement a method to log use of any account to which more than one person has access. Restrict interactive access to shared accounts to the fewest persons possible.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000166</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41035</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000091-DB-000066</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53410r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-011400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must generate audit records for the DoD-selected list of auditable events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Audit records can be generated from various components within the information system, such as network interfaces, hard disks, modems, etc. From an application perspective, certain specific application functionalities may be audited, as well.

The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records (i.e., auditable events, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, file names involved, and access control or flow control rules invoked).

Organizations may define the organizational personnel accountable for determining which application components shall provide auditable events.

Auditing provides accountability for changes made to the SQL Server configuration or its objects and data. It provides a means to discover suspicious activity and unauthorized changes. Without auditing, a compromise may go undetected and without a means to determine accountability.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:
     SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);
All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement. 
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:
     SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
     14, 15, 18, 20, 
     102, 103, 104, 105, 106, 107, 108, 109, 110, 
     111, 112, 113, 115, 116, 117, 118, 
     128, 129, 130, 
     131, 132, 133, 134, 135, 
     152, 153, 
     170, 171, 172, 173, 175, 176, 177, 178.
If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces.  However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)  
Use the following query to obtain a list of all event IDs, and their meaning:
     SELECT * FROM sys.trace_events; 
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements.  However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated.  They will be removed at some point after SQL Server 2014.  The replacement feature is Extended Events.  If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000172</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41036</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-999999-DB-000209</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53411r5_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-023600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must be configured to use Windows Integrated Security.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server Authentication does not provide for many of the authentication requirements of the DoD. In some cases workarounds are present, but the authentication is not as robust and does not provide needed functionality. Without that functionality, SQL Server is vulnerable to authentication attacks. Consideration must be given to the placement of SQL server inside a forest to ensure evaluation of risk within the environment is considered. Risk includes introduction of risk to SQL Server from other applications or workstations as well as risk from introduction of SQL server itself into an established environment.

There may be situations where SQL Server Authentication must remain enabled, because of constraints imposed by a third-party application.  In such a case, document the constraint in the system security plan, and obtain signed approval.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>To determine the Server Authentication Mode, execute the following:

EXEC XP_LOGINCONFIG 'login mode'

If the config_value does not equal "Windows NT Authentication", this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>From SQL Server Management Studio, right-click the server, and then click Properties.

Select the Security page. Under Server authentication, select Windows Authentication Mode, and then click OK.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41037</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>low</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000063-DB-000023</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53412r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-010200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server default account sa must have its name changed.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server's 'sa' account has special privileges required to administer the database. The 'sa' account is a well-known SQL Server account name and is likely to be targeted by attackers, and is thus more prone to providing unauthorized access to the database.

Since the SQL Server 'sa' is administrative in nature, the compromise of a default account can have catastrophic consequences, including the complete loss of control over SQL Server. Since SQL Server needs for this account to exist and it should not be removed, one way to mitigate this risk is to change the 'sa' account name.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Verify the SQL Server default 'sa' account name has been changed.

Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Logins.

If SQL Server default 'sa' account name is in the 'Logins' list, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; click 'sa' account name.

Hit &lt;F2&gt; while the name is highlighted in order to edit the name.

Rename the 'sa' account.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41038</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000063-DB-000022</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53413r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-010100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Use of the SQL Server software installation account must be restricted to SQL Server software installation.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>This requirement is intended to limit exposure due to operating from within a privileged account. SQL Server does support the organizational requirement that users of information system accounts with access to an organization-defined list of security functions or security-relevant information use non-privileged accounts and roles, when accessing other (non-security) system functions.

Use of privileged accounts for non-administrative purposes puts data at risk of unintended or unauthorized loss, modification, or exposure. In particular, DBA accounts if used for non-administration application development or application maintenance can lead to miss-assignment of privileges where privileges are inherited by object owners. It may also lead to loss or compromise of application data where the elevated privileges bypass controls designed in, and provided by, applications.

The SQL Server installation account requires privileges not required for SQL Server administration or other functions. Use of accounts configured with excess privileges may result in the loss or compromise of data or system settings due to elevated privileges that bypass controls designed to protect them.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review system documentation to identify the installation account. Verify whether the account is used for anything beyond SQL Server software installation, upgrade, and maintenance actions.

If the account is used for anything beyond SQL Server installation, upgrade, and maintenance actions, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Restrict usage of the SQL Server installation account to SQL Server installation, upgrade, and maintenance actions only.

Disable installation accounts when authorized actions are not being performed.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41039</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000063-DB-000021</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53414r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-010000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DBA OS or domain accounts must be granted only those host system privileges necessary for the administration of SQL Server.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server DBAs, if assigned excessive OS privileges, could perform actions that could endanger the information system or hide evidence of malicious activity.

This requirement is intended to limit exposure due to operating from within a privileged account or role. The check and fix are based on the assumption that Role-Based Access Control (RBAC) is in effect, as mandated by other STIG requirements.  They further assume that, as mandated elsewhere, the privileged accounts discussed here are distinct from the accounts used by the same people when not performing privileged functions.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>From the system security documentation, obtain the list of SQL Server DBA accounts, the OS/domain Group(s) representing those DBAs' job role(s), and the OS permissions required by that/those role(s).


To review local accounts and groups:

Log on to the Windows server hosting SQL Server, using an account with administrator privileges.

From a command prompt opened as administrator, type gpedit.msc, and press [ENTER].  In Group Policy Editor, navigate to Local Computer Policy &gt; Computer Configuration &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment.  Scan the list to determine which privileges are assigned to the Group(s) representing the SQL Server DBA job role(s).  If any privileges are assigned that are not required by these roles, this is a finding.

From the command prompt, type lusrmgr.msc, and press [ENTER].  In the Local Users and Groups console, navigate to Users.  Right-click each DBA user. Click Properties. Click the 'Member of' tab.  If any parent groups are listed that are not specific to DBA roles, this is a finding.

In the Local Users and Groups console, navigate to Groups.  Right-click each DBA Group.  Click Properties.  Review the list of group members.  If any account that does not represent a DBA is listed, this is a finding.


To review domain-level accounts and groups:

Log on to a domain controller with the necessary privileges.

Open Active Directory Users and Computers (available from menus or run dsa.msc)

Determine the location of the accounts or groups to be reviewed.  The default is the Users container, but they could have been created or moved to an Organizational Unit (OU) that is domain specific.

Right-click each DBA user. Click Properties. Click the 'Member of' tab.  If any parent groups are listed that are not specific to DBA roles, this is a finding.

Right-click each DBA Group.  Click Properties.  Select the 'Members' tab. Review the list of group members.  If any account that does not represent a DBA is listed, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>
Remove any unnecessary privileges and any unauthorized members from the Group(s) representing DBAs.

Remove any unnecessary Group memberships from the user accounts representing DBAs.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41040</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000063-DB-000020</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53415r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-009900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>OS and domain accounts utilized to run external procedures called by SQL Server must have limited privileges.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>This requirement is intended to limit exposure due to operating from within a privileged account or role. The inclusion of role is intended to address those situations where an access control policy, such as Role-Based Access Control (RBAC), is being implemented and where a change of role provides the same degree of assurance in the change of access authorizations for both the user and all processes acting on behalf of the user as would be provided by a change between a privileged and non-privileged account.

To limit exposure when operating from within a privileged account or role, the application must support organizational requirements that users of information system accounts, or roles, with access to an organization-defined list of security functions or security-relevant information, use non-privileged accounts, or roles, when accessing other (non-security) system functions.

Use of privileged accounts for non-administrative purposes puts data at risk of unintended or unauthorized loss, modification, or exposure. In particular, DBA accounts, if used for non-administration application development or application maintenance, can lead to misassignment of privileges where privileges are inherited by object owners. It may also lead to loss or compromise of application data where the elevated privileges bypass controls designed in, and provided by, applications.

External applications called by SQL Server may be executed under OS or domain accounts with unnecessary privileges. This can lead to unauthorized access to OS resources and compromise of the OS, SQL Server, or any other services provided by the host platform.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Determine which OS or domain accounts are used by SQL Server to run external procedures. Validate that these accounts have only the privileges necessary to perform the required functionality.

If any OS or domain accounts utilized by SQL Server are running external procedures and have privileges beyond those required for running the external procedures, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Limit privileges to SQL Server-related OS and domain accounts to those required privileges needed to perform their SQL Server-specific functionality.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41041</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000063-DB-000019</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53416r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-009800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server DBA roles must not be assigned excessive or unauthorized privileges.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>This requirement is intended to limit exposure due to operating from within a privileged account or role. The inclusion of role is intended to address those situations where an access control policy, such as Role-Based Access Control (RBAC), is being implemented and where a change of role provides the same degree of assurance in the change of access authorizations for both the user and all processes acting on behalf of the user as would be provided by a change between a privileged and non-privileged account.

Audit of privileged activity may require physical separation, employing information systems on which the user does not have privileged access.

To limit exposure and provide forensic history of activity when operating from within a privileged account or role, SQL Server does support organizational requirements that users of information system accounts, or roles, with access to an organization-defined list of security functions or security-relevant information, use non-privileged accounts, or roles, when accessing other (non-security) system functions.

SQL Server provides access logging that ensures users who are granted a privileged role (or roles) have their privileged activity logged. DBAs, if assigned excessive privileges, could perform actions that endanger the information system or hide evidence of malicious activity.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of all DBAs.
Obtain documented role assignments for each DBA.
Obtain from system documentation or use SQL Server to determine privilege assignment of user-defined roles.

Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; right click &lt;'administrator account name'&gt; &gt;&gt; Properties &gt;&gt; User &gt;&gt; Securables.

If any item in the 'Permission' listing, for each highlighted item that exists in the 'Securables' listing, has excessive privileges, this is a finding.

Navigate from 'Securables' to 'Server Roles'.

If any checked 'Server roles' are determined to be excessive privileges, this is a finding.

Navigate from 'Server Roles' to 'Users mapped to the login'.

If any checked 'Database role membership' of each highlighted and checked 'Database' are determined to be excessive privileges, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove permissions from DBAs and other administrative users beyond those required for administrative functions.

Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; right click &lt;'administrator account name'&gt; &gt;&gt; Properties &gt;&gt; User &gt;&gt; Securables.

Remove 'Securables' permissions from DBAs and other administrative users that are beyond what is required.

Navigate from 'Securables' to 'Server Roles'.

Remove 'Server Roles' permissions from DBAs and other administrative users that are beyond what is required.

Navigate from 'Server Roles' to 'Users mapped to the login'.

Remove 'Users mapped to the login' permissions from DBAs and other administrative users that are beyond what is required.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41042</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000063-DB-000018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53417r5_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-009700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>All use of privileged accounts must be audited.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>This is intended to limit exposure, by making it possible to trace any unauthorized access to other data or functionality by a privileged user account or role that has permissions on security functions or security-relevant information.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:

SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);

All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement.
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:

SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
14, 15, 18, 20,
102, 103, 104, 105, 106, 107, 108, 109, 110,
111, 112, 113, 115, 116, 117, 118,
128, 129, 130,
131, 132, 133, 134, 135,
152, 153,
170, 171, 172, 173, 175, 176, 177, 178.

If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces. However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)
Use the following query to obtain a list of all event IDs, and their meaning:
SELECT * FROM sys.trace_events;
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements. However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated. They will be removed at some point after SQL Server 2014. The replacement feature is Extended Events. If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41043</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000063-DB-000017</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53418r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-009600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Administrators must utilize a separate, distinct administrative account when performing administrative activities, accessing database security functions, or accessing security-relevant information within SQL Server.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>This requirement is intended to limit exposure due to operating from within a privileged account or role. The inclusion of role is intended to address those situations where an access control policy, such as Role-Based Access Control (RBAC), is being implemented and where a change of role provides the same degree of assurance in the change of access authorizations for both the user and all processes acting on behalf of the user as would be provided by a change between a privileged and non-privileged account.

To limit exposure when operating from within a privileged account or role, SQL Server does support organizational requirements that users of information system accounts, or roles, with access to an organization-defined list of security functions or security-relevant information, use non-privileged accounts, or roles, when accessing other (non-security) system functions.

When privileged activities are not separated from non-privileged activities, SQL Server could be subject to unauthorized changes of settings or data, which a standard user would not normally have access to outside of an authorized maintenance session. Often, administrator accounts have a unique prefix to help with identification. These accounts are located within SQL Server and may only provide access to one database instance or a limited number of database objects.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain a list of SQL Server DBAs or other administrative accounts. Run the following SQL script to check all users’ permissions:

SELECT SP1.[name] AS 'Login', 'Role: ' + SP2.[name] COLLATE DATABASE_DEFAULT AS 'ServerPermission'
FROM sys.server_principals SP1
  JOIN sys.server_role_members SRM
    ON SP1.principal_id = SRM.member_principal_id
  JOIN sys.server_principals SP2
    ON SRM.role_principal_id = SP2.principal_id
UNION ALL
SELECT SP.[name] AS 'Login' , SPerm.state_desc + ' ' + SPerm.permission_name COLLATE DATABASE_DEFAULT AS 'ServerPermission'
  FROM sys.server_principals SP
  JOIN sys.server_permissions SPerm
    ON SP.principal_id = SPerm.grantee_principal_id
ORDER BY [Login], [ServerPermission]

If any DBA or administrative objects are owned by non-DBA or non-administrative accounts, this is a finding.

If any DBA or administrator has authorization for non- administrative access to the system for which they are the administrator and they do not have a non-administrator account, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove DBA privileges and privileges to administer owned objects that are assigned to the administrator's non-DBA account.
Remove the permission access from the account that has direct access by running the following script:
USE master
REVOKE &lt;'server privilege name'&gt; TO &lt;'account name'&gt;
GO

Remove the user account from the role's Member list where the account is not authorized for specified permission by running the following script:
USE master
ALTER SERVER ROLE [&lt;'server role name'&gt;] DROP MEMBER &lt;'user name'&gt;
GO

Provide administrators with separate accounts for administration and regular accounts for non-administrator activity.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41044</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000062-DB-000016</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53419r5_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-009400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must restrict access to system tables, other configuration information, and metadata to DBAs and other authorized users.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The principle of Least Privilege must be applied to the ability of users to access system tables, system management information, other configuration information, and metadata.  Unauthorized access to this data could result in unauthorized changes to database objects, access controls, or SQL Server configuration.  Only database administrators and other authorized users must be allowed such access.

To aid in tracking and administering such permissions, individual logins must not be directly granted permissions or built-in server roles.  Instead, user-defined server roles must be created, with the permissions and built-in server roles granted to them; the individual logins must be assigned to the appropriate user-defined server roles.

The built-in server role "sysadmin" is a partial exception.  This cannot be granted to a user-defined role, only to a login account.  Most (not necessarily all) database administrators will need to be members of sysadmin.  Without this, most DBCC commands and the system stored procedures/functions listed below are unavailable.  The users who require such access must be documented and approved.  

In addition, if the site uses backup-restore software that connects to SQL Server via the Virtual Device Interface (VDI), the account used by that software must have the sysadmin role.  (See Microsoft Knowledge Base article 2926557, http://support.microsoft.com/kb/2926557).  If this applies, it must be documented and approved.

Stored procedures/functions available only to the sysadmin role:
fn_yukonsecuritymodelrequired
sp_add_agent_parameter
sp_add_agent_profile
sp_adddatatype
sp_adddistributiondb
sp_adddistributor
sp_addqreader_agent
sp_addsubscriber
sp_addsubscriber_schedule
sp_addtabletocontents
sp_attachsubscription
sp_cdc_cleanup_change_table
sp_cdc_disable_db
sp_cdc_disable_table
sp_cdc_drop_job
sp_cdc_enable_db
sp_cdc_enable_table
sp_cdc_restoredb
sp_cdc_vupgrade
sp_certify_removable
sp_change_agent_parameter
sp_change_agent_profile
sp_change_subscription_properties
sp_change_users_login
sp_changedistpublisher
sp_changedistributiondb
sp_changedistributor_password
sp_changedistributor_property
sp_changemergesubscription
sp_changeqreader_agent
sp_changereplicationserverpasswords
sp_changesubscriptiondtsinfo
sp_checkinvalidivarticle
sp_copysubscription
sp_create_removable
sp_cycle_errorlog
sp_dbcmptlevel
sp_dbmmonitoraddmonitoring
sp_dbmmonitorchangealert
sp_dbmmonitordropalert
sp_dbmmonitordropmonitoring
sp_dbmmonitorhelpalert
sp_dbmmonitorhelpmonitoring
sp_dbmmonitorresults
sp_dbmmonitorupdate
sp_dbremove
sp_drop_agent_parameter
sp_drop_agent_profile
sp_dropdatatypemapping
sp_dropdistpublisher
sp_dropdistributiondb
sp_dropdistributor
sp_dropmergepullsubscription
sp_droppullsubscription
sp_dropsubscriber
sp_dsninfo
sp_enumdsn
sp_flush_commit_table_on_demand
sp_generate_agent_parameter
sp_get_distributor
sp_get_Oracle_publisher_metadata
sp_getagentparameterlist
sp_getdefaultdatatypemapping
sp_grant_publication_access
sp_help_agent_default
sp_help_agent_parameter
sp_help_agent_profile
sp_helpdistpublisher
sp_helpdistributor
sp_helpmergesubscription
sp_helpqreader_agent
sp_helpreplicationdboption
sp_identitycolumnforreplication
sp_IHValidateRowFilter
sp_IHXactSetJob
sp_link_publication
sp_monitor
sp_MSadd_distribution_agent
sp_MSadd_logreader_agent
sp_MSadd_merge_agent
sp_MSadd_snapshot_agent
sp_MSadd_subscriber_schedule
sp_MSadd_tracer_history
sp_MSadd_tracer_token
sp_MScdc_cleanup_job
sp_MScdc_db_ddl_event
sp_MScdc_ddl_event
sp_MSchange_distribution_agent_properties
sp_MSchange_logreader_agent_properties
sp_MSchange_merge_agent_properties
sp_MSchange_snapshot_agent_properties
sp_MSchangedynamicsnapshotjobatdistributor
sp_MSchangedynsnaplocationatdistributor
sp_MScheck_pull_access
sp_MScleanupmergepublisher_internal
sp_MSclear_dynamic_snapshot_location
sp_MScreate_dist_tables
sp_MSdbuserpriv
sp_MSdeletefoldercontents
sp_MSdrop_6x_replication_agent
sp_MSdrop_merge_agent
sp_MSdrop_snapshot_dirs
sp_MSdropmergedynamicsnapshotjob
sp_MSdynamicsnapshotjobexistsatdistributor
sp_MSenumallpublications
sp_MSfetchAdjustidentityrange
sp_MSfix_6x_tasks
sp_MSforce_drop_distribution_jobs
sp_MSget_agent_names
sp_MSget_jobstate
sp_MSget_oledbinfo
sp_MSget_publication_from_taskname
sp_MSgetdbversion
sp_MSgetmaxsnapshottimestamp
sp_MShelp_repl_agent
sp_MShelp_replication_status
sp_MShelp_snapshot_agent
sp_MShelpconflictpublications
sp_MShelpdynamicsnapshotjobatdistributor
sp_MShelplogreader_agent
sp_MShelpsnapshot_agent
sp_MShelptranconflictcounts
sp_MSinit_publication_access
sp_MSreinit_failed_subscriptions
sp_MSremoveoffloadparameter
sp_MSrepl_backup_complete
sp_MSrepl_backup_start
sp_MSrepl_createdatatypemappings
sp_MSrepl_dropdatatypemappings
sp_MSrepl_enumarticlecolumninfo
sp_MSrepl_enumpublications
sp_MSrepl_enumpublishertables
sp_MSrepl_enumsubscriptions
sp_MSrepl_enumtablecolumninfo
sp_MSrepl_getdistributorinfo
sp_MSrepl_startup_internal
sp_MSreplagentjobexists
sp_MSreplcheck_permission
sp_MSreplcheck_pull
sp_MSreplcheck_subscribe
sp_MSreplcheck_subscribe_withddladmin
sp_MSreplcopyscriptfile
sp_MSreplremoveuncdir
sp_MSsetalertinfo
sp_MSSetServerProperties
sp_MSsetupnosyncsubwithlsnatdist
sp_MSsetupnosyncsubwithlsnatdist_cleanup
sp_MSsetupnosyncsubwithlsnatdist_helper
sp_MSstartdistribution_agent
sp_MSstartmerge_agent
sp_MSstartsnapshot_agent
sp_MSstopdistribution_agent
sp_MSstopmerge_agent
sp_MSstopsnapshot_agent
sp_MSupdate_agenttype_default
sp_oledbinfo
sp_procoption
sp_removedbreplication
sp_removesrvreplication
sp_replication_agent_checkup
sp_replicationdboption
sp_resetstatus
sp_restoredbreplication
sp_SetAutoSAPasswordAndDisable
sp_setdefaultdatatypemapping
sp_updatestats
sp_validatelogins
sp_vupgrade_mergeobjects
sp_vupgrade_replication
sp_vupgrade_replsecurity_metadata
xp_repl_convert_encrypt_sysadmin_wrapper
</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Use SQL Server and system documentation to determine privilege assignment of user-defined roles.

Determine which user-defined roles grant privileges to system tables and configuration data stored in SQL Server.

For each Login:

In SQL Server Management Studio, Object Explorer, expand &lt;SQL Server instance&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; Right-click &lt;login account name&gt; &gt;&gt; Properties &gt;&gt; User &gt;&gt; Securables.

If any item in the Explicit Permissions listing, for each highlighted item that exists in the Securables listing, indicates direct permission access, and that permission is anything other than Connect SQL, this is a finding.

Navigate from Securables to Server Roles.

If any Server Roles are checked from the following list, indicating direct permission access, this is a finding:
bulkadmin
dbcreator
diskadmin
processadmin
securityadmin
serveradmin
setupadmin

If the sysadmin server role is checked, review system documentation to determine whether this login's need for the sysadmin role is documented and approved. If it is not, this is a finding.

If any user-defined server roles with system table or configuration data privileges are checked, review system documentation to determine whether this login's need for the role is documented and approved. If it is not, this is a finding.

Navigate from Server Roles to User Mapping. Select in turn each entry where the User column is non-blank. If any Database Roles are checked from the following list, indicating direct permission access, this is a finding:
db_accessadmin
db_backupoperator
db_datareader
db_datawriter
db_ddladmin
db_denydatareader
db_denydatawriter
db_owner
db_securityadmin</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If necessary memberships in the sysadmin role are not documented or not approved, document them and obtain approval.

If unnecessary memberships in the sysadmin role are documented, remove them from the documentation.

Remove all direct access permissions and unauthorized permissions as required using the below instructions:

In SQL Server Management Studio, Object Explorer, expand  &lt;SQL Server instance&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; Right-click &lt;user account name&gt; &gt;&gt; Properties &gt;&gt; User &gt;&gt; Securables.

Remove Securables permissions from user account.

Navigate from Securables to Server Roles.

Remove Server Roles permissions from user account.

Navigate from Server Roles to Users Mapping.

Remove direct permissions on db_accessadmin, db_backupoperator, db_datareader, db_datawriter, db_ddladmin, db_denydatareader, db_denydatawriter, db_owner, and db_securityadmin from user account.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002220</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41045</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000062-DB-000012</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53420r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-009100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>A single SQL Server database connection configuration file (or a single set of credentials) must not be used to configure all database clients.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Applications employ the concept of least privilege for specific duties and information systems (including specific functions, ports, protocols, and services). The concept of least privilege is also applied to information system processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and information system accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of information systems.

Many sites distribute a single SQL Server connection configuration file to all site database users that contains network access information for all databases on the site. Such a file provides information to access SQL Server databases not required by all users that may assist in unauthorized access attempts.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check procedures for providing SQL Server database connection information to users/applications. If procedures do not indicate or implement restrictions to connections required by the particular user/application which indicate process of least privilege and specific authorization was employed, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Implement procedures to supply SQL Server database connection information to only those databases authorized for the user.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002220</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41046</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000062-DB-000011</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53421r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-009000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must restrict access to sensitive information to authorized user roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Applications employ the concept of least privilege for specific duties and information systems (including specific functions, ports, protocols, and services). The concept of least privilege is also applied to information system processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and information system accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of information systems.

Unauthorized access to sensitive data may compromise the confidentiality of personnel privacy, threaten national security or compromise a variety of other sensitive operations. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of available user-defined server roles from system documentation.

Obtain the list of available user-defined server roles from the SQL Server system by running the following script:
/**********************************************************************************
 LIST ALL INDIRECT (via ROLES) ACCESS TO THE SERVER PERMISSION.
 ***********************************************************************************/
DECLARE @admin_Account_name sysname
SET @admin_Account_name = 'NO admin ACCOUNT found'
DECLARE @server_name sysname
SET @server_name = 'NO Server found'

SELECT @server_name = name FROM sys.servers
 WHERE server_id = 0
SET @admin_Account_name = @server_name  + '\Administrator'

SELECT pe.grantee_principal_id
     , pr.type AS 'Grantee_Type'
     , pr.name AS 'Grantee_Name'
     , pe.type
     , pe.permission_name
     , pe.state
     , pe.state_desc
  FROM sys.server_permissions pe
  JOIN sys.server_principals pr
    ON pe.grantee_principal_id = pr.principal_id
  JOIN sys.server_principals ps
    ON pe.grantor_principal_id = ps.principal_id
  LEFT JOIN sys.server_principals us
    ON us.principal_id = pe.major_id
 WHERE pr.type IN ('R')
   AND pe.grantee_principal_id &gt; 10
   AND NOT pr.name IN ('##MS_PolicyEventProcessingLogin##', '##MS_PolicyTsqlExecutionLogin##',
                       'NT AUTHORITY\NETWORK SERVICE', 'NT AUTHORITY\SYSTEM', 'NT SERVICE\MSSQLSERVER',
                       'NT SERVICE\SQLSERVERAGENT', 'NT SERVICE\SQLWriter', 'NT SERVICE\Winmgmt')
   AND NOT pr.name = @admin_Account_name
 ORDER BY CASE pe.state
             WHEN 'D' THEN 1
             WHEN 'W' THEN 2
             WHEN 'G' THEN 3
             ELSE 4
          END

If any listed user-defined roles are not found in the system documentation, this is a finding.

Obtain the list assigned privileges for all user-defined roles in the system documentation.

Check all SQL Server user-defined server roles for access rights as it relates to the separation of duties. Repeat steps for each user-defined server role.
Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Server Roles &gt;&gt; right click &lt;'user-defined server role name'&gt; &gt;&gt; Properties &gt;&gt; General &gt;&gt; Securables. If any user-defined role is assigned privileges that are not documented in the system documentation, this is a finding.

If any user-defined role contains permissions that are inconsistent with separation sensitive information assignment, this is a finding.

If system access requires more than one level of sensitive information access and the user-defined role names do not clearly differentiate between the different levels of sensitive information, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Add the user-defined server role to the system documentation.

Add the assigned privileges of the user-defined server role to the system documentation.

Remove the user from direct access to server permission by running the following script:
USE master
REVOKE &lt;'server permission name'&gt; TO &lt;'account name'&gt; CASCADE

Remove server role permission from the user-defined server role by running the following script:
USE master
REVOKE &lt;'server role name'&gt; TO [&lt;'server role name'&gt;]

Rename the user-defined role by running the following script:
USE master
ALTER SERVER ROLE [&lt;'old role name'&gt;] WITH NAME = [&lt;'new role name'&gt;]</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002220</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41047</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000062-DB-000010</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53422r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-008900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server processes or services must run under custom, dedicated OS or domain accounts.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Separation of duties is a prevalent Information Technology control that is implemented at different layers of the information system, including the operating system and in applications. It serves to eliminate or reduce the possibility that a single user may carry out a prohibited action. Separation of duties requires that the person accountable for approving an action is not the same person who is tasked with implementing or carrying out that action. 

The concept of separation of duties extends to processes.  The DBMS must run under a custom, dedicated OS or domain account.  When the DBMS is running under a shared account, users with access to that account could inadvertently or maliciously make changes to the DBMS’s settings, files, or permissions.  Similarly, related services must run under dedicated accounts where this is possible.  The SQL Server Browser and Writer services are exceptions: see http://msdn.microsoft.com/en-us/library/hh510203(v=sql.110).aspx  and  http://msdn.microsoft.com/en-us/library/ms175536(v=sql.110).aspx.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check OS settings to determine whether SQL Server processes are running under a dedicated OS or domain account. If the SQL Server processes are running under shared accounts, this is a finding.

From a Command Prompt, type services.msc, and press [ENTER]. Scroll down to the SQL Server Services. SQL Server Services begin with SQL.  The following services, when present, should be listed as follows:

Service Name:                    Log On As:
SQL Full-text Filter Daemon Launcher:        NT Service\UNIQUE CUSTOM ACCOUNT
SQL Server [stand-alone]:            NT Service\UNIQUE CUSTOM ACCOUNT
SQL Server [cluster]:                &lt;domain&gt;\&lt;CustomServiceAccount&gt;
SQL Server Agent:                NT Service\UNIQUE CUSTOM ACCOUNT
SQL Server Analysis Services:            NT Service\UNIQUE CUSTOM ACCOUNT
SQL Server Browser:                Local Service
SQL Server Distributed Replay Client:        NT Service\UNIQUE CUSTOM ACCOUNT
SQL Server Distributed Replay Controller:    NT Service\UNIQUE CUSTOM ACCOUNT
SQL Server Integration Services 11.0:        NT Service\UNIQUE CUSTOM ACCOUNT
SQL Server Reporting Services:            NT Service\UNIQUE CUSTOM ACCOUNT
SQL Server VSS Writer:                Local System

UNIQUE CUSTOM ACCOUNT refers to an account with which no other service listed in the services.msc window is assigned. If any account requiring a unique custom account uses an account that any other service utilizes (regardless of service status), this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Configure the SQL Server services to use a custom, dedicated OS or domain account.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002220</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41202</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000062-DB-000009</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53669r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-008800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce separation of duties through assigned information access authorizations.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Separation of duties is a prevalent Information Technology control that is implemented at different layers of the information system, including the operating system and in applications. It serves to eliminate or reduce the possibility that a single user may carry out a prohibited action. Separation of duties requires that the person accountable for approving an action is not the same person who is tasked with implementing or carrying out that action.

Additionally, the person or entity accountable for monitoring the activity must be separate as well. To meet this requirement, applications, when applicable, shall be divided where functionality is based on roles and duties. Examples of separation of duties include: (i) mission functions and distinct information system support functions are divided among different individuals/roles; (ii) different individuals perform information system support functions (e.g., system management, systems programming, configuration management, quality assurance and testing, network security); (iii) security personnel who administer access control functions do not administer audit functions; and (iv) different administrator accounts for different roles.

Privileges granted outside the role of the application user job function are more likely to go unmanaged or without oversight for authorization. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check for direct user assignment to server permissions by running the following script:
/**********************************************************************************
 LIST ALL DIRECT SERVER PERMISSIONS TO ANY ACCOUNT EXCEPT
  SYSTEM ADMINISTRATOR accounts.  DO NOT LIST ROLES.
***********************************************************************************/
DECLARE @admin_Account_name sysname
SET @admin_Account_name = 'NO administrator account found'
DECLARE @server_name sysname
SET @server_name = 'NO Server found'

SELECT @server_name = name FROM sys.servers
 WHERE server_id = 0
SET @admin_Account_name = @server_name  + '\Administrator'

SELECT pe.grantee_principal_id
     , pr.type AS 'Grantee_Type'
     , pr.name AS 'Grantee_Name'
     , pe.type
     , pe.permission_name
     , pe.state
     , pe.state_desc
  FROM sys.server_permissions pe
  JOIN sys.server_principals pr
    ON pe.grantee_principal_id = pr.principal_id
  JOIN sys.server_principals ps
    ON pe.grantor_principal_id = ps.principal_id
  LEFT JOIN sys.server_principals us
    ON us.principal_id = pe.major_id
 WHERE pr.type IN ('K', 'S', 'U')
   AND pe.grantee_principal_id &gt; 10
   AND NOT pr.name IN ('##MS_PolicyEventProcessingLogin##', '##MS_PolicyTsqlExecutionLogin##',
                       'NT AUTHORITY\NETWORK SERVICE', 'NT AUTHORITY\SYSTEM', 'NT SERVICE\MSSQLSERVER',
                       'NT SERVICE\SQLSERVERAGENT', 'NT SERVICE\SQLWriter', 'NT SERVICE\Winmgmt')
   AND NOT pr.name = @admin_Account_name
   AND NOT pe.permission_name = 'connect sql'
 ORDER BY CASE pr.type
             WHEN 'K' THEN 1
             WHEN 'S' THEN 2
             WHEN 'U' THEN 3
             ELSE 4
          END

If any user account list indicates direct access to any server permission, this is a finding.

Obtain the list of available user-defined server roles from system documentation.

Obtain the list of available user-defined server roles from the SQL Server system by running the following script:
/**********************************************************************************
 LIST ALL INDIRECT (via ROLES) ACCESS TO THE SERVER PERMISSION.
 ***********************************************************************************/
DECLARE @admin_Account_name sysname
SET @admin_Account_name = 'NO admin ACCOUNT found'
DECLARE @server_name sysname
SET @server_name = 'NO Server found'

SELECT @server_name = name FROM sys.servers
 WHERE server_id = 0
SET @admin_Account_name = @server_name  + '\Administrator'

SELECT pe.grantee_principal_id
     , pr.type AS 'Grantee_Type'
     , pr.name AS 'Grantee_Name'
     , pe.type
     , pe.permission_name
     , pe.state
     , pe.state_desc
  FROM sys.server_permissions pe
  JOIN sys.server_principals pr
    ON pe.grantee_principal_id = pr.principal_id
  JOIN sys.server_principals ps
    ON pe.grantor_principal_id = ps.principal_id
  LEFT JOIN sys.server_principals us
    ON us.principal_id = pe.major_id
 WHERE pr.type IN ('R')
   AND pe.grantee_principal_id &gt; 10
   AND NOT pr.name IN ('##MS_PolicyEventProcessingLogin##', '##MS_PolicyTsqlExecutionLogin##',
                       'NT AUTHORITY\NETWORK SERVICE', 'NT AUTHORITY\SYSTEM', 'NT SERVICE\MSSQLSERVER',
                       'NT SERVICE\SQLSERVERAGENT', 'NT SERVICE\SQLWriter', 'NT SERVICE\Winmgmt')
   AND NOT pr.name = @admin_Account_name
   AND NOT pe.permission_name = 'connect sql'
 ORDER BY CASE pe.state
             WHEN 'D' THEN 1
             WHEN 'W' THEN 2
             WHEN 'G' THEN 3
             ELSE 4
          END

If any listed user-defined roles are not found in the system documentation, this is a finding.

Obtain the list of assigned privileges for all user-defined roles in the system documentation.

Check all SQL Server user-defined server roles for access rights as it relates to the separation of duties. Repeat steps for each user-defined server role.
Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Server Roles &gt;&gt; right click &lt;'user-defined server role name'&gt; &gt;&gt; Properties &gt;&gt; General &gt;&gt; Securables.  If any roles are found that do not enforce separation of duties, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Add the user-defined server role to the system documentation.

Add the assigned privileges of the user-defined server role to the system documentation.

Remove the user from direct access to server permission by running the following script:
USE master
REVOKE &lt;'server permission name'&gt; TO &lt;'account name'&gt; CASCADE

Remove server role permission from the user-defined server role by running the following script:
USE master
REVOKE &lt;'server role name'&gt; TO [&lt;'server role name'&gt;]</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002220</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41204</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000085-DB-000038</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53671r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-011000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server utilizing Discretionary Access Control (DAC) must enforce a policy that limits propagation of access rights.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Discretionary Access Control (DAC) is based on the premise that individual users are "owners" of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write).

These DAC concepts extend to the server level.  Server instances have the potential for the access controls to propagate without limit, resulting in unauthorized access.

The DBMS must ensure the recipient of server permissions possesses only the access intended. The DBMS must enforce the ability to limit unauthorized rights propagation. If propagation is not prevented, users can continue to grant rights to other users without limit.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check for rights propagation assignment to DBMS server permissions by running the following query:

USE master;
SELECT * 
FROM sys.server_permissions
WHERE state_desc = 'GRANT_WITH_GRANT_OPTION';

If any of the permissions listed have not been documented and approved as requiring GRANT_WITH_GRANT_OPTION, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Document and obtain approval for each GRANT_WITH_GRANT_OPTION that is required.

Correct each unapproved GRANT_WITH_GRANT_OPTION with REVOKE and GRANT statements of the form (replacing "ALTER ANY DATABASE" with the actual server permission at issue):

REVOKE ALTER ANY DATABASE FROM SampleLoginOrServerRole CASCADE;
GRANT ALTER ANY DATABASE TO SampleServerRole;  -- Note, no WITH GRANT OPTION clause here.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002165</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41205</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000036-DB-000174</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53672r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-008500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce DAC policy allowing users to specify and control sharing by named individuals, groups of individuals, or by both; limiting propagation of access rights; and including or excluding access to the granularity of a single user.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) are employed by organizations to control access between users (or processes acting on behalf of users) and objects (e.g., devices, files, records, processes, programs, domains).

DAC is a type of access control methodology serving as a means of restricting access to objects and data based on the identity of subjects and/or groups to which they belong. It is discretionary in the sense that application users with the appropriate permissions to access an application resource or data have the discretion to pass that permission on to another user either directly or indirectly.

Data protection requirements may result in a DAC policy being specified as part of the application design. Discretionary access controls would be employed at the application level to restrict and control access to application objects and data, thereby providing increased information security for the organization.

When DAC controls are employed, those controls must limit sharing to named application users, groups of users, or both. The application DAC controls must also limit the propagation of access rights and have the ability to exclude access to data down to the granularity of a single user.

Databases using DAC must have the ability for the owner of an object or information to assign or revoke rights to view or modify the object or information. If the owner of an object or information does not have rights to exclude access to an object or information at a user level, users may gain access to objects and information they are not authorized to view/modify.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check for direct user assignment to server permissions by running the following script:
/**********************************************************************************
 LIST ALL DIRECT SERVER PERMISSIONS TO ANY ACCOUNT EXCEPT
  SYSTEM ADMINISTRATOR accounts.  DO NOT LIST ROLES.
***********************************************************************************/
DECLARE @admin_Account_name sysname
SET @admin_Account_name = 'NO Administrator account found'
DECLARE @server_name sysname
SET @server_name = 'NO Server found'

SELECT @server_name = name FROM sys.servers
 WHERE server_id = 0
SET @admin_Account_name = @server_name  + '\Administrator'

SELECT pe.grantee_principal_id
     , pr.type AS 'Grantee_Type'
     , pr.name AS 'Grantee_Name'
     , pe.type
     , pe.permission_name
     , pe.state
     , pe.state_desc
  FROM sys.server_permissions pe
  JOIN sys.server_principals pr
    ON pe.grantee_principal_id = pr.principal_id
  JOIN sys.server_principals ps
    ON pe.grantor_principal_id = ps.principal_id
  LEFT JOIN sys.server_principals us
    ON us.principal_id = pe.major_id
 WHERE pr.type IN ('K', 'S', 'U')
   AND pe.grantee_principal_id &gt; 10
   AND NOT pr.name IN ('##MS_PolicyEventProcessingLogin##', '##MS_PolicyTsqlExecutionLogin##',
                       'NT AUTHORITY\NETWORK SERVICE', 'NT AUTHORITY\SYSTEM', 'NT SERVICE\MSSQLSERVER',
                       'NT SERVICE\SQLSERVERAGENT', 'NT SERVICE\SQLWriter', 'NT SERVICE\Winmgmt')
   AND NOT pr.name = @admin_Account_name
 ORDER BY CASE pr.type
             WHEN 'K' THEN 1
             WHEN 'S' THEN 2
             WHEN 'U' THEN 3
             ELSE 4
          END

If any user account list indicates direct access to any server permission, this is a finding.

Obtain the list of available user-defined server roles from system documentation.

Obtain the list of available user-defined server roles from the SQL Server system by running the following script:
/**********************************************************************************
 LIST ALL INDIRECT (via ROLES) ACCESS TO THE SERVER PERMISSION.
 ***********************************************************************************/
DECLARE @admin_Account_name sysname
SET @admin_Account_name = 'NO admin ACCOUNT found'
DECLARE @server_name sysname
SET @server_name = 'NO Server found'

SELECT @server_name = name FROM sys.servers
 WHERE server_id = 0
SET @admin_Account_name = @server_name  + '\Administrator'

SELECT pe.grantee_principal_id
     , pr.type AS 'Grantee_Type'
     , pr.name AS 'Grantee_Name'
     , pe.type
     , pe.permission_name
     , pe.state
     , pe.state_desc
  FROM sys.server_permissions pe
  JOIN sys.server_principals pr
    ON pe.grantee_principal_id = pr.principal_id
  JOIN sys.server_principals ps
    ON pe.grantor_principal_id = ps.principal_id
  LEFT JOIN sys.server_principals us
    ON us.principal_id = pe.major_id
 WHERE pr.type IN ('R')
   AND pe.grantee_principal_id &gt; 10
   AND NOT pr.name IN ('##MS_PolicyEventProcessingLogin##', '##MS_PolicyTsqlExecutionLogin##',
                       'NT AUTHORITY\NETWORK SERVICE', 'NT AUTHORITY\SYSTEM', 'NT SERVICE\MSSQLSERVER',
                       'NT SERVICE\SQLSERVERAGENT', 'NT SERVICE\SQLWriter', 'NT SERVICE\Winmgmt')
   AND NOT pr.name = @admin_Account_name
 ORDER BY CASE pe.state
             WHEN 'D' THEN 1
             WHEN 'W' THEN 2
             WHEN 'G' THEN 3
             ELSE 4
          END

If any listed user-defined roles are not found in the system documentation, this is a finding.

Obtain the list of user role assignments in the system documentation.

Check all SQL Server user-defined server roles for authorized and documented permission assignments. Repeat steps for each user-defined server role.
Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Server Roles &gt;&gt; right click &lt;'user-defined server role name'&gt; &gt;&gt; Properties &gt;&gt; Members.  If any roles are found that are not authorized and documented, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Add the user-defined server role to the system documentation.

Add the user as a member of the user-defined server role within the system documentation.

Remove the user from direct access to server permission by running the following script:
USE master
REVOKE &lt;'server permission name'&gt; TO &lt;'account name'&gt; CASCADE

Remove the user from user-defined role access by running the following script:
USE master
ALTER SERVER ROLE [&lt;'server role name'&gt;] DROP MEMBER &lt;'user name'&gt;

Add the user-defined role access to the user by running the following script:
USE master
ALTER SERVER ROLE [&lt;'server role name'&gt;] ADD  MEMBER &lt;'user name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002165</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41206</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53673r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-008400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Unsafe assembly permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Unsafe assembly' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'Unsafe assembly' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Unsafe assembly' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Unsafe assembly' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any role has 'Grant', 'With Grant' or 'Deny' privileges to the 'Unsafe assembly' permission and the role is not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Unsafe assembly' permission access from the role that is not authorized by executing the following query:


REVOKE Unsafe assembly TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41207</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53674r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-008300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter any endpoint permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter any endpoint' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts. If administrative user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'. These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter any endpoint' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any endpoint' 
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter any endpoint' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any endpoint' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER ANY ENDPOINT TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41208</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53675r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-008200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter any database permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter any database' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'. These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter any database' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any database' 
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter any database' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any database' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER ANY DATABASE TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41209</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53677r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-008100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter Any Credential permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter any credential' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter any credential' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any credential' 
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter any credential' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any credential' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER ANY CREDENTIAL TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41246</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53727r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-008000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter any connection permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter any connection' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'. These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter any connection' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any connection' 
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter any connection' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any connection' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER ANY CONNECTION TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41247</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53728r5_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-007900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access control to the Alter Any Availability Group permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. 

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter any availability group' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts. If administrative user accounts have direct access to administrative roles, this access must be removed.

(The SQL Server installer gives this privilege to the system account "NT AUTHORITY\SYSTEM", so this account is excluded from the Check.  See article KB2847723 in the Microsoft knowledge base.)

Note that this does not apply to logins with names of the form '##MS...##'. These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter any availability group' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any availability group' 
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter any availability group' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter Any Availability Group' permission access from the account that has direct access by using the following code.  Substitute the relevant names for the text in angle brackets.

-- For each login identified in the Check:
USE master;
REVOKE ALTER ANY AVAILABILITY GROUP FROM &lt;login name&gt;;
GO

-- If the necessary server role does not already exist,
-- and any user identified in the Check needs this permission:
USE master;
CREATE SERVER ROLE &lt;role name&gt; AUTHORIZATION &lt;appropriate principal name&gt;;
GO
GRANT ALTER ANY AVAILABILITY GROUP TO &lt;role name&gt;;
GO

-- For each user identified in the Check who needs this permission:
USE master;
ALTER SERVER ROLE &lt;role name&gt; ADD MEMBER &lt;login name&gt;;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41248</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53729r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-007800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter server state permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter server state' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter server state' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter server state'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter server state' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter server state' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER SERVER STATE TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41250</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53732r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-007600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter any event notification permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter any event notification' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter any event notification' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any event notification'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter any event notification' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any event notification' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER ANY EVENT NOTIFICATION TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41251</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53733r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-007500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the View any database permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'View any database' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'View any database' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'View any database' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'View any database' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the "View any database" permission access from the role that is not authorized by executing the following query:

REVOKE View any database TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41252</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53734r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-007400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter any server audit permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter any server audit' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter any server audit' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any server audit' 
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter any server audit' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any server audit' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER ANY SERVER AUDIT TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41253</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53735r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-007300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Shutdown permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Shutdown' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. , If the 'Shutdown' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the 'Shutdown' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Shutdown'
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the' 'Shutdown' permission access from the role that is not authorized by executing the following query:


REVOKE Shutdown TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41254</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53736r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-007200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the External access assembly permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'External access assembly' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'External access assembly' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'External access assembly' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'External access assembly' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'External access assembly' permission access from the role that is not authorized by executing the following query:


REVOKE External access assembly TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41255</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53737r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-007100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Create trace event notification permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Create trace event notification' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'Create trace event notification' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Create trace event notification' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Create trace event notification'
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Create trace event notification' permission access from the role that is not authorized by executing the following query:


REVOKE Create trace event notification TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41256</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53738r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-007000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Create server role permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Create server role' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. , If the 'Create server role' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Create server role' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Create server role'
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Create server role' permission access from the role that is not authorized by executing the following query:


REVOKE Create server role TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41257</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53739r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-006900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Create endpoint permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Create endpoint' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'Create endpoint' permissions are granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Create endpoint' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized.

Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Create endpoint' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Create endpoint' permission access from the role that is not authorized by executing the following query:


REVOKE Create endpoint TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41258</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53740r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-006800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Create DDL event notification permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Create DDL event notification' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'Create DDL event notification' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Create DDL event notification' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Create DDL event notification' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Create DDL event notification' permission access from the role that is not authorized by executing the following query:


REVOKE Create DDL event notification TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41259</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53741r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-006700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Create availability group permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Create availability group' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'Create availability group' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Create availability group' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Create availability group' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Create availability group' permission access from the role that is not authorized by executing the following query:


REVOKE Create availability group TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41260</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53742r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-006600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter any server audit permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations, or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter any server audit' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. If the 'Alter any server audit' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter any server audit' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any server audit' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any server audit' permission access from the role that is not authorized  by executing the following query:


REVOKE Alter any server audit TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41261</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53743r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-006500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the View any definition permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'View any definition' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'View any definition' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'View any definition' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'View any definition' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'View any definition' permission access from the role that is not authorized by executing the following query:


REVOKE View any definition TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41262</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53744r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-006400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Authenticate server permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Authenticate Server' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Authenticate Server' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'AUTHENTICATE SERVER'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Authenticate Server' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Authenticate Server' permission access from the account that has direct access by running the following script:

USE master;
REVOKE AUTHENTICATE SERVER FROM &lt;account name&gt;;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41263</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53745r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-006300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Administer bulk operations permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Administer bulk operations' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Administer bulk operations' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Administer bulk operations'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Administer bulk operations' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Administer bulk operations' permission access from the account that has direct access by running the following script:


USE master

REVOKE ADMINISTER BULK OPERATIONS TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41264</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53746r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-006200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Create endpoint permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Create endpoint' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Create endpoint' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Create endpoint'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Create endpoint' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Create endpoint' permission access from the account that has direct access by running the following script:


USE master

REVOKE CREATE ENDPOINT TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41265</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53747r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-006100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Create DDL event notification permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Create DDL event notification' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'. These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Create DDL Event Notification' by running the following query:

SELECT
who.name AS [Principal Name],
who.type_desc AS [Principal Type],
who.is_disabled AS [Principal Is Disabled],
what.state_desc AS [Permission State],
what.permission_name AS [Permission Name]
FROM
sys.server_permissions what
INNER JOIN sys.server_principals who
ON who.principal_id = what.grantee_principal_id
WHERE
what.permission_name = 'Create DDL Event Notification' 
AND who.name NOT LIKE '##MS%##'
AND who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
who.name
;
GO

If any user accounts have direct access to the 'Create DDL Event Notification' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Create DDL event notification' permission access from the account that has direct access by running the following script:


USE master

REVOKE CREATE DDL EVENT NOTIFICATION TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41266</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53748r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-006000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Create availability group permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Create availability group' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.
</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Create availability group' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Create availability group'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Create availability group' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Create availability group' permission access from the account that has direct access by running the following script:


USE master

REVOKE CREATE AVAILABILITY GROUP TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41267</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53749r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-005900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Create any database permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Create any database' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Create any database' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Create any database'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Create any database' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Create any database'" permission access from the account that has direct access by running the following script:


USE master

REVOKE CREATE ANY DATABASE TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41268</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53750r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-005800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Control server permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Control server' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Control server' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Control server'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Control server' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Control server' permission access from the account that has direct access by running the following script:


USE master

REVOKE CONTROL SERVER TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41269</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53751r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-005700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Administer bulk operations permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Administer bulk operations' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'Administer bulk operations' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Administer bulk operations' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized.

Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Administer bulk operations'
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Administer bulk operations' permission access from the role that is not authorized by executing the following query:


REVOKE Administer bulk operations TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41270</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53752r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-005600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter resources permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter resources' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'Alter resources' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter resources' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter resources' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter resources' permission access from the role that is not authorized by executing the following query:


REVOKE Alter resources TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41271</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53753r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-005500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter any linked server permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter any linked server' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter any linked server' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any linked server'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter any linked server' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any linked server' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER ANY LINKED SERVER TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41273</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53755r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-005300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct control to the Alter any event session permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter any event session' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter any event session' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any event session'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter any event session' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any event session' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER ANY EVENT SESSION TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41274</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53756r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-005200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter trace permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter trace' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter trace' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter trace'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter trace' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter trace' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER TRACE TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41275</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53757r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-005100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter Settings permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter Settings' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter Settings' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter Settings'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter Settings' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter Settings' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER SETTINGS TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41276</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53758r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-005000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Create trace event notification permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Create trace event notification' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Create trace event notification' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Create trace event notification' 
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Create trace event notification' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Create trace event notification' permission access from the account that has direct access by running the following script:


USE master

REVOKE CREATE TRACE EVENT NOTIFICATION TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41277</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53759r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-004900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter resources permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter resources' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter resources' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter resources'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter resources' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter resources' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER RESOURCES TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41278</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53760r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-004800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the External access assembly permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'External access assembly' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'External access assembly' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'External access assembly'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'External access assembly' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'External access assembly' permission access from the account that has direct access by running the following script:


USE master

REVOKE EXTERNAL ACCESS ASSEMBLY TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41279</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53761r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-004700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter any login permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter any login' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter any login' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any login'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter any login' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any login' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER ANY LOGIN TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41280</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53762r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-004600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter any availability group permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations, or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter any availability group' permission is a high server-level privilege that must only be granted to individual administration accounts through roles and users. If the 'Alter any availability group' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter any availability group' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any availability group' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any availability group' permission access from the role that is not authorized  by executing the following query:


REVOKE Alter any availability group TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41281</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53763r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-004500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter any login permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations, or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter any login' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. If the 'Alter any login' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter any login' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any login' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any login' permission access from the role that is not authorized  by executing the following query:


REVOKE Alter any login TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41283</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53765r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-004300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter any linked server permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations, or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter any linked server' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. If the 'Alter any linked server' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter any linked server' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any linked server' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any linked server' permission access from the role that is not authorized  by executing the following query:


REVOKE Alter any linked server TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41284</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53766r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-004200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access control to the Shutdown permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Shutdown' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts. If administrative user accounts have direct access to administrative roles, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'. These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Shutdown' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Shutdown' 
AND who.name NOT LIKE '##MS%##'
AND who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
who.name
;
GO

If any user accounts have direct access to the 'Shutdown' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Shutdown' permission access from the account that has direct access by running the following script:


USE master

REVOKE SHUTDOWN TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41285</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53767r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-004100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the View server state permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'View server state' permission is a high server-level privilege that must only granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'View server state' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'View server state' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'View server state' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'View server state' permission access from the role that is not authorized by executing the following query:


REVOKE View server state TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41286</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53768r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-004000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter trace permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter trace' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'Alter trace' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter trace' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter trace' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter trace' permission access from the role that is not authorized by executing the following query:


REVOKE Alter trace TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41287</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53769r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-003900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Unsafe assembly permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Unsafe assembly' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Unsafe assembly' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Unsafe assembly'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Unsafe assembly' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Unsafe assembly' permission access from the account that has direct access by running the following script:


USE master

REVOKE UNSAFE ASSEMBLY TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41288</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53770r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-003800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Control server permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Control server' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'Control server' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Control server' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Control server' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Control server' permission access from the role that is not authorized by executing the following query:


REVOKE Control server TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41289</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53771r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-003700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Create server role permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Create server role' permission is a high server-level privilege that must only be granted to individual administration accounts through roles.  This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'. These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Create server role' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Create server role'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Create server role' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Create server role' permission access from the account that has direct access by running the following script:


USE master

REVOKE CREATE SERVER ROLE TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41290</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53772r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-003600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter any server role permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations, or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter any server role' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. If the 'Alter any server role' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter any server role' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any server role'
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any server role' permission access from the role that is not authorized by executing the following query:


REVOKE Alter any server role TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41291</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53773r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-003500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter Settings permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter Settings' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'Alter Settings' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter Settings' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter Settings' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter Settings' permission access from the role that is not authorized by executing the following query:


REVOKE Alter Settings TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41292</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53774r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-003400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Authenticate server permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations, or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Authenticate server' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. If the 'Authenticate server' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Authenticate server' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Authenticate server' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Authenticate server' permission access from the role that is not authorized by executing the following query:


REVOKE Authenticate server TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41293</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53775r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-003300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Create any database permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Create any database' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'Create any database' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Create any database' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Create any database' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Create any database' permission access from the role that is not authorized by executing the following query:


REVOKE Create any database TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41294</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53776r6_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-003200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the View server state permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'View server state' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'View server state' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'View server state'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user account has direct access to the 'View server state' permission, and the need for this has not been documented and approved, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Document any necessary exceptions, and obtain the appropriate approval.

Remove the 'View server state' permission access from an account that has direct access by running the following script:

USE master;
REVOKE VIEW SERVER STATE TO &lt;'account name'&gt;;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41295</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53777r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-003100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the Alter any server role permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'Alter any server role' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'Alter any server role' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any server role'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'Alter any server role' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any server role' permission access from the account that has direct access by running the following script:


USE master

REVOKE ALTER ANY SERVER ROLE TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41296</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53778r5_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-003000</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the View any definition permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'View any definition' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'.  These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'View any definition' by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'View any definition'
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
       who.name
;
GO

If any user accounts have direct access to the 'View any definition' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT 
    what.permission_name AS [Permission Name],
    what.state_desc AS [Permission State],
    who.name AS [Principal Name],
    who.type_desc AS [Principal Type],
    who.is_disabled AS [Principal Is Disabled]
FROM 
    sys.server_permissions what 
    INNER JOIN sys.server_principals who
        ON who.principal_id = what.grantee_principal_id
WHERE
    what.permission_name IN
    (
    'Administer bulk operations',
    'Alter any availability group',
    'Alter any connection',
    'Alter any credential',
    'Alter any database',
    'Alter any endpoint ',
    'Alter any event notification ',
    'Alter any event session ',
    'Alter any linked server',
    'Alter any login',
    'Alter any server audit',
    'Alter any server role',
    'Alter resources',
    'Alter server state ',
    'Alter Settings ',
    'Alter trace',
    'Authenticate server ',
    'Control server',
    'Create any database ',
    'Create availability group',
    'Create DDL event notification',
    'Create endpoint',
    'Create server role',
    'Create trace event notification',
    'External access assembly',
    'Shutdown',
    'Unsafe Assembly',
    'View any database',
    'View any definition',
    'View server state'
    )
AND    who.name NOT LIKE '##MS%##'
AND    who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
    what.permission_name,
    who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'View any definition' permission access from the account that has direct access by running the following script:


USE master

REVOKE VIEW ANY DEFINITION TO &lt;'account name'&gt;

GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41297</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53779r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-002900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter any connection permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations, or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter any connection' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. If the 'Alter any connection' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter any connection' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any connection' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any connection' permission access from the role that is not authorized by executing the following query:


REVOKE Alter any connection  TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41298</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53780r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-002800</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter any credential permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations, or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter any credential' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. If the 'Alter any credential' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter any credential' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any credential' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any credential' permission access from the role that is not authorized by executing the following query:


REVOKE Alter any credential TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41299</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53781r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-002700</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter any database permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations, or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter any database' permission is a high server-level privilege that must only be granted to individual administration accounts through roles If the 'Alter any database' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter any database' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any database' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any database' permission access from the role that is not authorized by executing the following query:


REVOKE Alter any database TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53782r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-002600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter any endpoint permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations, or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter any endpoint' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. If the 'Alter any endpoint' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter any endpoint' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any endpoint' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any endpoint' permission access from the role that is not authorized by executing the following query:


REVOKE Alter any endpoint TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41302</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53784r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-002400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter any event session permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations, or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter any event session' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. If the 'Alter any event session' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter any event session' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter any event session' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any event session' permission access from the role that is not authorized by executing the following query:


REVOKE Alter any event session TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41303</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53785r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-002300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict Alter server state permissions to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter server state' permission is a high server-level privilege that must only be granted to individual administration accounts through roles, and users who have access must require this privilege to accomplish the organizational missions and/or functions. If the 'Alter server state' permissions are granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE.  Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission.  If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter server state' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. 

Obtain the list of roles with that permission by running the following query:

SELECT 
       who.name AS [Principal Name],
       who.type_desc AS [Principal Type],
       who.is_disabled AS [Principal Is Disabled],
       what.state_desc AS [Permission State],
       what.permission_name AS [Permission Name]
FROM 
       sys.server_permissions what 
       INNER JOIN sys.server_principals who
              ON who.principal_id = what.grantee_principal_id
WHERE
       what.permission_name = 'Alter server state' 
AND    who.type_desc = 'SERVER_ROLE'
ORDER BY
       who.name
;
GO 

If any role has 'Grant', 'With Grant' or 'Deny' privileges on this permission and users with that role are not authorized to have the permission, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter server state' permission access from the role that is not authorized by executing the following query:


REVOKE Alter server state TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41304</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53786r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-002200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce non-DAC policies over users and resources where the policy rule set for each policy specifies access control information (i.e., position, nationality, age, project, time of day).</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Non-DAC controls are determined by policy makers and are managed centrally or by a central authority. These controls must not be changed at the discretion of ordinary application users. Data protection requirements may result in a non-DAC policy being specified as part of the application design. Non-DACs are employed at the application level to restrict and control access to application data, thereby providing increased information security for the organization.

SQL Server Non-DAC is maintained through the use of Roles. Roles are set up within SQL Server to grant user accounts read and/or write permissions to system objects: databases, tables, columns, etc. After a role is created, user accounts can be assigned to a role granting them permissions of that role.

If users have permissions to database objects that they are not authorized to have, the user account that has access to the unauthorized database object must be removed from the role that grants that access. Policy rule sets would be developed to establish that each user receives only the information to which the user is authorized.

Frequently, roles grant access to multiple privileges; if a user is authorized and determined to need access to authorized privilege granted by a role, and unauthorized for other privileges of that same role, it may be necessary to split the privileges of one role into two roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check for direct user assignment to server permissions by running the following script:
/**********************************************************************************
LIST ALL DIRECT SERVER PERMISSIONS TO ANY ACCOUNT EXCEPT
SYSTEM ADMINISTRATOR ACCOUNTS.  DO NOT LIST ROLES.
***********************************************************************************/
DECLARE @admin_Account_name sysname
SET @admin_Account_name = 'NO administrator account found'
DECLARE @server_name sysname
SET @server_name = 'NO Server found'

SELECT @server_name = name FROM sys.servers
WHERE server_id = 0
SET @admin_Account_name = @server_name + '\Administrator'

SELECT pe.grantee_principal_id
, pr.type AS 'Grantee_Type'
, pr.name AS 'Grantee_Name'
, pe.type
, pe.permission_name
, pe.state
, pe.state_desc
FROM sys.server_permissions pe
JOIN sys.server_principals pr
ON pe.grantee_principal_id = pr.principal_id
JOIN sys.server_principals ps
ON pe.grantor_principal_id = ps.principal_id
LEFT JOIN sys.server_principals us
ON us.principal_id = pe.major_id
WHERE pr.type IN ('K', 'S', 'U')
AND pe.grantee_principal_id &gt; 10
AND NOT pr.name IN ('##MS_PolicyEventProcessingLogin##', '##MS_PolicyTsqlExecutionLogin##',
'NT AUTHORITY\NETWORK SERVICE', 'NT AUTHORITY\SYSTEM', 'NT SERVICE\MSSQLSERVER',
'NT SERVICE\SQLSERVERAGENT', 'NT SERVICE\SQLWriter', 'NT SERVICE\Winmgmt')
AND NOT pr.name = @admin_Account_name
AND NOT pe.permission_name = 'connect sql'
ORDER BY CASE pr.type
WHEN 'K' THEN 1
WHEN 'S' THEN 2
WHEN 'U' THEN 3
ELSE 4
END;
GO

If any user account listed indicates direct access to any server permission, this is a finding.

Obtain the list of available user-defined server roles from system documentation.

Obtain the list of available user-defined server roles from the SQL Server system by running the following script:
/**********************************************************************************
 LIST ALL INDIRECT (via ROLES) ACCESS TO THE SERVER PERMISSION.
 ***********************************************************************************/
DECLARE @admin_Account_name sysname
SET @admin_Account_name = 'NO admin ACCOUNT found'
DECLARE @server_name sysname
SET @server_name = 'NO Server found'

SELECT @server_name = name FROM sys.servers
WHERE server_id = 0
SET @admin_Account_name = @server_name + '\Administrator'

SELECT pe.grantee_principal_id
, pr.type AS 'Grantee_Type'
, pr.name AS 'Grantee_Name'
, pe.type
, pe.permission_name
, pe.state
, pe.state_desc
FROM sys.server_permissions pe
JOIN sys.server_principals pr
ON pe.grantee_principal_id = pr.principal_id
JOIN sys.server_principals ps
ON pe.grantor_principal_id = ps.principal_id
LEFT JOIN sys.server_principals us
ON us.principal_id = pe.major_id
WHERE pr.type IN ('R')
AND pe.grantee_principal_id &gt; 10
AND NOT pr.name IN ('##MS_PolicyEventProcessingLogin##', '##MS_PolicyTsqlExecutionLogin##',
'NT AUTHORITY\NETWORK SERVICE', 'NT AUTHORITY\SYSTEM', 'NT SERVICE\MSSQLSERVER',
'NT SERVICE\SQLSERVERAGENT', 'NT SERVICE\SQLWriter', 'NT SERVICE\Winmgmt')
AND NOT pr.name = @admin_Account_name
AND NOT pe.permission_name = 'connect sql'
ORDER BY CASE pe.state
WHEN 'D' THEN 1
WHEN 'W' THEN 2
WHEN 'G' THEN 3
ELSE 4
END;
GO

Obtain the list of user role assignments in the system documentation.

Check all SQL Server user-defined server roles for authorized and documented permission assignments. Repeat steps for each user-defined server role.
Navigate to SQL Server Management Studio &gt;&gt; Object Explorer &gt;&gt; &lt;'SQL Server name'&gt; &gt;&gt; Security &gt;&gt; Server Roles &gt;&gt; right click &lt;'user-defined server role name'&gt; &gt;&gt; Properties &gt;&gt; Members.

If both user-defined role(s) and user(s) are listed as "Member of this role", this is a propagation of access rights, and this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Add the user as a member of the user-defined server role within the system documentation.

Remove the user from direct access to server permission by running the following script:
USE master
REVOKE &lt;'server permission name'&gt; TO &lt;'account name'&gt; CASCADE

Remove the user from user-defined role access by running the following script:
USE master
ALTER SERVER ROLE [&lt;'server role name'&gt;] DROP MEMBER &lt;'user name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41305</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000292-DB-000138</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53787r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-023300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must notify appropriate individuals when accounts are modified.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Once an attacker establishes initial access to a system, they often attempt to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to modify an existing account for later use.

Notification of account creation is one method and best practice for mitigating this risk. A comprehensive account management process will ensure an audit trail which documents the creation of application user accounts and notifies administrators and/or application owners exist. Such a process greatly reduces the risk that accounts will be surreptitiously created and provides logging that can be used for forensic purposes.

To address the multitude of policy based access requirements, many application developers choose to integrate their applications with enterprise level authentication/access mechanisms that meet or exceed access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:
     SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);
All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement. 
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:
     SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
     14, 15, 18, 20, 
     102, 103, 104, 105, 106, 107, 108, 109, 110, 
     111, 112, 113, 115, 116, 117, 118, 
     128, 129, 130, 
     131, 132, 133, 134, 135, 
     152, 153, 
     170, 171, 172, 173, 175, 176, 177, 178.
If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces.  However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)  
Use the following query to obtain a list of all event IDs, and their meaning:
     SELECT * FROM sys.trace_events; 
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements.  However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated.  They will be removed at some point after SQL Server 2014.  The replacement feature is Extended Events.  If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001684</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41306</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000027-DB-000186</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53788r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-001900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must automatically audit account modification.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Once an attacker establishes initial access to a system, they often attempt to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to simply modify an existing account. 

Auditing of account modification is one method and best practice for mitigating this risk. A comprehensive application account management process ensures an audit trail automatically documents the modification of application user accounts and, as required, notifies administrators, application owners, and/or appropriate individuals. Applications must provide this capability directly, leverage complimentary technology providing this capability, or a combination thereof.

Automated account-auditing processes greatly reduce the risk that accounts will be surreptitiously modified, and provides logging that can be used for forensic purposes.  

To address the multitude of policy based access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access mechanisms meeting or exceeding access control policy requirements.  Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:
     SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);
All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement. 
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:
     SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
     14, 15, 18, 20, 
     102, 103, 104, 105, 106, 107, 108, 109, 110, 
     111, 112, 113, 115, 116, 117, 118, 
     128, 129, 130, 
     131, 132, 133, 134, 135, 
     152, 153, 
     170, 171, 172, 173, 175, 176, 177, 178.
If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces.  However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)  
Use the following query to obtain a list of all event IDs, and their meaning:
     SELECT * FROM sys.trace_events; 
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements.  However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated.  They will be removed at some point after SQL Server 2014.  The replacement feature is Extended Events.  If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001403</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41307</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000019-DB-000197</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53789r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-001600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must ensure that remote sessions that access an organization-defined list of security functions and security-relevant information are audited.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remote access is any access to an organizational information system by a user (or an information system) communicating through an external, non-organization-controlled network (e.g., the Internet). Examples of remote access methods include dial-up, broadband, and wireless.

Remote network and system access is accomplished by leveraging common communication protocols to establish a remote connection. These connections will typically originate over either the public Internet or the Public Switched Telephone Network (PSTN). Neither of these internetworking mechanisms is private or secure, and they do not by default restrict access to networked resources once connectivity is established.

Numerous best practices are employed to protect remote connections, such as utilizing encryption to protect data sessions and firewalls to restrict and control network connectivity. In addition to these protections, auditing must also be utilized in order to track system activity, assist in diagnosing system issues, and provide evidence needed for forensic investigations post security incident.
</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Check to see that all required events are being audited.
From the query prompt:
     SELECT DISTINCT traceid FROM sys.fn_trace_getinfo(0);
All currently defined traces for the SQL server instance will be listed. If no traces are returned, this is a finding.

Determine the trace(s) being used for the auditing requirement. 
In the following, replace # with a trace ID being used for the auditing requirements.
From the query prompt:
     SELECT DISTINCT(eventid) FROM sys.fn_trace_geteventinfo(#);
The following required event IDs should be listed:
     14, 15, 18, 20, 
     102, 103, 104, 105, 106, 107, 108, 109, 110, 
     111, 112, 113, 115, 116, 117, 118, 
     128, 129, 130, 
     131, 132, 133, 134, 135, 
     152, 153, 
     170, 171, 172, 173, 175, 176, 177, 178.
If any of the audit event IDs required above is not listed, this is a finding.

Notes:
1. It is acceptable to have the required event IDs spread across multiple traces, provided all of the traces are always active, and the event IDs are grouped in a logical manner.
2. It is acceptable, from an auditing point of view, to include the same event IDs in multiple traces.  However, the effect of this redundancy on performance, storage, and the consolidation of audit logs into a central repository, should be taken into account.
3. It is acceptable to trace additional event IDs. This is the minimum list.
4. Once this check is satisfied, the DBA may find it useful to disable or modify the default trace that is set up by the SQL Server installation process. (Note that the Fix does NOT include code to do this.)  
Use the following query to obtain a list of all event IDs, and their meaning:
     SELECT * FROM sys.trace_events; 
5. Because this check procedure is designed to address multiple requirements/vulnerabilities, it may appear to exceed the needs of some individual requirements.  However, it does represent the aggregate of all such requirements.
6. Microsoft has flagged the trace techniques and tools used in this Check and Fix as deprecated.  They will be removed at some point after SQL Server 2014.  The replacement feature is Extended Events.  If Extended Events are in use, and cover all the required audit events listed above, this is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Create a trace that meets all auditing requirements.

The script provided in the supplemental file, Trace.sql, can be used to do this; edit it as necessary to capture any additional, locally defined events.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002186</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41311</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000001-DB-000031</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53793r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-000100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The number of concurrent SQL Server sessions for each system account must be limited.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>A variety of technologies exist to limit or, in some cases, eliminate the effects of DoS attacks. For example, boundary protection devices can filter certain types of packets to protect devices on an organization’s internal network from being directly affected by DoS attacks.

One way SQL Server can limit exposure to DoS attacks is to restrict the number of connections that can be opened by a single user. SQL Server supports this through the use of logon triggers.  (Note, however, that this need not be the only, or even the principal, means for satisfying this requirement.  Depending on the architecture and capabilities of the network and application, a network device or an application may be more suitable for providing this protection.)

When determining the appropriate values for this limit, take the characteristics of the various kinds of user into account, and bear in mind that some applications and some users may need to have multiple sessions open.  For example, while a standard account using a simple application may never need more than, say, five connections, a database administrator using SQL Server Management Studio may need significantly more, because each tab in that application counts as a distinct session.

Architectural note:  In SQL Server, a count of active sessions by user can be obtained from one of the dynamic management views.   For example:

    SELECT original_login_name, count(*) 
    FROM sys.dm_exec_sessions
    WHERE is_user_process = 1
    GROUP BY original_login_name;

However, for this to return an accurate count in a logon trigger, the user would have to have the View Server State privilege.  (Without this privilege, the trigger sees information only about the current session, so would always return a count of one.)  View Server State would give that user access to a wide swath of information about the server, violating SQL2-00-004100.  One way to avoid this exposure is to create a summary table, and a view of that table that restricts each user to seeing his/her own count, and establish a frequently-run background job to refresh the table (using the above query or similar).  The logon trigger then queries the view to obtain a count that is accurate enough for most purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review the system documentation to determine whether any limits have been defined.  If not, this is a finding.

If one limit has been defined but is not applied to all users, including privileged administrative accounts, this is a finding.

If multiple limits have been defined, to accommodate different types of user, verify that together they cover all users.  If not, this is a finding. 

If a mechanism other than a logon trigger is used, verify its correct operation by the appropriate means.  If it does not work correctly, this is a finding.

Otherwise, determine if a logon trigger exists:

EITHER, in SQL Server Management Studio's Object Explorer tree: 
Expand [SQL Server Instance] &gt;&gt; Security &gt;&gt; Server Objects &gt;&gt; Triggers

OR run the query:
SELECT * FROM master.sys.server_triggers;

If no triggers are listed, this is a finding.

If triggers are listed, identify the one(s) limiting the number of concurrent sessions per user.  If none are found, this is a finding. If they are present but disabled, this is a finding.  

Examine the trigger source code for logical correctness and for compliance with the documented limit(s).  If errors or variances exist, this is a finding.

Verify that the system does execute the trigger(s) each time a user session is established.  If it does not operate correctly for all types of user, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Establish the limit(s) appropriate to the type(s) of user account accessing the SQL Server instance, and record them in the system documentation.

Implement one or more logon triggers to enforce the limit(s), without exposing the dynamic management views to general users.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000054</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-41419</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000231-DB-000154</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-53948r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-024500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The Service Master Key must be backed up, stored offline and off-site.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Backup and recovery of the Service Master Key may be critical to the complete recovery of the database. Not having this key can lead to loss of data during recovery.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review procedures for, and evidence of backup of, the SQL Server Service Master Key in the System Security Plan.

If the procedures or evidence do not exist, this is a finding.

If the procedures do not indicate offline and off-site storage of the Service Master Key, this is a finding.

If procedures do not indicate access restrictions to the Service Master Key backup, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Document and implement procedures to safely back up and store the Service Master Key. Include in the procedures methods to establish evidence of backup and storage, and careful, restricted access and restoration of the Service Master Key. Also, include provisions to store the key off-site.
BACKUP SERVICE MASTER KEY TO FILE = 'path_to_file'
ENCRYPTION BY PASSWORD = 'password'</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001199</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-43196</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-999999-DB-000209    </ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-55935r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-024600</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Domain accounts used to manage a SQL Server platform must be different from those used to manage other platforms.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Separate accounts used to manage the SQL Server platform help prevent a lateral move within an environment if SQL were to be compromised.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Determine the accounts being used to manage the SQL Server operating system.  Determine whether the same accounts are being used to manage other platforms. If the same account is used to manage more than one platform, this is a finding.
Note: If, because of the application configuration, there are multiple instances of SQL that would share a given exploit, a single account would be allowed to be used for the group and would not be considered a finding.
</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Set up and use separate domain accounts to manage the SQL Server platform.  These accounts must be different from those used to manage other platforms.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-53877</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000196-DB-000301</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-68097r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-019601</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server databases in the unclassified environment, containing sensitive information, must be encrypted using approved cryptography.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Cryptography is only as strong as the encryption modules/algorithms employed to encrypt the data.

Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data.

Data files that are not encrypted are vulnerable to theft. When data files are not encrypted, they can be copied and opened on a separate system. The data can be compromised without the information owner's knowledge that the theft has even taken place.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If the system exists in the Classified environment, this is NA.

For each database under the SQL Server instance, review the system documentation to determine whether the database holds sensitive information. If it does not, this is not a finding.

If it does handle sensitive information, review the system documentation and configuration to determine whether the sensitive information is protected by NIST-approved cryptography.  If not, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Configure SQL Server to encrypt sensitive data stored in each database. Use only NIST-certified cryptography to provide encryption.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002450</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-54859</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000133-DB-000207</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-69105r5_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-025100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The OS must limit privileges to the SQL Server Data Root directory and its subordinate directories and files.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Default database file locations should be protected from unauthorized access.  The system databases, essential to SQL Server operation, are typically located here.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the SQL Server default data directory location: from a command prompt, open the registry editor by typing regedit.exe, and pressing [ENTER]. Navigate to the following registry location:
HKEY_LOCAL_MACHINE
&gt;&gt; SOFTWARE
&gt;&gt; Microsoft
&gt;&gt; Microsoft SQL Server
&gt;&gt; [INSTANCE NAME]
&gt;&gt; Setup
&gt;&gt; SqlDataRoot

In the registry tree, the [INSTANCE NAME] for a SQL Server 2012 database engine instance is normally shown as "MSSQL11" followed by a period and the name that was specified for the SQL Server service at installation time. If multiple SQL Server instances are installed, each will have its own [INSTANCE NAME] node and subtree in the registry.

The value in the Data column for the SqlDataRootregistry entry is the default file system path for the SQL Server 2012 data files. Navigate to that folder location using a command prompt or Windows Explorer. The following instructions assume that Windows Explorer is used.

Determine whether a DefaultData registry entry also exists. Repeat the above for the path:
...[INSTANCE NAME]
&gt;&gt; MSSQLServer
&gt;&gt; DefaultData

Verify that the identified folder(s) and their contents have only authorized privileges. Right-click the folder, click Properties. On the Security tab, verify that at most the following permissions are present:
CREATOR OWNER (Full Control)
System (Full control)
SQL Server Service SID OR Service Account (Full Control) [Notes 1, 2]
System Administrators (Full Control) [Note 3]
SQL Server Analysis Services (SSAS) Service SID or Service Account, if SSAS is in use (Read &amp; Execute) [Notes 1, 2]
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write) [Notes 1, 2, 4]
SQL Server FD Launcher Service SID OR Service Account, if full-text indexing is in use. (Read, Execute, Write) [Notes 1, 2]
If any less restrictive permissions are present (and not specifically justified and approved), this is a finding.

Right-click each folder, if any, under the above folder(s); click Properties. On the Security tab, verify that at most the permissions listed in the preceding paragraph are present. If any less restrictive permissions are present (and not specifically justified and approved), this is a finding.

-----

Note 1: It is highly advisable to use a separate account for each service. When installing SQL Server in single-server mode, you can opt to have these provisioned for you. These automatically-generated accounts are referred to as virtual accounts. Each virtual account has an equivalent Service SID, with the same name. The installer also creates an equivalent SQL Server login, also with the same name. Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control because these permissions are available only to the specific service when it is running and not in any other context. (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.) For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.110).aspx.

Note 2: Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names". (What you have just typed in is the first 16 characters of the name. At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches. If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click OK
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click OK
8) Click OK
9) Permission like a normal user from here

Note 3: In the interest of separation of responsibilities with least privilege, consider granting Full Control only to SQL Database Administrators (create a custom group for these) and providing the local Administrators group with Read access only.

Note 4: It may also be necessary to grant the SQL Server Agent permission to Delete the \Log directory and its contents.  This is not a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Navigate to the identified folder location(s). Right-click the folder, click Properties. On the Security tab, modify the security permissions so that files and folders have at most the permissions listed below. Right-click each folder under the identified folder(s), click Properties. On the Security tab, modify the security permissions so that at most the following permissions are present.
CREATOR OWNER (Full Control)
System (Full control)
SQL Server Service SID OR Service Account (Full Control) [Notes 1, 2]
System Administrators (Full Control) [Note 3]
SQL Server Analysis Services (SSAS) Service SID or Service Account, if SSAS is in use (Read &amp; Execute) [Notes 1, 2]
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write) [Notes 1, 2, 4]
SQL Server FD Launcher Service SID OR Service Account, if full-text indexing is in use. (Read, Execute, Write) [Notes 1, 2]

-----

Note 1: It is highly advisable to use a separate account for each service. When installing SQL Server in single-server mode, you can opt to have these provisioned for you. These automatically-generated accounts are referred to as virtual accounts. Each virtual account has an equivalent Service SID, with the same name. The installer also creates an equivalent SQL Server login, also with the same name. Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control because these permissions are available only to the specific service when it is running and not in any other context. (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.) For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.110).aspx.

Note 2: Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names". (What you have just typed in is the first 16 characters of the name. At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches. If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click OK
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click OK
8) Click OK
9) Permission like a normal user from here

Note 3: In the interest of separation of responsibilities with least privilege, consider granting Full Control only to SQL Database Administrators (create a custom group for these) and providing the local Administrators group with Read access only.

Note 4: It may also be necessary to grant the SQL Server Agent permission to Delete the \Log directory and its contents.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001499</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-54879</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000133-DB-000207</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-69125r3_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-025200</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The OS must limit privileges to the SQL Server data directories and their subordinate directories and files.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Database files must be protected from unauthorized access.  Although default data locations are created at installation time, sites can, and will, use other directories for site-created database files to comply with best practices.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the SQL Server data directory location(s): in a tool such as SQL Server Management Studio, run the statement:
SELECT DISTINCT 
LEFT(physical_name, (LEN(physical_name) - CHARINDEX('\',REVERSE(physical_name)) + 1 )) 
AS "Database Data File Paths",
type_desc
FROM sys.master_files
WHERE database_id &gt; 4 
AND type = 0

The query result is a list of file systems locations used for databases other than the system databases.  Navigate to each of those folder locations using a command prompt or Windows Explorer.  The following instructions assume that Windows Explorer is used.


Verify that the identified folders and their contents have only authorized privileges. Right-click each folder, click Properties. On the Security tab, verify that at most the following permissions are present:
CREATOR OWNER (Full Control)
System (Full control)
SQL Server Service SID OR Service Account (Full Control)  [Notes 1, 2]  
System Administrators (Full Control)  [Note 3]
SQL Server Analysis Services (SSAS) Service SID or Service Account, if SSAS is in use (Read &amp; Execute) [Notes 1, 2]
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write)  [Notes 1, 2]  
SQL Server FD Launcher Service SID OR Service Account, if full-text indexing is in use.  (Read, Write)  [Notes 1, 2]  
If any less restrictive permissions are present (and not specifically justified and approved), this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Navigate to the identified folder location(s).  Right-click the folder, click Properties.  On the Security tab, modify the security permissions so that files and folders have at most the permissions listed below. Right-click each folder under the identified folder(s), click Properties. On the Security tab, modify the security permissions so that at most the following permissions are present.
CREATOR OWNER (Full Control)
System (Full control)
SQL Server Service SID OR Service Account (Full Control)  [Notes 1, 2]  
SQL Server Analysis Services (SSAS) Service SID or Service Account, if SSAS is in use (Read &amp; Execute) [Notes 1, 2]
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write)  [Notes 1, 2]  
SQL Server FD Launcher Service SID OR Service Account, if full-text indexing is in use.  (Read, Write)  [Notes 1, 2]  
System Administrators (Full Control)  [Note 3]


-----

Note 1:  It is highly advisable to use a separate account for each service.  When installing SQL Server in single-server mode, you can opt to have these provisioned for you.  These automatically-generated accounts are referred to as virtual accounts.  Each virtual account has an equivalent Service SID, with the same name.  The installer also creates an equivalent SQL Server login, also with the same name.  Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control because these permissions are available only to the specific service when it is running and not in any other context.  (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.)  For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.110).aspx.


Note 2:  Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names".  (What you have just typed in is the first 16 characters of the name.  At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches.  If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click OK
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click OK
8) Click OK
9) Permission like a normal user from here


Note 3:  In the interest of separation of responsibilities with least privilege, consider granting Full Control only to SQL Database Administrators (create a custom group for these) and providing the local Administrators group with Read access only.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001499</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-54881</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000133-DB-000207</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-69127r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-025300</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The OS must limit privileges to the SQL Server backup directories and files.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Backups must be protected from unauthorized deletion and modification.  They must also be protected from unauthorized use in database restoration.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the SQL Server backup directory location: from a command prompt, open the registry editor by typing regedit.exe, and pressing [ENTER]. Navigate to the following registry location: 
HKEY_LOCAL_MACHINE 
&gt;&gt; SOFTWARE 
&gt;&gt; Microsoft
&gt;&gt; Microsoft SQL Server 
&gt;&gt; [INSTANCE NAME]
&gt;&gt; MSSQLServer
&gt;&gt; BackupDirectory

In the registry tree, the [INSTANCE NAME] for a SQL Server 2012 database engine instance is normally shown as "MSSQL11" followed by a period and the name that was specified for the SQL Server service at installation time.  If multiple SQL Server instances are installed, each will have its own [INSTANCE NAME] node and subtree in the registry.

The value in the Data column for the BackupDirectory registry entry is the file system path for the SQL Server 2012 backups.  Also, review backup jobs to identify any additional directories used for backups.

Navigate to each folder location using a command prompt or Windows Explorer.  The following instructions assume that Windows Explorer is used.

Verify that backup files and folders have only authorized privileges. Right-click the backup folder, click Properties. On the Security tab, verify that at most the following permissions are present:
CREATOR OWNER (Full Control)
System (Full control)
SQL Server Service SID OR Service Account (Full Control)  [Notes 1, 2]  
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write)  [Notes 1, 2]  
SQL Server FD Launcher Service SID OR Service Account, if full-text indexing is in use.  (Read, Write)  [Notes 1, 2]  
System Administrators (Full Control)  [Note 3]
SQL Server Analysis Services (SSAS) Service SID or Service Account, if SSAS is in use (Read &amp; Execute) [Notes 1, 2]
If any less restrictive permissions are present (and not specifically justified and approved), this is a finding.

Right-click each folder, if any, under the backup folder; click Properties. On the Security tab, verify that at most the permissions listed in the preceding paragraph are present.  If any less restrictive permissions are present (and not specifically justified and approved), this is a finding.


-----

Note 1: It is highly advisable to use a separate account for each service. When installing SQL Server in single-server mode, you can opt to have these provisioned for you. These automatically generated accounts are referred to as virtual accounts. Each virtual account has an equivalent Service SID, with the same name. The installer also creates an equivalent SQL Server login, also with the same name. Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control because these permissions are available only to the specific service when it is running and not in any other context. (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.) For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.110).aspx.

Note 2: Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names". (What you have just typed in is the first 16 characters of the name. At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches. If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click "OK"
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click "OK"
8) Click "OK"
9) Permission like a normal user from here

Note 3: In the interest of separation of responsibilities with least privilege, consider granting Full Control only to SQL Database Administrators (create a custom group for these) and providing the local Administrators group with Read access only.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Navigate to the SQL Server backup directory location.  Right-click the folder, click Properties.  On the Security tab, modify the security permissions, so that files and folders have at most the permissions listed below. Right-click each folder under the SQL Server backup folder, click Properties. On the Security tab, modify the security permissions, so that at most the following permissions are present.
CREATOR OWNER (Full Control)
System (Full control)
SQL Server Service SID OR Service Account (Full Control)  [Notes 1, 2]  
SQL Server SQL Agent Service SID OR Service Account, if SQL Server Agent is in use. (Read, Execute, Write)  [Notes 1, 2]  
SQL Server FD Launcher Service SID OR Service Account, if full-text indexing is in use.  (Read, Write)  [Notes 1, 2]  
System Administrators (Full Control)  [Note 3]
SQL Server Analysis Services (SSAS) Service SID or Service Account, if SSAS is in use (Read &amp; Execute) [Notes 1, 2]


-----

Note 1: It is highly advisable to use a separate account for each service. When installing SQL Server in single-server mode, you can opt to have these provisioned for you. These automatically generated accounts are referred to as virtual accounts. Each virtual account has an equivalent Service SID, with the same name. The installer also creates an equivalent SQL Server login, also with the same name. Applying folder and file permissions to Service SIDs, rather than to domain accounts or local computer accounts, provides tighter control because these permissions are available only to the specific service when it is running and not in any other context. (However, when using failover clustering, a domain account must be specified at installation, rather than a virtual account.) For more on this topic, see http://msdn.microsoft.com/en-us/library/ms143504(v=sql.110).aspx.

Note 2: Tips for adding a service SID/virtual account to a folder's permission list.
1) In Windows Explorer, right-click on the folder and select "Properties."
2) Select the "Security" tab
3) Click "Edit"
4) Click "Add"
5) Click "Locations"
6) Select the computer name
7) Search for the name
7.a) SQL Server Service
7.a.i) Type "NT SERVICE\MSSQL" and click "Check Names". (What you have just typed in is the first 16 characters of the name. At least one character must follow "NT SERVICE\"; you will be presented with a list of all matches. If you have typed in the full, correct name, step 7.a.ii is bypassed.)
7.a.ii) Select the "MSSQL$&lt;instance name&gt;" user and click "OK"
7.b) SQL Agent Service
7.b.i) Type "NT SERVICE\SQL" and click "Check Names"
7.b.ii) Select the "SQLAgent$&lt;instance name&gt;" user and click "OK"
8) Click "OK"
9) Permission like a normal user from here

Note 3: In the interest of separation of responsibilities with least privilege, consider granting Full Control only to SQL Database Administrators (create a custom group for these) and providing the local Administrators group with Read access only.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001499</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-55805</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-70059r4_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-004400</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must not grant users direct access to the View Any Database permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

Privileges granted outside of SQL Server's role-based account assignments are more likely to go unmanaged and without oversight of granted access. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.

SQL Server's 'View Any Database' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. This administrative privilege must not be assigned directly to administrative user accounts (or any other user accounts). If any user accounts have direct access to administrative privileges, this access must be removed.

Note that this does not apply to logins with names of the form '##MS...##'. These accounts are internal-use system principals provisioned by the DBMS, and required by it for specific purposes.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of accounts that have direct access to the server-level permission 'View Any Database' by running the following query:

SELECT
who.name AS [Principal Name],
who.type_desc AS [Principal Type],
who.is_disabled AS [Principal Is Disabled],
what.state_desc AS [Permission State],
what.permission_name AS [Permission Name]
FROM
sys.server_permissions what
INNER JOIN sys.server_principals who
ON who.principal_id = what.grantee_principal_id
WHERE
what.permission_name = 'View Any Database' 
AND who.name NOT LIKE '##MS%##'
AND who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
who.name
;
GO

If any user accounts have direct access to the 'View Any Database' permission, this is a finding.

Alternatively, to provide a combined list for all requirements of this type:
SELECT
      what.permission_name AS [Permission Name],
      what.state_desc AS [Permission State],
      who.name AS [Principal Name],
      who.type_desc AS [Principal Type],
      who.is_disabled AS [Principal Is Disabled]
FROM
      sys.server_permissions what
      INNER JOIN sys.server_principals who
            ON who.principal_id = what.grantee_principal_id
WHERE
      what.permission_name IN
      (
      'Administer bulk operations',
      'Alter any availability group',
      'Alter any connection',
      'Alter any credential',
      'Alter any database',
      'Alter any endpoint ',
      'Alter any event notification ',
      'Alter any event session ',
      'Alter any linked server',
      'Alter any login',
      'Alter any server audit',
      'Alter any server role',
      'Alter resources',
      'Alter server state ',
      'Alter Settings ',
      'Alter trace',
      'Authenticate server ',
      'Control server',
      'Create any database ',
      'Create availability group',
      'Create DDL event notification',
      'Create endpoint',
      'Create server role',
      'Create trace event notification',
      'External access assembly',
      'Shutdown',
      'Unsafe Assembly',
      'View any database',
      'View any definition',
      'View server state'
      )
AND who.name NOT LIKE '##MS%##'
AND who.type_desc &lt;&gt; 'SERVER_ROLE'
ORDER BY
      what.permission_name,
      who.name
;
GO</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'View Any Database' permission access from the account that has direct access by running the following script:

USE master
REVOKE VIEW ANY DATABASE TO &lt;'account name'&gt;
GO   </ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>true</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001499</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS></COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-59857</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000063-DB-000018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-74287r1_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-009710</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Owners of privileged accounts must use non-privileged accounts for non-administrative activities.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Use of privileged accounts for non-administrative purposes puts data at risk of unintended or unauthorized loss, modification, or exposure. In particular, DBA accounts, if used for non-administration application development or application maintenance, can lead to excessive privileges where privileges are inherited by object owners. It may also lead to loss or compromise of application data where the elevated privileges bypass controls designed in and provided by applications.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Review procedures and practices.  If there is not a policy requiring owners of privileged accounts to use non-privileged accounts for non-administrative activities, this is a finding.  If there is evidence that owners of privileged accounts do not adhere to this policy, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Require that DBAs and other privileged users use non-privileged accounts for non-administrative activities.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-59915</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000035-DB-000007</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-74345r1_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-002500</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL Server must enforce access control policies to restrict the Alter any event notification permission to only authorized roles.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The concept of least privilege must be applied to SQL Server processes, ensuring that the processes operate at privilege levels no higher than necessary to accomplish required organizational missions and/or functions. Organizations consider the creation of additional processes, roles, and SQL Server accounts as necessary to achieve least privilege. Organizations also apply least privilege concepts to the design, development, implementation, and operations of SQL Server and the OS.

Unauthorized access to sensitive data or SQL Server control may compromise the confidentiality of personnel privacy, threaten national security, compromise a variety of other sensitive operations, or lead to a loss of system control. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.

SQL Server's 'Alter any event notification' permission is a high server-level privilege that must only be granted to individual administration accounts through roles. If the 'Alter any event notification' permission is granted to roles that are unauthorized to have this privilege, then this access must be removed.

Additionally, the permission must not be denied to a role, because that could disable a user's legitimate access via another role.

The fix for this vulnerability specifies the use of REVOKE. Be aware that revoking a permission that is currently denied to a role or user does not necessarily disable the permission. If the user or role can inherent the permission from another role, revoking the denied permission from the user or the first role can effectively enable the inherited permission.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the list of roles that are authorized for the SQL Server 'Alter any event notification' permission and what 'Grant', 'Grant With', and/or 'Deny' privilege is authorized. Obtain the list of roles with that permission by running the following query:

SELECT
who.name AS [Principal Name],
who.type_desc AS [Principal Type],
who.is_disabled AS [Principal Is Disabled],
what.state_desc AS [Permission State],
what.permission_name AS [Permission Name]
FROM
sys.server_permissions what
INNER JOIN sys.server_principals who
ON who.principal_id = what.grantee_principal_id
WHERE
what.permission_name = 'Alter any event notification'
AND who.type_desc = 'SERVER_ROLE'
ORDER BY
who.name
;
GO </ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Remove the 'Alter any event notification' permission access from the role that is not authorized by executing the following query:

REVOKE Alter any event notification TO &lt;'role name'&gt;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-003014</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-69169</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000133-DB-000179</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-83773r1_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-015355</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Software, applications, and configuration files that are part of, or related to, the SQL Server 2012 installation must be audited.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>When dealing with change control issues, it should be noted, any changes to the hardware, software, and/or firmware components of applications and tools related to SQL Server can potentially have significant effects on the overall security of the system. Only qualified and authorized individuals shall be allowed to obtain access to components related to SQL Server for purposes of initiating changes, including upgrades and modifications.

Unmanaged changes that occur to the software libraries or configuration can lead to unauthorized or compromised installations.

Of particular note in this context is that any software installed for auditing and/or audit file management must be protected and audited.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Obtain the SQL Server software directory location: from a command prompt, open the registry editor by typing regedit.exe and pressing [ENTER]. Navigate to the following registry location:
HKEY_LOCAL_MACHINE
&gt;&gt; SOFTWARE
&gt;&gt; Microsoft
&gt;&gt; Microsoft SQL Server
&gt;&gt; [INSTANCE NAME]
&gt;&gt; Setup
&gt;&gt; SQLBinRoot

Determine the location of separate but related softare, such as audit file management tools.

Verify that files and folders that are part of, or related to, the SQL Server 2012 installation have auditing enabled. Right-click on the file/folder, click Properties. On the Security tab, click Advanced. On the Auditing tab, verify 
that the following is set up on at least one audit:
Type: All
Principal: Everyone
Access: Modify
Applies to: This Folder, subfolder, and files [where applicable]

If the required audit settings are not configured, there is a risk that unauthorized changes to the software will go undetected, and this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Include locations of all files, libraries, scripts, and executables that are part of, or related to, the SQL Server 2012 installation in the documentation.

Ensure that files and folders that are part of, or related to, the SQL Server 2012 installation have auditing enabled. Right-click on the file/folder, click Properties. On the Security tab, click Advanced. On the Auditing tab, use the Add or Edit buttons and the dialogs that follow from them, to set up the following on at least one audit:
Type: All
Principal: Everyone
Access: Modify
Applies to: This Folder, subfolder, and files [where applicable]</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002717</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-002718</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-70625</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>low</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000516-DB-999900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-85247r1_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-039100</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The SQL Server Browser service must be disabled if its use is not necessary.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The SQL Server Browser simplifies the administration of SQL Server, particularly when multiple instances of SQL Server coexist on the same computer.  It avoids the need to hard-assign port numbers to the instances and to set and maintain those port numbers in client systems.  It enables administrators and authorized users to discover database management system instances, and the databases they support, over the network.

This convenience also presents the possibility of unauthorized individuals gaining knowledge of the available SQL Server resources.  Therefore, it is necessary to consider whether the SQL Server Browser is needed.  Typically, if only a single instance is installed, using the default name (MSSQLSERVER) and port assignment (1433), the Browser is not adding any value.   The more complex the installation, the more likely SQL Server Browser is to be helpful.

This requirement is not intended to prohibit use of the Browser service in any circumstances; rather, it calls for administrators and management to consider whether the benefits of its use outweigh the potential negative consequences.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If the need for the SQL Server Browser service is documented, with appropriate approval, this is not a finding.

Open the Services tool.

Either navigate, via the Windows Start Menu and/or Control Panel, to "Administrative Tools", and select "Services" or at a command prompt, type "services.msc" and press the "Enter" key.

Scroll to "SQL Server Browser".

If its Startup Type is not shown as "Disabled", this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If SQL Server Browser is needed, document the justification and obtain the appropriate approvals.

Where SQL Server Browser is judged unnecessary, in the Services tool, double-click on "SQL Server Browser" to open its "Properties" dialog.  Set Startup Type to "Disabled".  If Service Status is "Running", click on "Stop".  Click on "OK".</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000366</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-72413</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000164-DB-000401</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-87037r1_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-038900</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If SQL Server authentication, using passwords, is employed, SQL Server must enforce the DoD standards for password complexity.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>The SQL Server Browser simplifies the administration of SQL Server, particularly when multiple instances of SQL Server coexist on the same computer.  It avoids the need to hard-assign port numbers to the instances and to set and maintain those port numbers in client systems.  It enables administrators and authorized users to discover database management system instances, and the databases they support, over the network.

This convenience also presents the possibility of unauthorized individuals gaining knowledge of the available SQL Server resources.  Therefore, it is necessary to consider whether the SQL Server Browser is needed.  Typically, if only a single instance is installed, using the default name (MSSQLSERVER) and port assignment (1433), the Browser is not adding any value.   The more complex the installation, the more likely SQL Server Browser is to be helpful.

This requirement is not intended to prohibit use of the Browser service in any circumstances; rather, it calls for administrators and management to consider whether the benefits of its use outweigh the potential negative consequences.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Run the statement:
SELECT
    name
FROM 
    sys.sql_logins 
WHERE
    type_desc = 'SQL_LOGIN'
    AND is_disabled = 0
    AND is_policy_checked = 0 ; 

If no account names are listed, this is not a finding.

For each account name listed, determine whether it is documented as requiring exemption from the standard password complexity rules.  If it is not, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>For each SQL Server Login identified in the Check as out of compliance:
In SQL Server Management Studio Object Explorer, navigate to &lt;SQL Server instance name&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; &lt;login name&gt;.  Right-click, select Properties.  Select the check box Enforce Password Policy.  Click OK.

Alternatively, for each identified Login, run the statement:
ALTER LOGIN &lt;login name&gt; CHECK_POLICY = ON;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000192</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000193</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000194</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000195</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000205</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-001619</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
			<VULN>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Num</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>V-72415</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Severity</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>medium</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Group_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SRG-APP-000164-DB-000401</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_ID</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SV-87039r2_rule</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Ver</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>SQL2-00-038910</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Rule_Title</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>If SQL Server authentication, using passwords, is employed, SQL Server must enforce the DoD standards for password lifetime.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Vuln_Discuss</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Windows domain/enterprise authentication and identification must be used (SQL2-00-023600). Native SQL Server authentication may be used only when circumstances make it unavoidable; and must be documented and AO-approved.

The DoD standard for authentication is DoD-approved PKI certificates. Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.

In such cases, the DoD standards for password lifetime must be implemented.

The requirements for password lifetime are:
a. Password lifetime limits for interactive accounts:  Minimum 24 hours, Maximum 60 days
b. Password lifetime limits for non-interactive accounts:  Minimum 24 hours, Maximum 365 days
c. Number of password changes before an old one may be reused:  Minimum of 5.

To enforce this in SQL Server, configure each DBMS-managed login to inherit the rules from Windows.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>IA_Controls</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Run the statement:
SELECT
name
FROM
sys.sql_logins
WHERE
type_desc = 'SQL_LOGIN'
AND is_disabled = 0
AND is_expiration_checked = 0;

If no account names are listed, this is not a finding.

For each account name listed, determine whether it is documented as requiring exemption from the standard password lifetime rules, if it is not, this is a finding.</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Fix_Text</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>For each SQL Server Login identified in the Check as out of compliance:
In SQL Server Management Studio Object Explorer, navigate to &lt;SQL Server instance name&gt; &gt;&gt; Security &gt;&gt; Logins &gt;&gt; &lt;login name&gt;. Right-click, select Properties. Select the check box Enforce Password Expiration. Click OK.

Alternatively, for each identified Login, run the statement:
ALTER LOGIN &lt;login name&gt; CHECK_EXPIRATION = ON;</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Positives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>False_Negatives</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Documentable</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>false</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigations</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Potential_Impact</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Third_Party_Tools</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Mitigation_Control</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Responsibility</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Security_Override_Guidance</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA></ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Check_Content_Ref</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>DPMS_XCCDF_Benchmark_Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide.xml</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Weight</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>10.0</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>Class</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Unclass</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>STIGRef</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>Microsoft SQL Server 2012 Database Instance Security Technical Implementation Guide :: Release: 17 Benchmark Date: 27 Apr 2018</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>TargetKey</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>2561</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000198</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STIG_DATA>
					<VULN_ATTRIBUTE>CCI_REF</VULN_ATTRIBUTE>
					<ATTRIBUTE_DATA>CCI-000199</ATTRIBUTE_DATA>
				</STIG_DATA>
				<STATUS>NotAFinding</STATUS>
				<FINDING_DETAILS>not found</FINDING_DETAILS>
				<COMMENTS>This is a Test</COMMENTS>
				<SEVERITY_OVERRIDE></SEVERITY_OVERRIDE>
				<SEVERITY_JUSTIFICATION></SEVERITY_JUSTIFICATION>
			</VULN>
		</iSTIG>
	</STIGS>
</CHECKLIST>